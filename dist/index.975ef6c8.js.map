{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,WAAW;AAAK,IAAI,WAAW;AAAK,IAAI,aAAa;AAAM,IAAI,eAAe;AAAmB,IAAI,cAAc;AAAM,OAAO,MAAM,CAAC,aAAa,GAAG;AAAmB;AAE9K,8JAA8J,GAC9J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,GACA,IAAI,aAAa;AACjB,IAAI,YAAY,OAAO,MAAM,CAAC,MAAM;AACpC,SAAS,OAAO,UAAU;IACxB,UAAU,IAAI,CAAC,IAAI,EAAE;IACrB,IAAI,CAAC,GAAG,GAAG;QACT,MAAM,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW;QACvC,kBAAkB,EAAE;QACpB,mBAAmB,EAAE;QACrB,QAAQ,SAAU,EAAE;YAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,YAAa;QAChD;QACA,SAAS,SAAU,EAAE;YACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;QAC9B;IACF;IACA,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG;AACtC;AACA,OAAO,MAAM,CAAC,MAAM,GAAG;AACvB,OAAO,MAAM,CAAC,OAAO,GAAG,CAAC;AACzB,IAAI,cAAc,0BAA0B,KAAI,eAAe,0BAA0B,KAAI,gBAAgB,mCAAmC,KAAI,eAAe,mCAAmC;AACtM,SAAS;IACP,OAAO,YAAa,CAAA,SAAS,QAAQ,CAAC,OAAO,CAAC,YAAY,IAAI,SAAS,QAAQ,GAAG,WAAU;AAC9F;AACA,SAAS;IACP,OAAO,YAAY,SAAS,IAAI;AAClC;AAEA,wCAAwC;AACxC,IAAI,SAAS,OAAO,MAAM,CAAC,MAAM;AACjC,IAAI,AAAC,CAAA,CAAC,UAAU,CAAC,OAAO,eAAe,AAAD,KAAM,OAAO,cAAc,aAAa;IAC5E,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,WAAW,cAAc,SAAS,QAAQ,IAAI,YAAY,CAAC;QAAC;QAAa;QAAa;KAAU,CAAC,QAAQ,CAAC,YAAY,QAAQ;IAClI,IAAI;IACJ,IAAI,aACF,KAAK,IAAI,YAAY;SAErB,IAAI;QACF,KAAK,IAAI,UAAU,WAAW,QAAQ,WAAY,CAAA,OAAO,MAAM,OAAO,EAAC,IAAK;IAC9E,EAAE,OAAO,KAAK;QACZ,IAAI,IAAI,OAAO,EACb,QAAQ,KAAK,CAAC,IAAI,OAAO;QAE3B,KAAK,CAAC;IACR;IAGF,wBAAwB;IACxB,IAAI,SAAS,OAAO,YAAY,cAAc,OAAO,WAAW,cAAc,OAAO,SAAS;IAE9F,oDAAoD;IACpD,0DAA0D;IAC1D,IAAI,oBAAoB;IACxB,IAAI;QACD,CAAA,GAAG,IAAG,EAAG;IACZ,EAAE,OAAO,KAAK;QACZ,oBAAoB,IAAI,KAAK,CAAC,QAAQ,CAAC;IACzC;IAEA,aAAa;IACb,GAAG,SAAS,GAAG,eAAgB,MAAM,wBAAwB,GAAzB;QAClC,gBAAgB,CAAC,EAAE,0BAA0B;QAC7C,iBAAiB,CAAC,EAAE,0BAA0B;QAC9C,iBAAiB,EAAE;QACnB,kBAAkB,EAAE;QACpB,IAAI,KAAK,eAAe,MAAK,KAAK,KAAK,CAAC,MAAM,IAAI;QAClD,IAAI,KAAK,IAAI,KAAK,UAChB;aACK,IAAI,KAAK,IAAI,KAAK,UAAU;YACjC,uCAAuC;YACvC,IAAI,OAAO,aAAa,aACtB;YAEF,IAAI,SAAS,KAAK,MAAM,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,OAAO,KAAK;YAE3D,oBAAoB;YACpB,IAAI,UAAU,OAAO,KAAK,CAAC,CAAA;gBACzB,OAAO,MAAM,IAAI,KAAK,SAAS,MAAM,IAAI,KAAK,QAAQ,eAAe,OAAO,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,MAAM,YAAY;YACvH;YACA,IAAI,SAAS;gBACX,QAAQ,KAAK;gBAEb,yEAAyE;gBACzE,IAAI,OAAO,WAAW,eAAe,OAAO,gBAAgB,aAC1D,OAAO,aAAa,CAAC,IAAI,YAAY;gBAEvC,MAAM,gBAAgB;gBACtB;gBAEA,8FAA8F;gBAC9F,IAAI,kBAAkB,CAAC;gBACvB,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,MAAM,EAAE,IAAK;oBAC9C,IAAI,KAAK,cAAc,CAAC,EAAE,CAAC,EAAE;oBAC7B,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;wBACxB,UAAU,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE;wBAChC,eAAe,CAAC,GAAG,GAAG;oBACxB;gBACF;YACF,OAAO;QACT;QACA,IAAI,KAAK,IAAI,KAAK,SAAS;YACzB,+BAA+B;YAC/B,KAAK,IAAI,kBAAkB,KAAK,WAAW,CAAC,IAAI,CAAE;gBAChD,IAAI,QAAQ,eAAe,SAAS,GAAG,eAAe,SAAS,GAAG,eAAe,KAAK;gBACtF,QAAQ,KAAK,CAAC,4BAAkB,eAAe,OAAO,GAAG,OAAO,QAAQ,SAAS,eAAe,KAAK,CAAC,IAAI,CAAC;YAC7G;YACA,IAAI,OAAO,aAAa,aAAa;gBACnC,gCAAgC;gBAChC;gBACA,IAAI,UAAU,mBAAmB,KAAK,WAAW,CAAC,IAAI;gBACtD,aAAa;gBACb,SAAS,IAAI,CAAC,WAAW,CAAC;YAC5B;QACF;IACF;IACA,IAAI,cAAc,WAAW;QAC3B,GAAG,OAAO,GAAG,SAAU,CAAC;YACtB,IAAI,EAAE,OAAO,EACX,QAAQ,KAAK,CAAC,EAAE,OAAO;QAE3B;QACA,GAAG,OAAO,GAAG;YACX,QAAQ,IAAI,CAAC;QACf;IACF;AACF;AACA,SAAS;IACP,IAAI,UAAU,SAAS,cAAc,CAAC;IACtC,IAAI,SAAS;QACX,QAAQ,MAAM;QACd,QAAQ,GAAG,CAAC;IACd;AACF;AACA,SAAS,mBAAmB,WAAW;IACrC,IAAI,UAAU,SAAS,aAAa,CAAC;IACrC,QAAQ,EAAE,GAAG;IACb,IAAI,YAAY;IAChB,KAAK,IAAI,cAAc,YAAa;QAClC,IAAI,QAAQ,WAAW,MAAM,CAAC,MAAM,GAAG,WAAW,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG;YAClE,OAAO,GAAG,EAAE;sCACoB,EAAE,mBAAmB,MAAM,QAAQ,EAAE,2FAA2F,EAAE,MAAM,QAAQ,CAAC;AACvL,EAAE,MAAM,IAAI,EAAE;QACV,GAAG,MAAM,WAAW,KAAK;QACzB,aAAa;AACjB;AACA;AACA,oBAAa,EAAE,WAAW,OAAO,CAAC;;aAErB,EAAE,MAAM;;UAEX,EAAE,WAAW,KAAK,CAAC,GAAG,CAAC,CAAA,OAAQ,uBAAa,OAAO,UAAU,IAAI,CAAC,IAAI;;QAExE,EAAE,WAAW,aAAa,GAAG,CAAC,8CAAuC,EAAE,WAAW,aAAa,CAAC,sCAAsC,CAAC,GAAG,GAAG;;IAEjJ,CAAC;IACH;IACA,aAAa;IACb,QAAQ,SAAS,GAAG;IACpB,OAAO;AACT;AACA,SAAS;IACP,IAAI,YAAY,UACd,SAAS,MAAM;SACV,IAAI,UAAU,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,MAAM,EAC1D,OAAO,OAAO,CAAC,MAAM;AAEzB;AACA,SAAS,WAAW,MAAM,EAAE,EAAE,EAAE,mCAAmC;IACjE,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH,OAAO,EAAE;IAEX,IAAI,UAAU,EAAE;IAChB,IAAI,GAAG,GAAG;IACV,IAAK,KAAK,QACR,IAAK,KAAK,OAAO,CAAC,EAAE,CAAC,EAAE,CAAE;QACvB,MAAM,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACtB,IAAI,QAAQ,MAAM,MAAM,OAAO,CAAC,QAAQ,GAAG,CAAC,IAAI,MAAM,GAAG,EAAE,KAAK,IAC9D,QAAQ,IAAI,CAAC;YAAC;YAAQ;SAAE;IAE5B;IAEF,IAAI,OAAO,MAAM,EACf,UAAU,QAAQ,MAAM,CAAC,WAAW,OAAO,MAAM,EAAE;IAErD,OAAO;AACT;AACA,SAAS,WAAW,IAAI;IACtB,IAAI,OAAO,KAAK,YAAY,CAAC;IAC7B,IAAI,CAAC,MACH;IAEF,IAAI,UAAU,KAAK,SAAS;IAC5B,QAAQ,MAAM,GAAG;QACf,IAAI,KAAK,UAAU,KAAK,MACtB,aAAa;QACb,KAAK,UAAU,CAAC,WAAW,CAAC;IAEhC;IACA,QAAQ,YAAY,CAAC,QACrB,aAAa;IACb,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,KAAK,GAAG;IACnC,aAAa;IACb,KAAK,UAAU,CAAC,YAAY,CAAC,SAAS,KAAK,WAAW;AACxD;AACA,IAAI,aAAa;AACjB,SAAS;IACP,IAAI,YACF;IAEF,aAAa,WAAW;QACtB,IAAI,QAAQ,SAAS,gBAAgB,CAAC;QACtC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,gCAAgC;YAChC,IAAI,KAAK,WAAW,MAAK,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC;YAC/C,IAAI,WAAW;YACf,IAAI,sBAAsB,aAAa,cAAc,IAAI,OAAO,mDAAmD,WAAW,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,WAAW,MAAM;YACzK,IAAI,WAAW,gBAAgB,IAAI,CAAC,SAAS,KAAK,OAAO,CAAC,SAAS,MAAM,MAAM,KAAK,CAAC;YACrF,IAAI,CAAC,UACH,WAAW,KAAK,CAAC,EAAE;QAEvB;QACA,aAAa;IACf,GAAG;AACL;AACA,SAAS,YAAY,KAAK;IACxB,IAAI,MAAM,IAAI,KAAK,MAAM;QACvB,IAAI,OAAO,aAAa,aAAa;YACnC,IAAI,SAAS,SAAS,aAAa,CAAC;YACpC,OAAO,GAAG,GAAG,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;YACzC,IAAI,MAAM,YAAY,KAAK,YACzB,OAAO,IAAI,GAAG;YAEhB,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;gBACJ,OAAO,MAAM,GAAG,IAAM,QAAQ;gBAC9B,OAAO,OAAO,GAAG;gBAChB,CAAA,iBAAiB,SAAS,IAAI,AAAD,MAAO,QAAQ,mBAAmB,KAAK,KAAK,eAAe,WAAW,CAAC;YACvG;QACF,OAAO,IAAI,OAAO,kBAAkB,YAAY;YAC9C,iBAAiB;YACjB,IAAI,MAAM,YAAY,KAAK,YACzB,OAAO,OAAmB,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;iBAEtD,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;oBACF,cAA0B,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;oBACtD;gBACF,EAAE,OAAO,KAAK;oBACZ,OAAO;gBACT;YACF;QAEJ;IACF;AACF;AACA,eAAe,gBAAgB,MAAM;IACnC,OAAO,eAAe,GAAG,OAAO,MAAM,CAAC;IACvC,IAAI;IACJ,IAAI;QACF,kEAAkE;QAClE,gEAAgE;QAChE,gEAAgE;QAChE,mDAAmD;QACnD,iDAAiD;QACjD,mDAAmD;QACnD,IAAI,CAAC,mBAAmB;YACtB,IAAI,WAAW,OAAO,GAAG,CAAC,CAAA;gBACxB,IAAI;gBACJ,OAAO,AAAC,CAAA,eAAe,YAAY,MAAK,MAAO,QAAQ,iBAAiB,KAAK,IAAI,KAAK,IAAI,aAAa,KAAK,CAAC,CAAA;oBAC3G,oBAAoB;oBACpB,IAAI,UAAU,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,WAAW,GAAG,gBAAgB,IAAI,KAAK,OAAO,4BAA4B,eAAe,kBAAkB,0BAA0B;wBAClL,OAAO,OAAO,CAAC,MAAM;wBACrB;oBACF;oBACA,MAAM;gBACR;YACF;YACA,kBAAkB,MAAM,QAAQ,GAAG,CAAC;QACtC;QACA,OAAO,OAAO,CAAC,SAAU,KAAK;YAC5B,SAAS,OAAO,MAAM,CAAC,IAAI,EAAE;QAC/B;IACF,SAAU;QACR,OAAO,OAAO,eAAe;QAC7B,IAAI,iBACF,gBAAgB,OAAO,CAAC,CAAA;YACtB,IAAI,QAAQ;gBACV,IAAI;gBACH,CAAA,kBAAkB,SAAS,IAAI,AAAD,MAAO,QAAQ,oBAAoB,KAAK,KAAK,gBAAgB,WAAW,CAAC;YAC1G;QACF;IAEJ;AACF;AACA,SAAS,SAAS,OAAO,kBAAkB,GAAnB,EAAuB,MAAM,cAAc,GAAf;IAClD,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,MAAM,IAAI,KAAK,OACjB;SACK,IAAI,MAAM,IAAI,KAAK,MAAM;QAC9B,IAAI,OAAO,MAAM,YAAY,CAAC,OAAO,aAAa,CAAC;QACnD,IAAI,MAAM;YACR,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;gBACrB,iEAAiE;gBACjE,oHAAoH;gBACpH,IAAI,UAAU,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE;gBAClC,IAAK,IAAI,OAAO,QACd,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAAE;oBAC5C,IAAI,KAAK,OAAO,CAAC,IAAI;oBACrB,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;oBAC7C,IAAI,QAAQ,MAAM,KAAK,GACrB,UAAU,OAAO,MAAM,CAAC,IAAI,EAAE;gBAElC;YAEJ;YACA,IAAI,mBAGF,AAFA,4DAA4D;YAC5D,+CAA+C;YAC9C,CAAA,GAAG,IAAG,EAAG,MAAM,MAAM;YAGxB,aAAa;YACb,IAAI,KAAK,OAAO,eAAe,CAAC,MAAM,EAAE,CAAC;YACzC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG;gBAAC;gBAAI;aAAK;QAChC;QAEA,8FAA8F;QAC9F,0GAA0G;QAC1G,IAAI,OAAO,MAAM,EACf,SAAS,OAAO,MAAM,EAAE;IAE5B;AACF;AACA,SAAS,UAAU,MAAM,EAAE,EAAE;IAC3B,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,OAAO,CAAC,GAAG,EAAE;QACf,8EAA8E;QAC9E,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,EAAE;QACzB,IAAI,UAAU,EAAE;QAChB,IAAK,IAAI,OAAO,KAAM;YACpB,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI;YACtD,IAAI,QAAQ,MAAM,KAAK,GACrB,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI;QAE1B;QAEA,sGAAsG;QACtG,OAAO,OAAO,CAAC,GAAG;QAClB,OAAO,OAAO,KAAK,CAAC,GAAG;QAEvB,0BAA0B;QAC1B,QAAQ,OAAO,CAAC,CAAA;YACd,UAAU,OAAO,MAAM,CAAC,IAAI,EAAE;QAChC;IACF,OAAO,IAAI,OAAO,MAAM,EACtB,UAAU,OAAO,MAAM,EAAE;AAE7B;AACA,SAAS,eAAe,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACjF,IAAI,kBAAkB,QAAQ,IAAI,eAChC,OAAO;IAGT,uGAAuG;IACvG,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;IAC7C,IAAI,WAAW;IACf,MAAO,QAAQ,MAAM,GAAG,EAAG;QACzB,IAAI,IAAI,QAAQ,KAAK;QACrB,IAAI,IAAI,kBAAkB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE;QACtC,IAAI,GACF,+EAA+E;QAC/E,WAAW;aACN;YACL,yDAAyD;YACzD,IAAI,IAAI,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;YAC3C,IAAI,EAAE,MAAM,KAAK,GAAG;gBAClB,kFAAkF;gBAClF,WAAW;gBACX;YACF;YACA,QAAQ,IAAI,IAAI;QAClB;IACF;IACA,OAAO;AACT;AACA,SAAS,kBAAkB,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACpF,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,gBAAgB,CAAC,YAAY,CAAC,OAAO,aAAa,CAAC,EAAE;QACvD,2EAA2E;QAC3E,yEAAyE;QACzE,IAAI,CAAC,OAAO,MAAM,EAChB,OAAO;QAET,OAAO,eAAe,OAAO,MAAM,EAAE,IAAI;IAC3C;IACA,IAAI,aAAa,CAAC,GAAG,EACnB,OAAO;IAET,aAAa,CAAC,GAAG,GAAG;IACpB,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,gBAAgB,IAAI,CAAC;QAAC;QAAQ;KAAG;IACjC,IAAI,CAAC,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAAE;QAC/D,eAAe,IAAI,CAAC;YAAC;YAAQ;SAAG;QAChC,OAAO;IACT;AACF;AACA,SAAS;IACP,0BAA0B;IAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,MAAM,EAAE,IAAK;QAC/C,IAAI,KAAK,eAAe,CAAC,EAAE,CAAC,EAAE;QAC9B,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE;YACvB,WAAW,eAAe,CAAC,EAAE,CAAC,EAAE,EAAE;YAClC,cAAc,CAAC,GAAG,GAAG;QACvB;IACF;IACA,kBAAkB,EAAE;AACtB;AACA,SAAS,WAAW,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IACjD,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,OAAO,OAAO,CAAC,GAAG,GAAG,CAAC;IACtB,IAAI,UAAU,OAAO,GAAG,EACtB,OAAO,GAAG,CAAC,IAAI,GAAG,OAAO,OAAO,CAAC,GAAG;IAEtC,IAAI,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,iBAAiB,CAAC,MAAM,EAC7D,OAAO,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAU,EAAE;QAC/C,GAAG,OAAO,OAAO,CAAC,GAAG;IACvB;IAEF,OAAO,OAAO,KAAK,CAAC,GAAG;AACzB;AACA,SAAS,UAAU,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IAChD,sBAAsB;IACtB,OAAO;IAEP,6DAA6D;IAC7D,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,IAAI,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAAE;QAC9D,IAAI,qBAAqB,EAAE;QAC3B,OAAO,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAU,EAAE;YAC9C,IAAI,mBAAmB,GAAG;gBACxB,OAAO,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;YACxC;YACA,IAAI,MAAM,OAAO,CAAC,qBAAqB,iBAAiB,MAAM,EAC5D,mBAAmB,IAAI,IAAI;QAE/B;QACA,IAAI,mBAAmB,MAAM,EAAE;YAC7B,IAAI,UAAU,mBAAmB,KAAK,CAAC,SAAU,CAAC;gBAChD,OAAO,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;YAClC;YACA,IAAI,CAAC,SACH,OAAO;YAET;QACF;IACF;AACF;;;ACpgBA;AAEA;;CAEC,GACD,eAAe;IACb,MAAM,cAAc,MAAM,CAAA,GAAA,sBAAc,AAAD;IAEvC,IAAI,CAAC,aAAa;QAChB,QAAQ,KAAK,CAAC;QACd,MAAM;QACN;IACF;IAEA,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,sCAAsC;YACjE,QAAQ;YACR,SAAS;gBACP,eAAe,CAAC,OAAO,EAAE,aAAa;YACxC;QACF;QAEA,IAAI,SAAS,EAAE,EAAE;YACf,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,cAAc;QAC5B,OACE,QAAQ,KAAK,CAAC,8BAA8B,SAAS,UAAU;IAEnE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;IAC7C;AACF;AAEA,iCAAiC;AACjC,SAAS,cAAc,CAAC,eAAe,gBAAgB,CAAC,SAAS;IAC/D,CAAA,GAAA,cAAM,AAAD;AACP;AAEA,SACG,cAAc,CAAC,wBACf,gBAAgB,CAAC,SAAS;AAE7B,iCAAiC;AACjC,CAAA,GAAA,8BAAsB,AAAD;;;;;AC/BrB,yCAAyC;AACzC,4CAAsB;AAQtB,+CAA+C;AAC/C,4DAAsB;AAUtB,4BAA4B;AAC5B,oDAAsB;AAjCtB;AAEA,MAAM,SAAS;IACb,WAAW,CAAC,4CAA4C,yBAAmC;IAC3F,SAAS;IACT,YAAY;IACZ,eAAe;IACf,OAAO;AACT;AAEA,MAAM,cAAc,IAAI,CAAA,GAAA,yBAAW,AAAD,EAAE;AAG7B,eAAe;IACpB,IAAI;QACF,MAAM,YAAY,cAAc;IAClC,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,iBAAiB;IACjC;AACF;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,OAAO,MAAM,YAAY,sBAAsB;QACrD,QAAQ,GAAG,CAAC,mBAAmB;QAC/B,eAAe,OAAO,CAAC,eAAe,KAAK,YAAY,GAAG,aAAa;IACzE,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,qCAAqC;IACrD;AACF;AAGO,eAAe;IACpB,OAAO,eAAe,OAAO,CAAC;AAChC;;;A;A,I,Y,O,c;A,I,mB,O,wB;A,I,oB,O,mB;A,I,e,O,S,C,c;A,I,W,C,Q;I,I,I,Q,I,U,Q,M;Q,K,G,C,K;Q,Y;I;A;A,I,c,C,I,M,Q;I,I,Q,O,S,Y,O,S,Y;Q,K,I,O,kB,M,I,C,a,I,C,I,Q,Q,Q,U,I,K;Y,K,I,I,C,I;Y,Y,C,C,O,iB,M,I,K,K,U;Q;I;I,O;A;A,I,e,C,M,Y,U,C,G,c;Q,O;I,I;A,e;AEnCA,IAAA,cAAA,CAAA;AAAA,SAAA,aAAA;IAAA,mBAAA,IAAA;IAAA,oBAAA,IAAA;IAAA,WAAA,IAAA;IAAA,eAAA,IAAA;IAAA,cAAA,IAAA;IAAA,oBAAA,IAAA;IAAA,oBAAA,IAAA;IAAA,KAAA,IAAA;IAAA,QAAA,IAAA;IAAA,iBAAA,IAAA;IAAA,YAAA,IAAA;IAAA,yBAAA,IAAA;IAAA,gBAAA,IAAA;IAAA,gBAAA,IAAA;IAAA,aAAA,IAAA;IAAA,iBAAA,IAAA;IAAA,OAAA,IAAA;IAAA,MAAA,IAAA;IAAA,aAAA,IAAA;IAAA,0BAAA,IAAA;IAAA,SAAA,IAAA;IAAA,sBAAA,IAAA;AAAA;AAAA,OAAA,OAAA,GAAA,aAAA;A,sB;ACeA,IAAM,YAAqB;IACvB,OAAO,IAAM,KADU;IAEvB,MAAM,IAAM,KADC;IAEb,MAAM,IAAM,KADA;IAEZ,OAAO,IAAM,KADD;AAEhB;AAEA,IAAI;AACJ,IAAI;AAOG,IAAK,MAAL,AAAA,aAAA,GAAA,CAAA,CAAKA;IACRA,IAAAA,CAAAA,IAAAA,CAAA,OAAA,GAAA,EAAA,GAAA;IACAA,IAAAA,CAAAA,IAAAA,CAAA,QAAA,GAAA,EAAA,GAAA;IACAA,IAAAA,CAAAA,IAAAA,CAAA,OAAA,GAAA,EAAA,GAAA;IACAA,IAAAA,CAAAA,IAAAA,CAAA,OAAA,GAAA,EAAA,GAAA;IACAA,IAAAA,CAAAA,IAAAA,CAAA,QAAA,GAAA,EAAA,GAAA;IALQ,OAAAA;AAAA,CAAA,EAAA,OAAA,CAAA;AAaL,CAAA,CAAUA;IACN,SAAS;QACZ,QAAQ,EAAR,QAAA;QACA,SAAS;IACb;IAHOA,KAAS,KAAT,GAAA;IAKA,SAAS,SAAS,KAAA;QACrB,IAAI,CAAE,CAAA,EAAA,QAAA,OAAY,SAAS,SAAS,EAAA,SAAA,GAAA,GAChC,MAAM,IAAI,MAAM;QAEpB,QAAQ;IACZ;IALOA,KAAS,QAAT,GAAA;IAOA,SAAS,UAAU,KAAA;QACtB,SAAS;IACb;IAFOA,KAAS,SAAT,GAAA;AAAS,CAAA,EAbH,OAaG,CAAA,MAAA,CAAA,CAAA;AAUb,IAAM,SAAN,MAAM;IAEF,YAAoB,KAAA,CAAe;QAAf,IAAA,CAAA,KAAA,GAAA;IAAgB;IAAA,+DAAA,GAGpC,MAAA,GAAS,IAAA,EAAuB;QACnC,IAAI,SAAS,EAAA,SAAA,KACT,OAAO,KAAA,CAAM,QAAO,OAAA,CAAQ,IAAA,CAAK,KAAA,EAAO,IAAA,CAAK,OAAO,MAAM;IAElE;IACO,KAAA,GAAQ,IAAA,EAAuB;QAClC,IAAI,SAAS,EAAA,QAAA,KACT,OAAO,IAAA,CAAK,QAAO,OAAA,CAAQ,IAAA,CAAK,KAAA,EAAO,IAAA,CAAK,OAAO,MAAM;IAEjE;IACO,KAAA,GAAQ,IAAA,EAAuB;QAClC,IAAI,SAAS,EAAA,QAAA,KACT,OAAO,IAAA,CAAK,QAAO,OAAA,CAAQ,IAAA,CAAK,KAAA,EAAO,IAAA,CAAK,OAAO,MAAM;IAEjE;IACO,MAAA,GAAS,IAAA,EAAuB;QACnC,IAAI,SAAS,EAAA,SAAA,KACT,OAAO,KAAA,CAAM,QAAO,OAAA,CAAQ,IAAA,CAAK,KAAA,EAAO,IAAA,CAAK,OAAO,MAAM;IAElE;IAAA,8DAAA,GAGO,MAAM,GAAA,EAAmB;QAC5B,IAAA,CAAK,KAAA,CAAM;QACX,MAAM;IACV;IAEO,OAAO,MAAA,EAAwB;QAClC,MAAM,eAAuB,OAAO,MAAA,CAAO,IAAI;QAC/C,aAAa,OAAA,GAAU;QACvB,aAAa,KAAA,CAAM;QACnB,OAAO;IACX;IAEA,OAAc,aAAa,IAAA,EAAc,YAAA,EAA8B;QACnE,MAAM,eAAe,IAAI,QAAO,GAAG,KAAI,CAAA,EAAI,cAAc;QACzD,aAAa,KAAA,CAAM;QACnB,OAAO;IACX;IAEA,OAAe,QAAQ,IAAA,EAAc,MAAA,EAAiB;QAClD,MAAM,SAAS,CAAA,CAAA,EAAI,KAAnB,CAAA,CAAA;QACA,OAAO,SAAS,GAAG,OAAM,CAAA,EAAI,OAAM,CAAA,CAAA,GAAM;IAC7C;IAAA,+DAAA,GAAA,mCAAA;IAIA,OAAc,MAAM,IAAA,EAAA,GAAiB,IAAA,EAAuB;QACxD,IAAI,SAAS,EAAA,SAAA,KACT,OAAO,KAAA,CAAM,QAAO,OAAA,CAAQ,UAAU;IAE9C;IACA,OAAc,KAAK,IAAA,EAAA,GAAiB,IAAA,EAAuB;QACvD,IAAI,SAAS,EAAA,QAAA,KACT,OAAO,IAAA,CAAK,QAAO,OAAA,CAAQ,UAAU;IAE7C;IACA,OAAc,KAAK,IAAA,EAAA,GAAiB,IAAA,EAAuB;QACvD,IAAI,SAAS,EAAA,QAAA,KACT,OAAO,IAAA,CAAK,QAAO,OAAA,CAAQ,UAAU;IAE7C;IACA,OAAc,MAAM,IAAA,EAAA,GAAiB,IAAA,EAAuB;QACxD,IAAI,SAAS,EAAA,SAAA,KACT,OAAO,KAAA,CAAM,QAAO,OAAA,CAAQ,UAAU;IAE9C;AAEJ;AAEA,IAAI,KAAA;A,wB;AC7IJ,IAAA,oBAA0B,QAA1B;AASO,IAAM,WAAN;IAAe,wCAAA;IAElB,OAAc,OAAO,KAAA,EAA0B;QAC3C,IAAI;YACA,OAAA,AAAA,CAAA,GAAO,kBAAA,SAAA,AAAA,EAAqB;QAChC,EAAA,OACO,KAAK;YACR,OAAO,KAAA,CAAM,mBAAmB;YAChC,MAAM;QACV;IACJ;IAEA,aAAoB,kBAAkB,MAAA,EAAgB,OAAA,EAAiB,UAAA,EAAyC;QAC5G,MAAM,gBAAgB,YAAY,eAAA,CAAgB,IAAI,cAAc,MAAA,CAAO,KAAK,SAAA,CAAU;QAC1F,MAAM,iBAAiB,YAAY,eAAA,CAAgB,IAAI,cAAc,MAAA,CAAO,KAAK,SAAA,CAAU;QAC3F,MAAM,eAAe,GAAG,cAAa,CAAA,EAAI,gBAAzC;QAEA,MAAM,YAAY,MAAM,OAAO,MAAA,CAAO,MAAA,CAAO,IAA7C,CACI;YACI,MAAM;YACN,MAAM;gBAAE,MAAM;YAAU;QAC5B,GACA,YACA,IAAI,cAAc,MAAA,CAAO;QAG7B,MAAM,mBAAmB,YAAY,eAAA,CAAgB,IAAI,WAAW;QACpE,OAAO,GAAG,aAAY,CAAA,EAAI,kBAA1B;IACJ;AACJ;A,2B;AC3BA,IAAM,mBAAmB;AAEzB,IAAM,WAAW,CAAC,MACd,KAAK;WAAI,IAAI,WAAW;KAAI,CACvB,GAAA,CAAI,CAAC,MAAQ,OAAO,YAAA,CAAa,MACjC,IAAA,CAAK;AAKP,IAAM,eAAN,MAAM;IACT,OAAe,cAAsB;QACjC,MAAM,MAAM,IAAI,YAAY;QAC5B,OAAO,eAAA,CAAgB;QACvB,OAAO,GAAA,CAAI,EAAX;IACJ;IAAA;;GAAA,GAKA,OAAc,iBAAyB;QACnC,MAAM,OAAO,iBAAiB,OAA9B,CAAsC,UAAU,CAAA,IAAA,AAC3C,CAAA,CAAC,IAAI,aAAY,WAAA,KAAgB,MAAM,CAAC,IAAI,CAAA,EAAG,QAAA,CAAS;QAE7D,OAAO,KAAK,OAAA,CAAQ,MAAM;IAC9B;IAAA;;GAAA,GAKA,OAAc,uBAA+B;QACzC,OAAO,aAAY,cAAA,KAAmB,aAAY,cAAA,KAAmB,aAAY,cAAA;IACrF;IAAA;;GAAA,GAKA,aAAoB,sBAAsB,aAAA,EAAwC;QAC9E,IAAI,CAAC,OAAO,MAAA,EACR,MAAM,IAAI,MAAM;QAGpB,IAAI;YACA,MAAM,UAAU,IAAI;YACpB,MAAM,OAAO,QAAQ,MAAA,CAAO;YAC5B,MAAM,SAAS,MAAM,OAAO,MAAA,CAAO,MAAA,CAAO,WAAW;YACrD,OAAO,SAAS,QAAQ,OAAA,CAAQ,OAAO,KAAK,OAAA,CAAQ,OAAO,KAAK,OAAA,CAAQ,OAAO;QACnF,EAAA,OACO,KAAK;YACR,OAAO,KAAA,CAAM,qCAAqC;YAClD,MAAM;QACV;IACJ;IAAA;;GAAA,GAKA,OAAc,kBAAkB,SAAA,EAAmB,aAAA,EAA+B;QAC9E,MAAM,UAAU,IAAI;QACpB,MAAM,OAAO,QAAQ,MAAA,CAAO;YAAC;YAAW;SAAa,CAAE,IAAA,CAAK;QAC5D,OAAO,SAAS;IACpB;IAAA;;;;GAAA,GAOA,aAAoB,KAAK,GAAA,EAAa,OAAA,EAAuC;QACzE,MAAM,WAAW,IAAI,cAAc,MAAA,CAAO;QAC1C,MAAM,aAAa,MAAM,OAAO,MAAA,CAAO,MAAA,CAAO,KAAK;QACnD,OAAO,IAAI,WAAW;IAC1B;IAAA;;;GAAA,GAaA,aAAoB,6BAA6B,GAAA,EAAkC;QAC/E,IAAI;QACJ,OAAQ,IAAI,GAAA;YACR,KAAK;gBACD,aAAa;oBACT,KAAK,IAAI,CADA;oBAET,OAAO,IAAI,GADF;oBAET,KAAK,IAAI,CADE;gBAEf;gBACA;YACJ,KAAK;gBACD,aAAa;oBACT,OAAO,IAAI,GADF;oBAET,OAAO,IAAI,GADA;oBAEX,KAAK,IAAI,CADE;oBAEX,KAAK,IAAI,CADA;gBAEb;gBACA;YACJ,KAAK;gBACD,aAAa;oBACT,OAAO,IAAI,GADF;oBAET,OAAO,IAAI,GADA;oBAEX,KAAK,IAAI,CADE;gBAEf;gBACA;YACJ,KAAK;gBACD,aAAa;oBACT,OAAO,IAAI,CADF;oBAET,OAAO,IAAI,GADA;gBAEf;gBACA;YACJ;gBACI,MAAM,IAAI,MAAM;QACxB;QACA,MAAM,uBAAuB,MAAM,aAAY,IAAA,CAAK,WAAW,KAAK,SAAA,CAAU;QAC9E,OAAO,aAAY,eAAA,CAAgB;IACvC;IAEA,aAAoB,kBAAkB,EAClC,GADkC,EAElC,WADA,EAEA,UADA,EAEA,OADA,EAEA,KADA,EAEJ,EAA2C;QACvC,IAAI;QACJ,IAAI;QAEJ,MAAM,UAA2C;YAC7C,OAAO,OAAO,MAAA,CAAO,UAAA;YACrB,OAAO,cAAA,OAAA,aAAc;YACrB,OAAO;YACP,OAAO,KAAK,KAAA,CAAM,KAAK,GAAA,KAAQ;QACnC;QAEA,IAAI,aAAa;YACb,cAAc,MAAM,aAAY,IAAA,CAAK,WAAW;YAChD,cAAc,aAAY,eAAA,CAAgB;YAC1C,QAAQ,GAAA,GAAM;QAClB;QAEA,IAAI,OACA,QAAQ,KAAA,GAAQ;QAGpB,IAAI;YACA,MAAM,YAAY,MAAM,OAAO,MAAA,CAAO,SAAA,CAAU,OAAO,QAAQ,SAAS;YACxE,MAAM,SAAS;gBACX,OAAO;gBACP,OAAO;gBACP,OAAO;oBACH,OAAO,UAAU,GADd;oBAEH,OAAO,UAAU,GADA;oBAEjB,KAAK,UAAU,CADE;oBAEjB,KAAK,UAAU,CADA;gBAEnB;YACJ;YACA,OAAO,MAAM,SAAS,iBAAA,CAAkB,QAAQ,SAAS,QAAQ,UAAU;QAC/E,EAAA,OAAS,KAAK;YACV,IAAI,eAAe,WACf,MAAM,IAAI,MAAM,CAAA,iCAAA,EAAoC,IAAI,OAAO,EAAE;iBAEjE,MAAM;QAEd;IACJ;IAEA,aAAoB,gBAAgB,OAAA,EAA0C;QAC1E,IAAI;YACA,MAAM,YAAY,MAAM,OAAO,MAAA,CAAO,SAAA,CAAU,OAAO,QAAQ,SAAS;YACxE,OAAO,MAAM,aAAY,4BAAA,CAA6B;QAC1D,EAAA,OAAS,KAAK;YACV,IAAI,eAAe,WACf,MAAM,IAAI,MAAM,CAAA,2CAAA,EAA8C,IAAI,OAAO,EAAE;iBAE3E,MAAM;QAEd;IACJ;IAEA,aAAoB,mBAA4C;QAC5D,OAAO,MAAM,OAAO,MAAA,CAAO,MAAA,CAAO,WAAlC,CACI;YACI,MAAM;YACN,YAAY;QAChB,GACA,OACA;YAAC;YAAQ;SADT;IAGR;AACJ;AAAA;;CAAA,GAzLa,aAmEK,eAAA,GAAkB,CAAC;IAC7B,OAAO,SAAS,OAAO,OAAA,CAAQ,MAAM,IAAI,OAAA,CAAQ,OAAO,KAAK,OAAA,CAAQ,OAAO;AAChF;AArEG,IAAM,cAAN;A,qB;ACRA,IAAM,QAAN;IAKI,YAA+B,KAAA,CAAe;QAAf,IAAA,CAAA,KAAA,GAAA;QAFtC,IAAA,CAAiB,UAAA,GAAyC,EAA1D;QAGI,IAAA,CAAK,OAAA,GAAU,IAAI,OAAO,CAAA,OAAA,EAAU,IAAA,CAAK,KAAK,CAAA,EAAA,CAAI;IACtD;IAEO,WAAW,EAAA,EAAqC;QACnD,IAAA,CAAK,UAAA,CAAW,IAAA,CAAK;QACrB,OAAO,IAAM,IAAA,CAAK,aAAA,CAAc;IACpC;IAEO,cAAc,EAAA,EAA+B;QAChD,MAAM,MAAM,IAAA,CAAK,UAAA,CAAW,WAAA,CAAY;QACxC,IAAI,OAAO,GACP,IAAA,CAAK,UAAA,CAAW,MAAA,CAAO,KAAK;IAEpC;IAEA,MAAa,MAAA,GAAS,EAAA,EAA8B;QAChD,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM,aAAa;QAChC,KAAA,MAAW,MAAM,IAAA,CAAK,UAAA,CAClB,MAAM,MAAM;IAEpB;AACJ;A,0B;AClBO,IAAM,aAAN;IAAiB;;;;GAAA,GAMpB,OAAO,OAAO,EAAE,GAAG,UAAS,EAA6C;QA5B7E,IAAA,IAAA,IAAA;QA6BQ,IAAI,SAAS,KAAA,IAAS,MAClB,SAAS,KAAA,GAAA,AAAQ,CAAA,KAAA;YAAC;YAAK;YAAK;YAAK;SAAG,CAAE,IAAA,CAAK,CAAA,QAAS,SAAS,OAAO,UAAA,GAAa,MAAK,KAArE,OAAA,KAA0E;QAC/F,CAAA,KAAA,SAAS,IAAA,AAAA,KAAT,OAAA,KAAA,SAAS,IAAA,GAAS,KAAK,GAAA,CAAI,GAAG,KAAK,KAAA,CAAM,OAAO,OAAA,GAAA,AAAW,CAAA,OAAO,UAAA,GAAa,SAAS,KAAA,AAAA,IAAS;QACjG,IAAI,SAAS,MAAA,IAAU,MACnB,AAAA,CAAA,KAAA,SAAS,GAAA,AAAA,KAAT,OAAA,KAAA,SAAS,GAAA,GAAQ,KAAK,GAAA,CAAI,GAAG,KAAK,KAAA,CAAM,OAAO,OAAA,GAAA,AAAW,CAAA,OAAO,WAAA,GAAc,SAAS,MAAA,AAAA,IAAU;QACtG,OAAO;IACX;IAEA,OAAO,UAAU,QAAA,EAAuC;QACpD,OAAO,OAAO,OAAA,CAAQ,UACjB,MAAA,CAAO,CAAC,GAAG,MAAK,GAAM,SAAS,MAC/B,GAAA,CAAI,CAAC,CAAC,KAAK,MAAK,GAAM,GAAG,IAAG,CAAA,EAAI,OAAO,UAAU,YAAY,QAAkB,QAAQ,QAAQ,MAAM,EACrG,IAAA,CAAK;IACd;AACJ;A,qB;AClCO,IAAM,QAAN,MAAM,eAAc;IAApB,aAAkC;QAAlC,KAAA,IAAA;QACH,IAAA,CAAmB,OAAA,GAAU,IAAI,OAAO,CAAA,OAAA,EAAU,IAAA,CAAK,KAAK,CAAA,EAAA,CAAI;QAChE,IAAA,CAAQ,YAAA,GAAsD;QAC9D,IAAA,CAAQ,WAAA,GAAc;QAyCtB,IAAA,CAAU,SAAA,GAAY;YAClB,MAAM,OAAO,IAAA,CAAK,WAAA,GAAc,OAAM,YAAA;YACtC,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM,sBAAsB;YAEzC,IAAI,IAAA,CAAK,WAAA,IAAe,OAAM,YAAA,IAAgB;gBAC1C,IAAA,CAAK,MAAA;gBACA,KAAA,CAAM;YACf;QACJ;IAAA;IAAA,eAAA;IA9CA,OAAc,eAAuB;QACjC,OAAO,KAAK,KAAA,CAAM,KAAK,GAAA,KAAQ;IACnC;IAEO,KAAK,iBAAA,EAAiC;QACzC,MAAMC,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,oBAAoB,KAAK,GAAA,CAAI,KAAK,KAAA,CAAM,oBAAoB;QAC5D,MAAM,aAAa,OAAM,YAAA,KAAiB;QAC1C,IAAI,IAAA,CAAK,UAAA,KAAe,cAAc,IAAA,CAAK,YAAA,EAAc;YAErDA,QAAO,KAAA,CAAM,wDAAwD,IAAA,CAAK,UAAU;YACpF;QACJ;QAEA,IAAA,CAAK,MAAA;QAELA,QAAO,KAAA,CAAM,kBAAkB;QAC/B,IAAA,CAAK,WAAA,GAAc;QAKnB,MAAM,yBAAyB,KAAK,GAAA,CAAI,mBAAmB;QAC3D,IAAA,CAAK,YAAA,GAAe,YAAY,IAAA,CAAK,SAAA,EAAW,yBAAyB;IAC7E;IAEA,IAAW,aAAqB;QAC5B,OAAO,IAAA,CAAK,WAAZ;IACJ;IAEO,SAAe;QAClB,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACpB,IAAI,IAAA,CAAK,YAAA,EAAc;YACnB,cAAc,IAAA,CAAK,YAAY;YAC/B,IAAA,CAAK,YAAA,GAAe;QACxB;IACJ;AAWJ;A,wB;ACxDO,IAAM,WAAN;IACH,OAAc,WAAW,GAAA,EAAa,eAAqC,OAAA,EAA0B;QACjG,IAAI,CAAC,KAAK,MAAM,IAAI,UAAU;QAE9B,MAAM,YAAY,IAAI,IAAI,KAAK;QAC/B,MAAM,SAAS,SAAA,CAAU,iBAAiB,aAAa,SAAS,SAAhE;QACA,OAAO,IAAI,gBAAgB,OAAO,KAAA,CAAM;IAC5C;AACJ;AAKO,IAAM,sBAAsB;A,8B;ACR5B,IAAM,gBAAN,cAA4B;IAqBxB,YACH,IAAA,EAKgB,IAAA,CAClB;QAvCN,IAAA,IAAA,IAAA;QAwCQ,KAAA,CAAM,KAAK,iBAAA,IAAqB,KAAK,KAAA,IAAS;QAF9B,IAAA,CAAA,IAAA,GAAA;QAzBpB,4CAAA,GAAA,IAAA,CAAgB,IAAA,GAAe;QA6B3B,IAAI,CAAC,KAAK,KAAA,EAAO;YACb,OAAO,KAAA,CAAM,iBAAiB;YAC9B,MAAM,IAAI,MAAM;QACpB;QAEA,IAAA,CAAK,KAAA,GAAQ,KAAK,KAAlB;QACA,IAAA,CAAK,iBAAA,GAAA,AAAoB,CAAA,KAAA,KAAK,iBAAA,AAAA,KAAL,OAAA,KAA0B;QACnD,IAAA,CAAK,SAAA,GAAA,AAAY,CAAA,KAAA,KAAK,SAAA,AAAA,KAAL,OAAA,KAAkB;QAEnC,IAAA,CAAK,KAAA,GAAQ,KAAK,SAAlB;QACA,IAAA,CAAK,aAAA,GAAA,AAAgB,CAAA,KAAA,KAAK,aAAA,AAAA,KAAL,OAAA,KAAsB;QAC3C,IAAA,CAAK,SAAA,GAAY,KAAK,SAAtB;IACJ;AACJ;A,6B;AC/CO,IAAM,eAAN,cAA2B;IAIvB,YAAY,OAAA,CAAkB;QACjC,KAAA,CAAM;QAHV,2CAAA,GAAA,IAAA,CAAgB,IAAA,GAAe;IAI/B;AACJ;A,2B;ACDO,IAAM,oBAAN;IAOI,YAAY,IAAA,CAAqD;QANxE,IAAA,CAAmB,OAAA,GAAU,IAAI,OAAO;QAExC,IAAA,CAAiB,cAAA,GAAiB,IAAI,MAAM;QAC5C,IAAA,CAAiB,aAAA,GAAgB,IAAI,MAAM;QAIvC,IAAA,CAAK,kCAAA,GAAqC,KAAK,iCAA/C;IACJ;IAEO,KAAK,SAAA,EAAuB;QAC/B,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,IAAI,UAAU,YAAA,IAAgB,UAAU,UAAA,KAAe,KAAA,GAAW;YAC9D,MAAM,WAAW,UAAU,UAA3B;YACAA,QAAO,KAAA,CAAM,6CAA6C;YAE1D,IAAI,WAAW,GAAG;gBAEd,IAAI,WAAW,WAAW,IAAA,CAAK,kCAA/B;gBACA,IAAI,YAAY,GACZ,WAAW;gBAGfA,QAAO,KAAA,CAAM,0CAA0C,UAAU;gBACjE,IAAA,CAAK,cAAA,CAAe,IAAA,CAAK;YAC7B,OACK;gBACDA,QAAO,KAAA,CAAM;gBACb,IAAA,CAAK,cAAA,CAAe,MAAA;YACxB;YAGA,MAAM,UAAU,WAAW;YAC3BA,QAAO,KAAA,CAAM,yCAAyC,SAAS;YAC/D,IAAA,CAAK,aAAA,CAAc,IAAA,CAAK;QAC5B,OACK;YACD,IAAA,CAAK,cAAA,CAAe,MAAA;YACpB,IAAA,CAAK,aAAA,CAAc,MAAA;QACvB;IACJ;IAEO,SAAe;QAClB,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;QACnB,IAAA,CAAK,cAAA,CAAe,MAAA;QACpB,IAAA,CAAK,aAAA,CAAc,MAAA;IACvB;IAAA;;GAAA,GAKO,uBAAuB,EAAA,EAAqC;QAC/D,OAAO,IAAA,CAAK,cAAA,CAAe,UAAA,CAAW;IAC1C;IAAA;;GAAA,GAIO,0BAA0B,EAAA,EAA+B;QAC5D,IAAA,CAAK,cAAA,CAAe,aAAA,CAAc;IACtC;IAAA;;GAAA,GAKO,sBAAsB,EAAA,EAAqC;QAC9D,OAAO,IAAA,CAAK,aAAA,CAAc,UAAA,CAAW;IACzC;IAAA;;GAAA,GAIO,yBAAyB,EAAA,EAA+B;QAC3D,IAAA,CAAK,aAAA,CAAc,aAAA,CAAc;IACrC;AACJ;A,4B;ACjFO,IAAM,qBAAN;IAOI,YACK,SAAA,EACA,UAAA,EACR,GAAA,EACQ,kBAAA,EACA,YAAA,CACV;QALU,IAAA,CAAA,SAAA,GAAA;QACA,IAAA,CAAA,UAAA,GAAA;QAEA,IAAA,CAAA,kBAAA,GAAA;QACA,IAAA,CAAA,YAAA,GAAA;QAXZ,IAAA,CAAiB,OAAA,GAAU,IAAI,OAAO;QAGtC,IAAA,CAAQ,MAAA,GAAgD;QACxD,IAAA,CAAQ,cAAA,GAAgC;QAmCxC,IAAA,CAAQ,QAAA,GAAW,CAAC;YAChB,IAAI,EAAE,MAAA,KAAW,IAAA,CAAK,aAAA,IAClB,EAAE,MAAA,KAAW,IAAA,CAAK,MAAA,CAAO,aAAA,EAC3B;gBACE,IAAI,EAAE,IAAA,KAAS,SAAS;oBACpB,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;oBACnB,IAAI,IAAA,CAAK,YAAA,EACL,IAAA,CAAK,IAAA;gBAEb,OAAA,IACS,EAAE,IAAA,KAAS,WAAW;oBAC3B,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;oBACnB,IAAA,CAAK,IAAA;oBACA,IAAA,CAAK,SAAA;gBACd,OAEI,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM,EAAE,IAAA,GAAO;YAEpC;QACJ;QA7CI,MAAM,YAAY,IAAI,IAAI;QAC1B,IAAA,CAAK,aAAA,GAAgB,UAAU,MAA/B;QAEA,IAAA,CAAK,MAAA,GAAS,OAAO,QAAA,CAAS,aAAA,CAAc;QAG5C,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,UAAA,GAAa;QAC/B,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,QAAA,GAAW;QAC7B,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,IAAA,GAAO;QACzB,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,GAAA,GAAM;QACxB,IAAA,CAAK,MAAA,CAAO,KAAA,GAAQ;QACpB,IAAA,CAAK,MAAA,CAAO,MAAA,GAAS;QACrB,IAAA,CAAK,MAAA,CAAO,GAAA,GAAM,UAAU,IAA5B;IACJ;IAEO,OAAsB;QACzB,OAAO,IAAI,QAAc,CAAC;YACtB,IAAA,CAAK,MAAA,CAAO,MAAA,GAAS;gBACjB;YACJ;YAEA,OAAO,QAAA,CAAS,IAAA,CAAK,WAAA,CAAY,IAAA,CAAK,MAAM;YAC5C,OAAO,gBAAA,CAAiB,WAAW,IAAA,CAAK,QAAA,EAAU;QACtD;IACJ;IAuBO,MAAM,aAAA,EAA6B;QACtC,IAAI,IAAA,CAAK,cAAA,KAAmB,eACxB;QAGJ,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEpB,IAAA,CAAK,IAAA;QAEL,IAAA,CAAK,cAAA,GAAiB;QAEtB,MAAM,OAAO;YACT,IAAI,CAAC,IAAA,CAAK,MAAA,CAAO,aAAA,IAAiB,CAAC,IAAA,CAAK,cAAA,EACpC;YAGJ,IAAA,CAAK,MAAA,CAAO,aAAA,CAAc,WAAA,CAAY,IAAA,CAAK,UAAA,GAAa,MAAM,IAAA,CAAK,cAAA,EAAgB,IAAA,CAAK,aAAa;QACzG;QAGA;QAGA,IAAA,CAAK,MAAA,GAAS,YAAY,MAAM,IAAA,CAAK,kBAAA,GAAqB;IAC9D;IAEO,OAAa;QAChB,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACpB,IAAA,CAAK,cAAA,GAAiB;QAEtB,IAAI,IAAA,CAAK,MAAA,EAAQ;YAEb,cAAc,IAAA,CAAK,MAAM;YACzB,IAAA,CAAK,MAAA,GAAS;QAClB;IACJ;AACJ;A,4B;ACjGO,IAAM,qBAAN;IAAA,aAA4C;QAC/C,IAAA,CAAiB,OAAA,GAAU,IAAI,OAAO;QACtC,IAAA,CAAQ,KAAA,GAAgC,CAAC;IAAA;IAElC,QAAc;QACjB,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACpB,IAAA,CAAK,KAAA,GAAQ,CAAC;IAClB;IAEO,QAAQ,GAAA,EAAqB;QAChC,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO,CAAA,SAAA,EAAY,IAAG,EAAA,CAAI;QACvC,OAAO,IAAA,CAAK,KAAA,CAAM,IAAlB;IACJ;IAEO,QAAQ,GAAA,EAAa,KAAA,EAAqB;QAC7C,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO,CAAA,SAAA,EAAY,IAAG,EAAA,CAAI;QACvC,IAAA,CAAK,KAAA,CAAM,IAAG,GAAI;IACtB;IAEO,WAAW,GAAA,EAAmB;QACjC,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO,CAAA,YAAA,EAAe,IAAG,EAAA,CAAI;QAC1C,OAAO,IAAA,CAAK,KAAA,CAAM,IAAlB;IACJ;IAEA,IAAW,SAAiB;QACxB,OAAO,OAAO,mBAAA,CAAoB,IAAA,CAAK,KAAK,EAAE,MAA9C;IACJ;IAEO,IAAI,KAAA,EAAuB;QAC9B,OAAO,OAAO,mBAAA,CAAoB,IAAA,CAAK,KAAK,CAAA,CAAE,MAA9C;IACJ;AACJ;A,+B;ACvCO,IAAM,iBAAN,cAA6B;IAKzB,YAAY,KAAA,EAAe,OAAA,CAAkB;QAChD,KAAA,CAAM;QAJV,6CAAA,GAAA,IAAA,CAAgB,IAAA,GAAe;QAK3B,IAAA,CAAK,KAAA,GAAQ;IACjB;AACJ;A,qB;AC2BO,IAAM,cAAN;IAKI,YACH,yBAAmC,EAAC,EAC5B,cAAiC,IAAA,EACjC,gBAA6C,CAAC,CAAA,CACxD;QAFU,IAAA,CAAA,WAAA,GAAA;QACA,IAAA,CAAA,aAAA,GAAA;QAPZ,IAAA,CAAiB,OAAA,GAAU,IAAI,OAAO;QAEtC,IAAA,CAAQ,aAAA,GAA0B,EAAlC;QAOI,IAAA,CAAK,aAAA,CAAc,IAAA,IAAQ,wBAAwB;QACnD,IAAI,aACA,IAAA,CAAK,aAAA,CAAc,IAAA,CAAK;IAEhC;IAEA,MAAgB,iBAAiB,KAAA,EAAoB,OAAoD,CAAC,CAAA,EAAG;QACzG,MAAM,EAAE,gBAAA,EAAkB,GAAG,WAAU,GAAI;QAC3C,IAAI,CAAC,kBACD,OAAO,MAAM,MAAM,OAAO;QAG9B,MAAM,aAAa,IAAI;QACvB,MAAM,YAAY,WAAW,IAAM,WAAW,KAAA,IAAS,mBAAmB;QAE1E,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,OAAO;gBAChC,GAAG,IAD6B;gBAEhC,QAAQ,WAAW,MADhB;YAEP;YACA,OAAO;QACX,EAAA,OACO,KAAK;YACR,IAAI,eAAe,gBAAgB,IAAI,IAAA,KAAS,cAC5C,MAAM,IAAI,aAAa;YAE3B,MAAM;QACV,SACA;YACI,aAAa;QACjB;IACJ;IAEA,MAAa,QAAQ,GAAA,EAAa,EAC9B,KAD8B,EAE9B,WADA,EAEA,gBADA,EAEJ,GAAiB,CAAC,CAAA,EAAqC;QACnD,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,UAAuB;YACzB,UAAU,IAAA,CAAK,aAAA,CAAc,IAAA,CAAK;QACtC;QACA,IAAI,OAAO;YACPA,QAAO,KAAA,CAAM;YACb,OAAA,CAAQ,gBAAe,GAAI,YAAY;QAC3C;QAEA,IAAA,CAAK,kBAAA,CAAmB;QAExB,IAAI;QACJ,IAAI;YACAA,QAAO,KAAA,CAAM,QAAQ;YACrB,WAAW,MAAM,IAAA,CAAK,gBAAA,CAAiB,KAAK;gBAAE,QAAQ;gBAAO;gBAAS;gBAAkB;YAAY;QACxG,EAAA,OACO,KAAK;YACRA,QAAO,KAAA,CAAM;YACb,MAAM;QACV;QAEAA,QAAO,KAAA,CAAM,kCAAkC,SAAS,MAAM;QAC9D,MAAM,cAAc,SAAS,OAAA,CAAQ,GAAA,CAAI;QACzC,IAAI,eAAe,CAAC,IAAA,CAAK,aAAA,CAAc,IAAA,CAAK,CAAA,OAAQ,YAAY,UAAA,CAAW,QACvEA,QAAO,KAAA,CAAM,IAAI,MAAM,CAAA,+BAAA,EAAmC,eAAA,OAAA,cAAe,YAAY,YAAA,EAAe,KAAK;QAE7G,IAAI,SAAS,EAAA,IAAM,IAAA,CAAK,WAAA,IAAe,CAAA,eAAA,OAAA,KAAA,IAAA,YAAa,UAAA,CAAW,kBAAA,GAC3D,OAAO,MAAM,IAAA,CAAK,WAAA,CAAY,MAAM,SAAS,IAAA;QAEjD,IAAI;QACJ,IAAI;YACA,OAAO,MAAM,SAAS,IAAA;QAC1B,EAAA,OACO,KAAK;YACRA,QAAO,KAAA,CAAM,+BAA+B;YAC5C,IAAI,SAAS,EAAA,EAAI,MAAM;YACvB,MAAM,IAAI,MAAM,GAAG,SAAS,UAAU,CAAA,EAAA,EAAK,SAAS,MAAM,CAAA,CAAA,CAAG;QACjE;QACA,IAAI,CAAC,SAAS,EAAA,EAAI;YACdA,QAAO,KAAA,CAAM,sBAAsB;YACnC,IAAI,KAAK,KAAA,EACL,MAAM,IAAI,cAAc;YAE5B,MAAM,IAAI,MAAM,GAAG,SAAS,UAAU,CAAA,EAAA,EAAK,SAAS,MAAM,CAAA,GAAA,EAAM,KAAK,SAAA,CAAU,OAAO;QAC1F;QACA,OAAO;IACX;IAEA,MAAa,SAAS,GAAA,EAAa,EAC/B,IAD+B,EAE/B,SADA,EAEA,gBADA,EAEA,eADA,EAEA,YADA,EAEJ,EAAmD;QAC/C,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,UAAuB;YACzB,UAAU,IAAA,CAAK,aAAA,CAAc,IAAA,CAAK;YAClC,gBAAgB;YAChB,GAAG,YADa;QAEpB;QACA,IAAI,cAAc,KAAA,GACd,OAAA,CAAQ,gBAAe,GAAI,WAAW;QAG1C,IAAA,CAAK,kBAAA,CAAmB;QAExB,IAAI;QACJ,IAAI;YACAA,QAAO,KAAA,CAAM,QAAQ;YACrB,WAAW,MAAM,IAAA,CAAK,gBAAA,CAAiB,KAAK;gBAAE,QAAQ;gBAAQ;gBAAS;gBAAM;gBAAkB,aAAa;YAAgB;QAChI,EAAA,OACO,KAAK;YACRA,QAAO,KAAA,CAAM;YACb,MAAM;QACV;QAEAA,QAAO,KAAA,CAAM,kCAAkC,SAAS,MAAM;QAC9D,MAAM,cAAc,SAAS,OAAA,CAAQ,GAAA,CAAI;QACzC,IAAI,eAAe,CAAC,IAAA,CAAK,aAAA,CAAc,IAAA,CAAK,CAAA,OAAQ,YAAY,UAAA,CAAW,QACvE,MAAM,IAAI,MAAM,CAAA,+BAAA,EAAmC,eAAA,OAAA,cAAe,YAAY,YAAA,EAAe,KAAK;QAGtG,MAAM,eAAe,MAAM,SAAS,IAAA;QAEpC,IAAI,OAAgC,CAAC;QACrC,IAAI,cACA,IAAI;YACA,OAAO,KAAK,KAAA,CAAM;QACtB,EAAA,OACO,KAAK;YACRA,QAAO,KAAA,CAAM,+BAA+B;YAC5C,IAAI,SAAS,EAAA,EAAI,MAAM;YACvB,MAAM,IAAI,MAAM,GAAG,SAAS,UAAU,CAAA,EAAA,EAAK,SAAS,MAAM,CAAA,CAAA,CAAG;QACjE;QAGJ,IAAI,CAAC,SAAS,EAAA,EAAI;YACdA,QAAO,KAAA,CAAM,sBAAsB;YACnC,IAAI,SAAS,OAAA,CAAQ,GAAA,CAAI,eAAe;gBACpC,MAAM,QAAQ,SAAS,OAAA,CAAQ,GAAA,CAAI;gBACnC,MAAM,IAAI,eAAe,OAAO,GAAG,KAAK,SAAA,CAAU,OAAO;YAC7D;YACA,IAAI,KAAK,KAAA,EACL,MAAM,IAAI,cAAc,MAAM;YAElC,MAAM,IAAI,MAAM,GAAG,SAAS,UAAU,CAAA,EAAA,EAAK,SAAS,MAAM,CAAA,GAAA,EAAM,KAAK,SAAA,CAAU,OAAO;QAC1F;QAEA,OAAO;IACX;IAEQ,mBACJ,OAAA,EACI;QACJ,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,aAAa,OAAO,IAAA,CAAK,IAAA,CAAK,aAAa;QACjD,MAAM,mBAAmB;YACrB;YACA;YACA;SAAA;QAEJ,IAAI,WAAW,MAAA,KAAW,GACtB;QAEJ,WAAW,OAAA,CAAQ,CAAC;YAChB,IAAI,iBAAiB,QAAA,CAAS,WAAW,iBAAA,KAAsB;gBAC3DA,QAAO,IAAA,CAAK,4CAA4C,YAAY;gBACpE;YACJ;YACA,MAAM,UAAW,OAAO,IAAA,CAAK,aAAA,CAAc,WAAU,KAAM,aACtD,IAAA,CAAK,aAAA,CAAc,WAAU,KAC9B,IAAA,CAAK,aAAA,CAAc,WAFvB;YAGA,IAAI,WAAW,YAAY,IACvB,OAAA,CAAQ,WAAU,GAAI;QAE9B;IACJ;AACJ;A,yB;AClNO,IAAM,kBAAN;IAUI,YAA6B,SAAA,CAAoC;QAApC,IAAA,CAAA,SAAA,GAAA;QATpC,IAAA,CAAiB,OAAA,GAAU,IAAI,OAAO;QAKtC,IAAA,CAAQ,YAAA,GAAoC;QAC5C,IAAA,CAAQ,SAAA,GAA0C;QAI9C,IAAA,CAAK,YAAA,GAAe,IAAA,CAAK,SAAA,CAAU,WAAnC;QACA,IAAA,CAAK,YAAA,GAAe,IAAI,YACpB;YAAC;SADmB,EAEpB,MACA,IAAA,CAAK,SAAA,CAAU,YADf;QAGJ,IAAI,IAAA,CAAK,SAAA,CAAU,WAAA,EAAa;YAC5B,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;YACnB,IAAA,CAAK,YAAA,GAAe,IAAA,CAAK,SAAA,CAAU,WAAnC;QACJ;QAEA,IAAI,IAAA,CAAK,SAAA,CAAU,QAAA,EAAU;YACzB,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;YACnB,IAAA,CAAK,SAAA,GAAY,IAAA,CAAK,SAAA,CAAU,QAAhC;QACJ;QAEA,IAAI,IAAA,CAAK,SAAA,CAAU,uBAAA,EAAyB;YACxC,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;YACnB,IAAA,CAAK,wBAAA,GAA2B,IAAA,CAAK,SAAA,CAAU,uBAA/C;QACJ;IACJ;IAEO,mBAAyB;QAC5B,IAAA,CAAK,YAAA,GAAe;IACxB;IAEA,MAAa,cAA8C;QACvD,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,IAAI,IAAA,CAAK,SAAA,EAAW;YAChBA,QAAO,KAAA,CAAM;YACb,OAAO,IAAA,CAAK,SAAZ;QACJ;QAEA,IAAI,CAAC,IAAA,CAAK,YAAA,EAAc;YACpBA,QAAO,KAAA,CAAM,IAAI,MAAM;YACvB,MAAM;QACV;QAEAA,QAAO,KAAA,CAAM,yBAAyB,IAAA,CAAK,YAAY;QACvD,MAAM,WAAW,MAAM,IAAA,CAAK,YAAA,CAAa,OAAA,CAAQ,IAAA,CAAK,YAAA,EAAc;YAAE,aAAa,IAAA,CAAK,wBAAA;YAA0B,kBAAkB,IAAA,CAAK,SAAA,CAAU,uBAAA;QAAwB;QAE3KA,QAAO,KAAA,CAAM;QACb,IAAA,CAAK,SAAA,GAAY,OAAO,MAAA,CAAO,CAAC,GAAG,IAAA,CAAK,SAAA,CAAU,YAAA,EAAc;QAChE,OAAO,IAAA,CAAK,SAAZ;IACJ;IAEO,YAA6B;QAChC,OAAO,IAAA,CAAK,oBAAA,CAAqB;IACrC;IAEO,2BAA4C;QAC/C,OAAO,IAAA,CAAK,oBAAA,CAAqB;IACrC;IAEO,sBAAuC;QAC1C,OAAO,IAAA,CAAK,oBAAA,CAAqB;IACrC;IAIO,iBAAiB,WAAW,IAAA,EAAmC;QAClE,OAAO,IAAA,CAAK,oBAAA,CAAqB,kBAAkB;IACvD;IAEO,wBAAqD;QACxD,OAAO,IAAA,CAAK,oBAAA,CAAqB,wBAAwB;IAC7D;IAEO,wBAAqD;QACxD,OAAO,IAAA,CAAK,oBAAA,CAAqB,wBAAwB;IAC7D;IAIO,sBAAsB,WAAW,IAAA,EAAmC;QACvE,OAAO,IAAA,CAAK,oBAAA,CAAqB,uBAAuB;IAC5D;IAIO,gBAAgB,WAAW,IAAA,EAAmC;QACjE,OAAO,IAAA,CAAK,oBAAA,CAAqB,YAAY;IACjD;IAEA,MAAgB,qBAAqB,IAAA,EAA0B,WAAS,KAAA,EAAyD;QAC7H,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO,CAAA,sBAAA,EAAyB,KAAI,EAAA,CAAI;QAEpE,MAAM,WAAW,MAAM,IAAA,CAAK,WAAA;QAC5BA,QAAO,KAAA,CAAM;QAEb,IAAI,QAAA,CAAS,KAAI,KAAM,KAAA,GAAW;YAC9B,IAAI,aAAa,MAAM;gBACnBA,QAAO,IAAA,CAAK;gBACZ,OAAO,KAAP;YACJ;YAEAA,QAAO,KAAA,CAAM,IAAI,MAAM,wCAAwC;QACnE;QAEA,OAAO,QAAA,CAAS,KAAhB;IACJ;IAEA,MAAa,iBAA+C;QACxD,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,IAAI,IAAA,CAAK,YAAA,EAAc;YACnBA,QAAO,KAAA,CAAM;YACb,OAAO,IAAA,CAAK,YAAZ;QACJ;QAEA,MAAM,WAAW,MAAM,IAAA,CAAK,eAAA,CAAgB;QAC5CA,QAAO,KAAA,CAAM,gBAAgB;QAE7B,MAAM,SAAS,MAAM,IAAA,CAAK,YAAA,CAAa,OAAA,CAAQ,UAAU;YAAE,kBAAkB,IAAA,CAAK,SAAA,CAAU,uBAAA;QAAwB;QACpHA,QAAO,KAAA,CAAM,eAAe;QAE5B,IAAI,CAAC,MAAM,OAAA,CAAQ,OAAO,IAAI,GAAG;YAC7BA,QAAO,KAAA,CAAM,IAAI,MAAM;YACvB,MAAM;QACV;QAEA,IAAA,CAAK,YAAA,GAAe,OAAO,IAA3B;QACA,OAAO,IAAA,CAAK,YAAZ;IACJ;AACJ;A,8B;ACxIO,IAAM,uBAAN;IAMI,YAAY,EACf,SAAS,OADM,EAEf,QAAQ,YADC,EAEb,GAAyD,CAAC,CAAA,CAAG;QAR7D,IAAA,CAAiB,OAAA,GAAU,IAAI,OAAO;QASlC,IAAA,CAAK,MAAA,GAAS;QACd,IAAA,CAAK,OAAA,GAAU;IACnB;IAEA,MAAa,IAAI,GAAA,EAAa,KAAA,EAA8B;QACxD,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO,CAAA,KAAA,EAAQ,IAAG,EAAA,CAAI;QAEnC,MAAM,IAAA,CAAK,OAAA,GAAU;QACrB,MAAM,IAAA,CAAK,MAAA,CAAO,OAAA,CAAQ,KAAK;IACnC;IAEA,MAAa,IAAI,GAAA,EAAqC;QAClD,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO,CAAA,KAAA,EAAQ,IAAG,EAAA,CAAI;QAEnC,MAAM,IAAA,CAAK,OAAA,GAAU;QACrB,MAAM,OAAO,MAAM,IAAA,CAAK,MAAA,CAAO,OAAA,CAAQ;QACvC,OAAO;IACX;IAEA,MAAa,OAAO,GAAA,EAAqC;QACrD,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO,CAAA,QAAA,EAAW,IAAG,EAAA,CAAI;QAEtC,MAAM,IAAA,CAAK,OAAA,GAAU;QACrB,MAAM,OAAO,MAAM,IAAA,CAAK,MAAA,CAAO,OAAA,CAAQ;QACvC,MAAM,IAAA,CAAK,MAAA,CAAO,UAAA,CAAW;QAC7B,OAAO;IACX;IAEA,MAAa,aAAgC;QACzC,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACpB,MAAM,MAAM,MAAM,IAAA,CAAK,MAAA,CAAO,MAA9B;QAEA,MAAM,OAAO,EAAb;QACA,IAAA,IAAS,QAAQ,GAAG,QAAQ,KAAK,QAAS;YACtC,MAAM,MAAM,MAAM,IAAA,CAAK,MAAA,CAAO,GAAA,CAAI;YAClC,IAAI,OAAO,IAAI,OAAA,CAAQ,IAAA,CAAK,OAAO,MAAM,GACrC,KAAK,IAAA,CAAK,IAAI,MAAA,CAAO,IAAA,CAAK,OAAA,CAAQ,MAAM;QAEhD;QACA,OAAO;IACX;AACJ;A,4B;ACpDA,IAAM,sBAAsB;AAC5B,IAAM,eAAe;AACrB,IAAM,8BAA8B;AACpC,IAAM,gCAAgC;AAiK/B,IAAM,0BAAN;IA+CI,YAAY,EAAA,mBAAA;IAEf,SAFe,EAEJ,WAAX,EAAwB,QAAb,EAAuB,WAAV,EAAuB,YAAb,EAAa,iBAAA;IAE/C,SAF+C,EAEpC,aAAX,EAA0B,gBAAgB,mBAA/B,EAAoD,QAAQ,YAA7B,EAC1C,YADuE,EACzD,wBAAd,EACA,wBAAwB,2BADV,EACU,oBAAA;IAExB,MAFwB,EAEhB,OAAR,EAAiB,OAAT,EAAkB,UAAT,EAAqB,UAAZ,EAAwB,QAAZ,EAAsB,aAAV,EAAU,iBAAA;IAE5D,uBAAuB,IAFqC,EAG5D,eAAe,KADQ,EAEvB,uBADe,EAEf,yBAAyB,6BADzB,EAEA,sBAAsB;QAAE,OAAO;IAAU,CADhB,EAEzB,cAAc,KAD2B,EAC3B,iBAAA;IAEd,UAFc,EAGd,iCADA,EAEA,uBADA,EAEA,wBADA,EACA,QAAA;IAEA,mBAAmB,CAAC,CAFpB,EAGA,mBAAmB,CAAC,CADA,EAEpB,eAAe,CAAC,CADI,EAEpB,IADgB,EAEhB,0BAA0B,KAD1B,EAEJ,CAAuB;QAvP3B,IAAA;QAyPQ,IAAA,CAAK,SAAA,GAAY;QAEjB,IAAI,aACA,IAAA,CAAK,WAAA,GAAc;aAChB;YACH,IAAA,CAAK,WAAA,GAAc;YACnB,IAAI,WAAW;gBACX,IAAI,CAAC,IAAA,CAAK,WAAA,CAAY,QAAA,CAAS,MAC3B,IAAA,CAAK,WAAA,IAAe;gBAExB,IAAA,CAAK,WAAA,IAAe;YACxB;QACJ;QAEA,IAAA,CAAK,QAAA,GAAW;QAChB,IAAA,CAAK,YAAA,GAAe;QACpB,IAAA,CAAK,WAAA,GAAc;QAEnB,IAAA,CAAK,SAAA,GAAY;QACjB,IAAA,CAAK,aAAA,GAAgB;QACrB,IAAA,CAAK,aAAA,GAAgB;QACrB,IAAA,CAAK,KAAA,GAAQ;QACb,IAAA,CAAK,YAAA,GAAe;QACpB,IAAA,CAAK,wBAAA,GAA2B;QAChC,IAAA,CAAK,qBAAA,GAAwB;QAE7B,IAAA,CAAK,MAAA,GAAS;QACd,IAAA,CAAK,OAAA,GAAU;QACf,IAAA,CAAK,OAAA,GAAU;QACf,IAAA,CAAK,UAAA,GAAa;QAClB,IAAA,CAAK,UAAA,GAAa;QAClB,IAAA,CAAK,QAAA,GAAW;QAChB,IAAA,CAAK,aAAA,GAAgB;QAErB,IAAA,CAAK,oBAAA,GAAuB,wBAAA,OAAA,uBAAwB;QACpD,IAAA,CAAK,YAAA,GAAe,CAAC,CAAC;QACtB,IAAA,CAAK,sBAAA,GAAyB;QAC9B,IAAA,CAAK,mBAAA,GAAsB;QAC3B,IAAA,CAAK,uBAAA,GAA0B;QAC/B,IAAA,CAAK,WAAA,GAAc,CAAC,CAAC;QACrB,IAAA,CAAK,iCAAA,GAAoC;QAEzC,IAAA,CAAK,uBAAA,GAA0B,0BAA0B,0BAA0B;QACnF,IAAA,CAAK,uBAAA,GAA0B;QAE/B,IAAI,YACA,IAAA,CAAK,UAAA,GAAa;aAEjB;YACD,MAAM,QAAQ,OAAO,WAAW,cAAc,OAAO,YAAA,GAAe,IAAI;YACxE,IAAA,CAAK,UAAA,GAAa,IAAI,qBAAqB;gBAAE;YAAM;QACvD;QAEA,IAAA,CAAK,wBAAA,GAA2B;QAEhC,IAAA,CAAK,gBAAA,GAAmB;QACxB,IAAA,CAAK,gBAAA,GAAmB;QACxB,IAAA,CAAK,YAAA,GAAe;QAEpB,IAAA,CAAK,IAAA,GAAO;QACZ,IAAI,IAAA,CAAK,IAAA,IAAQ,CAAA,CAAA,AAAC,CAAA,KAAA,IAAA,CAAK,IAAA,AAAA,KAAL,OAAA,KAAA,IAAA,GAAW,KAAA,AAAA,GACzB,MAAM,IAAI,MAAM;IAExB;AACJ;A,yB;AC7SO,IAAM,kBAAN;IAII,YAA6B,SAAA,EACf,gBAAA,CACnB;QAFkC,IAAA,CAAA,SAAA,GAAA;QACf,IAAA,CAAA,gBAAA,GAAA;QAJrB,IAAA,CAAmB,OAAA,GAAU,IAAI,OAAO;QAgCxC,IAAA,CAAU,iBAAA,GAAoB,OAAO;YACjC,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;YACnC,IAAI;gBACA,MAAM,UAAU,SAAS,MAAA,CAAO;gBAChCA,QAAO,KAAA,CAAM;gBAEb,OAAO;YACX,EAAA,OAAS,KAAK;gBACVA,QAAO,KAAA,CAAM;gBACb,MAAM;YACV;QACJ;QArCI,IAAA,CAAK,YAAA,GAAe,IAAI,YACpB,KADoB,GAEpB,IAAA,CAAK,iBADL,EAEA,IAAA,CAAK,SAAA,CAAU,YADV;IAGb;IAEA,MAAa,UAAU,KAAA,EAAmC;QACtD,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,IAAI,CAAC,OACD,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM,IAAI,MAAM;QAGjC,MAAM,MAAM,MAAM,IAAA,CAAK,gBAAA,CAAiB,mBAAA;QACxCA,QAAO,KAAA,CAAM,oBAAoB;QAEjC,MAAM,SAAS,MAAM,IAAA,CAAK,YAAA,CAAa,OAAA,CAAQ,KAAK;YAChD;YACA,aAAa,IAAA,CAAK,SAAA,CAAU,uBAD5B;YAEA,kBAAkB,IAAA,CAAK,SAAA,CAAU,uBADL;QAEhC;QACAA,QAAO,KAAA,CAAM,cAAc;QAE3B,OAAO;IACX;AAcJ;A,qB;ACSO,IAAM,cAAN;IAII,YACc,SAAA,EACA,gBAAA,CACnB;QAFmB,IAAA,CAAA,SAAA,GAAA;QACA,IAAA,CAAA,gBAAA,GAAA;QALrB,IAAA,CAAiB,OAAA,GAAU,IAAI,OAAO;QAOlC,IAAA,CAAK,YAAA,GAAe,IAAI,YACpB,IAAA,CAAK,SAAA,CAAU,iCADK,EAEpB,MACA,IAAA,CAAK,SAAA,CAAU,YADf;IAGR;IAAA;;;;GAAA,GAOA,MAAa,aAAa,EACtB,aAAa,oBADS,EAEtB,eAAe,IAAA,CAAK,SAAA,CAAU,YADjB,EAEb,YAAY,IAAA,CAAK,SAAA,CAAU,SADG,EAE9B,gBAAgB,IAAA,CAAK,SAAA,CAAU,aADJ,EAE3B,YAD+B,EAE/B,GAAG,MACP,EAAuD;QACnD,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,IAAI,CAAC,WACDA,QAAO,KAAA,CAAM,IAAI,MAAM;QAE3B,IAAI,CAAC,cACDA,QAAO,KAAA,CAAM,IAAI,MAAM;QAE3B,IAAI,CAAC,KAAK,IAAA,EACNA,QAAO,KAAA,CAAM,IAAI,MAAM;QAG3B,MAAM,SAAS,IAAI,gBAAgB;YAAE;YAAY;QAAa;QAC9D,KAAA,MAAW,CAAC,KAAK,MAAK,IAAK,OAAO,OAAA,CAAQ,MACtC,IAAI,SAAS,MACT,OAAO,GAAA,CAAI,KAAK;QAGxB,IAAI;QACJ,OAAQ,IAAA,CAAK,SAAA,CAAU,qBAAA;YACnB,KAAK;gBACD,IAAI,CAAC,eAAe;oBAChBA,QAAO,KAAA,CAAM,IAAI,MAAM;oBACvB,MAAM;gBACV;gBACA,YAAY,YAAY,iBAAA,CAAkB,WAAW;gBACrD;YACJ,KAAK;gBACD,OAAO,MAAA,CAAO,aAAa;gBAC3B,IAAI,eACA,OAAO,MAAA,CAAO,iBAAiB;gBAEnC;QACR;QAEA,MAAM,MAAM,MAAM,IAAA,CAAK,gBAAA,CAAiB,gBAAA,CAAiB;QACzDA,QAAO,KAAA,CAAM;QAEb,MAAM,WAAW,MAAM,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,KAAK;YACnD,MAAM;YACN;YACA,kBAAkB,IAAA,CAAK,SAAA,CAAU,uBADjC;YAEA,iBAAiB,IAAA,CAAK,SAAA,CAAU,uBADC;YAEjC;QACJ;QAEAA,QAAO,KAAA,CAAM;QAEb,OAAO;IACX;IAAA;;;;GAAA,GAOA,MAAa,oBAAoB,EAC7B,aAAa,UADgB,EAE7B,YAAY,IAAA,CAAK,SAAA,CAAU,SADd,EAEb,gBAAgB,IAAA,CAAK,SAAA,CAAU,aADJ,EAE3B,QAAQ,IAAA,CAAK,SAAA,CAAU,KADQ,EAE/B,GAAG,MACP,EAA8D;QAC1D,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,IAAI,CAAC,WACDA,QAAO,KAAA,CAAM,IAAI,MAAM;QAG3B,MAAM,SAAS,IAAI,gBAAgB;YAAE;QAAW;QAChD,IAAI,CAAC,IAAA,CAAK,SAAA,CAAU,uBAAA,EAChB,OAAO,GAAA,CAAI,SAAS;QAExB,KAAA,MAAW,CAAC,KAAK,MAAK,IAAK,OAAO,OAAA,CAAQ,MACtC,IAAI,SAAS,MACT,OAAO,GAAA,CAAI,KAAK;QAIxB,IAAI;QACJ,OAAQ,IAAA,CAAK,SAAA,CAAU,qBAAA;YACnB,KAAK;gBACD,IAAI,CAAC,eAAe;oBAChBA,QAAO,KAAA,CAAM,IAAI,MAAM;oBACvB,MAAM;gBACV;gBACA,YAAY,YAAY,iBAAA,CAAkB,WAAW;gBACrD;YACJ,KAAK;gBACD,OAAO,MAAA,CAAO,aAAa;gBAC3B,IAAI,eACA,OAAO,MAAA,CAAO,iBAAiB;gBAEnC;QACR;QAEA,MAAM,MAAM,MAAM,IAAA,CAAK,gBAAA,CAAiB,gBAAA,CAAiB;QACzDA,QAAO,KAAA,CAAM;QAEb,MAAM,WAAW,MAAM,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,KAAK;YAAE,MAAM;YAAQ;YAAW,kBAAkB,IAAA,CAAK,SAAA,CAAU,uBAAA;YAAyB,iBAAiB,IAAA,CAAK,SAAA,CAAU,uBAAA;QAAwB;QACpMA,QAAO,KAAA,CAAM;QAEb,OAAO;IACX;IAAA;;;;GAAA,GAOA,MAAa,qBAAqB,EAC9B,aAAa,eADiB,EAE9B,YAAY,IAAA,CAAK,SAAA,CAAU,SADd,EAEb,gBAAgB,IAAA,CAAK,SAAA,CAAU,aADJ,EAE3B,gBAD+B,EAE/B,YADA,EAEA,GAAG,MACP,EAA+D;QAC3D,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,IAAI,CAAC,WACDA,QAAO,KAAA,CAAM,IAAI,MAAM;QAE3B,IAAI,CAAC,KAAK,aAAA,EACNA,QAAO,KAAA,CAAM,IAAI,MAAM;QAG3B,MAAM,SAAS,IAAI,gBAAgB;YAAE;QAAW;QAChD,KAAA,MAAW,CAAC,KAAK,MAAK,IAAK,OAAO,OAAA,CAAQ,MAAO;YAC7C,IAAI,MAAM,OAAA,CAAQ,QACd,MAAM,OAAA,CAAQ,CAAA,QAAS,OAAO,MAAA,CAAO,KAAK;iBAC9C,IACS,SAAS,MACd,OAAO,GAAA,CAAI,KAAK;QAExB;QACA,IAAI;QACJ,OAAQ,IAAA,CAAK,SAAA,CAAU,qBAAA;YACnB,KAAK;gBACD,IAAI,CAAC,eAAe;oBAChBA,QAAO,KAAA,CAAM,IAAI,MAAM;oBACvB,MAAM;gBACV;gBACA,YAAY,YAAY,iBAAA,CAAkB,WAAW;gBACrD;YACJ,KAAK;gBACD,OAAO,MAAA,CAAO,aAAa;gBAC3B,IAAI,eACA,OAAO,MAAA,CAAO,iBAAiB;gBAEnC;QACR;QAEA,MAAM,MAAM,MAAM,IAAA,CAAK,gBAAA,CAAiB,gBAAA,CAAiB;QACzDA,QAAO,KAAA,CAAM;QAEb,MAAM,WAAW,MAAM,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,KAAK;YAAE,MAAM;YAAQ;YAAW;YAAkB,iBAAiB,IAAA,CAAK,SAAA,CAAU,uBAAA;YAAyB;QAAa;QAC1KA,QAAO,KAAA,CAAM;QAEb,OAAO;IACX;IAAA;;;;GAAA,GAOA,MAAa,OAAO,IAAA,EAAiC;QAnQzD,IAAA;QAoQQ,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,IAAI,CAAC,KAAK,KAAA,EACNA,QAAO,KAAA,CAAM,IAAI,MAAM;QAG3B,MAAM,MAAM,MAAM,IAAA,CAAK,gBAAA,CAAiB,qBAAA,CAAsB;QAE9DA,QAAO,KAAA,CAAM,CAAA,kCAAA,EAAA,AAAqC,CAAA,KAAA,KAAK,eAAA,AAAA,KAAL,OAAA,KAAwB,sBAAsB;QAEhG,MAAM,SAAS,IAAI;QACnB,KAAA,MAAW,CAAC,KAAK,MAAK,IAAK,OAAO,OAAA,CAAQ,MACtC,IAAI,SAAS,MACT,OAAO,GAAA,CAAI,KAAK;QAGxB,OAAO,GAAA,CAAI,aAAa,IAAA,CAAK,SAAA,CAAU,SAAS;QAChD,IAAI,IAAA,CAAK,SAAA,CAAU,aAAA,EACf,OAAO,GAAA,CAAI,iBAAiB,IAAA,CAAK,SAAA,CAAU,aAAa;QAG5D,MAAM,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,KAAK;YAAE,MAAM;YAAQ,kBAAkB,IAAA,CAAK,SAAA,CAAU,uBAAA;QAAwB;QAC/GA,QAAO,KAAA,CAAM;IACjB;AACJ;A,2B;ACtQO,IAAM,oBAAN;IAKI,YACgB,SAAA,EACA,gBAAA,EACA,cAAA,CACrB;QAHqB,IAAA,CAAA,SAAA,GAAA;QACA,IAAA,CAAA,gBAAA,GAAA;QACA,IAAA,CAAA,cAAA,GAAA;QAPvB,IAAA,CAAmB,OAAA,GAAU,IAAI,OAAO;QASpC,IAAA,CAAK,gBAAA,GAAmB,IAAI,gBAAgB,IAAA,CAAK,SAAA,EAAW,IAAA,CAAK,gBAAgB;QACjF,IAAA,CAAK,YAAA,GAAe,IAAI,YAAY,IAAA,CAAK,SAAA,EAAW,IAAA,CAAK,gBAAgB;IAC7E;IAEA,MAAa,uBAAuB,QAAA,EAA0B,KAAA,EAAoB,YAAA,EAA2D;QACzI,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,IAAA,CAAK,mBAAA,CAAoB,UAAU;QACnCA,QAAO,KAAA,CAAM;QAEb,MAAM,IAAA,CAAK,YAAA,CAAa,UAAU,OAAO;QACzCA,QAAO,KAAA,CAAM;QAEb,IAAI,SAAS,QAAA,EACT,IAAA,CAAK,0BAAA,CAA2B;QAEpCA,QAAO,KAAA,CAAM;QAEb,MAAM,IAAA,CAAK,cAAA,CAAe,UAAU,SAAA,OAAA,KAAA,IAAA,MAAO,YAAA,EAAc,SAAS,QAAQ;QAC1EA,QAAO,KAAA,CAAM;IACjB;IAEA,MAAa,4BAA4B,QAAA,EAA0B,YAAA,EAAsC;QACrG,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,IAAI,SAAS,QAAA,IAAY,CAAC,CAAC,SAAS,QAAA,EAChC,IAAA,CAAK,0BAAA,CAA2B;QAEpCA,QAAO,KAAA,CAAM;QAEb,MAAM,IAAA,CAAK,cAAA,CAAe,UAAU,cAAc,SAAS,QAAQ;QACnEA,QAAO,KAAA,CAAM;IACjB;IAEA,MAAa,wBAAwB,QAAA,EAA0B,KAAA,EAAoC;QAjEvG,IAAA,IAAA;QAkEQ,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,SAAS,SAAA,GAAY,MAAM,IAA3B;QAEA,CAAA,KAAA,SAAS,aAAA,AAAA,KAAT,OAAA,KAAA,SAAS,aAAA,GAAkB,MAAM,aAAjC;QAEA,CAAA,KAAA,SAAS,KAAA,AAAA,KAAT,OAAA,KAAA,SAAS,KAAA,GAAU,MAAM,KAAzB;QAIA,IAAI,SAAS,QAAA,IAAY,CAAC,CAAC,SAAS,QAAA,EAAU;YAC1C,IAAA,CAAK,0BAAA,CAA2B,UAAU,MAAM,QAAQ;YACxDA,QAAO,KAAA,CAAM;QACjB;QAEA,IAAI,CAAC,SAAS,QAAA,EAAU;YAEpB,SAAS,QAAA,GAAW,MAAM,QAA1B;YAEA,SAAS,OAAA,GAAU,MAAM,OAAzB;QACJ;QAEA,MAAM,aAAa,SAAS,QAAA,IAAY,CAAC,CAAC,SAAS,QAAnD;QACA,MAAM,IAAA,CAAK,cAAA,CAAe,UAAU,OAAO;QAC3CA,QAAO,KAAA,CAAM;IACjB;IAEO,wBAAwB,QAAA,EAA2B,KAAA,EAAoB;QAC1E,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,IAAI,MAAM,EAAA,KAAO,SAAS,KAAA,EACtBA,QAAO,KAAA,CAAM,IAAI,MAAM;QAM3BA,QAAO,KAAA,CAAM;QACb,SAAS,SAAA,GAAY,MAAM,IAA3B;QAEA,IAAI,SAAS,KAAA,EAAO;YAChBA,QAAO,IAAA,CAAK,sBAAsB,SAAS,KAAK;YAChD,MAAM,IAAI,cAAc;QAC5B;IACJ;IAEU,oBAAoB,QAAA,EAA0B,KAAA,EAA0B;QA/GtF,IAAA;QAgHQ,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,IAAI,MAAM,EAAA,KAAO,SAAS,KAAA,EACtBA,QAAO,KAAA,CAAM,IAAI,MAAM;QAG3B,IAAI,CAAC,MAAM,SAAA,EACPA,QAAO,KAAA,CAAM,IAAI,MAAM;QAG3B,IAAI,CAAC,MAAM,SAAA,EACPA,QAAO,KAAA,CAAM,IAAI,MAAM;QAI3B,IAAI,IAAA,CAAK,SAAA,CAAU,SAAA,KAAc,MAAM,SAAA,EACnCA,QAAO,KAAA,CAAM,IAAI,MAAM;QAE3B,IAAI,IAAA,CAAK,SAAA,CAAU,SAAA,IAAa,IAAA,CAAK,SAAA,CAAU,SAAA,KAAc,MAAM,SAAA,EAC/DA,QAAO,KAAA,CAAM,IAAI,MAAM;QAM3BA,QAAO,KAAA,CAAM;QACb,SAAS,SAAA,GAAY,MAAM,IAA3B;QACA,SAAS,SAAA,GAAY,MAAM,SAA3B;QAEA,CAAA,KAAA,SAAS,KAAA,AAAA,KAAT,OAAA,KAAA,SAAS,KAAA,GAAU,MAAM,KAAzB;QAEA,IAAI,SAAS,KAAA,EAAO;YAChBA,QAAO,IAAA,CAAK,sBAAsB,SAAS,KAAK;YAChD,MAAM,IAAI,cAAc;QAC5B;QAEA,IAAI,MAAM,aAAA,IAAiB,CAAC,SAAS,IAAA,EACjCA,QAAO,KAAA,CAAM,IAAI,MAAM;IAG/B;IAEA,MAAgB,eAAe,QAAA,EAA0B,eAAe,KAAA,EAAO,cAAc,IAAA,EAAqB;QAC9G,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,SAAS,OAAA,GAAU,IAAA,CAAK,cAAA,CAAe,oBAAA,CAAqB,SAAS,OAAO;QAE5E,IAAI,gBAAgB,CAAC,IAAA,CAAK,SAAA,CAAU,YAAA,IAAgB,CAAC,SAAS,YAAA,EAAc;YACxEA,QAAO,KAAA,CAAM;YACb;QACJ;QAEAA,QAAO,KAAA,CAAM;QACb,MAAM,SAAS,MAAM,IAAA,CAAK,gBAAA,CAAiB,SAAA,CAAU,SAAS,YAAY;QAC1EA,QAAO,KAAA,CAAM;QAEb,IAAI,eAAe,OAAO,GAAA,KAAQ,SAAS,OAAA,CAAQ,GAAA,EAC/CA,QAAO,KAAA,CAAM,IAAI,MAAM;QAG3B,SAAS,OAAA,GAAU,IAAA,CAAK,cAAA,CAAe,WAAA,CAAY,SAAS,OAAA,EAAS,IAAA,CAAK,cAAA,CAAe,oBAAA,CAAqB;QAC9GA,QAAO,KAAA,CAAM,+CAA+C,SAAS,OAAO;IAChF;IAEA,MAAgB,aAAa,QAAA,EAA0B,KAAA,EAAoB,YAAA,EAA2D;QAClI,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,IAAI,SAAS,IAAA,EAAM;YACfA,QAAO,KAAA,CAAM;YACb,MAAM,gBAAgB,MAAM,IAAA,CAAK,YAAA,CAAa,YAAA,CAAa;gBACvD,WAAW,MAAM,SADsC;gBAEvD,eAAe,MAAM,aADJ;gBAEjB,MAAM,SAAS,IADM;gBAErB,cAAc,MAAM,YADL;gBAEf,eAAe,MAAM,aADD;gBAEpB;gBACA,GAAG,MAAM,gBADT;YAEJ;YACA,OAAO,MAAA,CAAO,UAAU;QAC5B,OACIA,QAAO,KAAA,CAAM;IAErB;IAEU,2BAA2B,QAAA,EAA0B,aAAA,EAA8B;QAjMjG,IAAA;QAkMQ,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnCA,QAAO,KAAA,CAAM;QACb,MAAM,WAAW,SAAS,MAAA,CAAA,AAAO,CAAA,KAAA,SAAS,QAAA,AAAA,KAAT,OAAA,KAAqB;QAEtD,IAAI,CAAC,SAAS,GAAA,EACVA,QAAO,KAAA,CAAM,IAAI,MAAM;QAG3B,IAAI,eAAe;YACf,MAAM,WAAW,SAAS,MAAA,CAAO;YACjC,IAAI,SAAS,GAAA,KAAQ,SAAS,GAAA,EAC1BA,QAAO,KAAA,CAAM,IAAI,MAAM;YAE3B,IAAI,SAAS,SAAA,IAAa,SAAS,SAAA,KAAc,SAAS,SAAA,EACtDA,QAAO,KAAA,CAAM,IAAI,MAAM;YAE3B,IAAI,SAAS,GAAA,IAAO,SAAS,GAAA,KAAQ,SAAS,GAAA,EAC1CA,QAAO,KAAA,CAAM,IAAI,MAAM;YAE3B,IAAI,CAAC,SAAS,GAAA,IAAO,SAAS,GAAA,EAC1BA,QAAO,KAAA,CAAM,IAAI,MAAM;QAE/B;QAEA,SAAS,OAAA,GAAU;IACvB;AACJ;A,e;ACpNO,IAAM,QAAN,MAAM;IASF,YAAY,IAAA,CAMhB;QACC,IAAA,CAAK,EAAA,GAAK,KAAK,EAAA,IAAM,YAAY,cAAA;QACjC,IAAA,CAAK,IAAA,GAAO,KAAK,IAAjB;QAEA,IAAI,KAAK,OAAA,IAAW,KAAK,OAAA,GAAU,GAC/B,IAAA,CAAK,OAAA,GAAU,KAAK,OAApB;aAGA,IAAA,CAAK,OAAA,GAAU,MAAM,YAAA;QAEzB,IAAA,CAAK,YAAA,GAAe,KAAK,YAAzB;QACA,IAAA,CAAK,SAAA,GAAY,KAAK,SAAtB;IACJ;IAEO,kBAA0B;QAC7B,IAAI,OAAO,SAAS,MAAA,CAAO;QAC3B,OAAO,KAAK,SAAA,CAAU;YAClB,IAAI,IAAA,CAAK,EADS;YAElB,MAAM,IAAA,CAAK,IADF;YAET,SAAS,IAAA,CAAK,OADH;YAEX,cAAc,IAAA,CAAK,YADL;YAEd,WAAW,IAAA,CAAK,SADG;QAEvB;IACJ;IAEA,OAAc,kBAAkB,aAAA,EAAuC;QACnE,OAAO,YAAA,CAAa,SAAS;QAC7B,OAAO,QAAQ,OAAA,CAAQ,IAAI,OAAM,KAAK,KAAA,CAAM;IAChD;IAEA,aAAoB,gBAAgB,OAAA,EAAqB,GAAA,EAA4B;QACjF,MAAMA,UAAS,OAAO,YAAA,CAAa,SAAS;QAC5C,MAAM,SAAS,MAAM,YAAA,KAAiB;QAEtC,MAAM,OAAO,MAAM,QAAQ,UAAA;QAC3BA,QAAO,KAAA,CAAM,YAAY;QAEzB,IAAA,IAAS,IAAI,GAAG,IAAI,KAAK,MAAA,EAAQ,IAAK;YAClC,MAAM,MAAM,IAAA,CAAK,EAAjB;YACA,MAAM,OAAO,MAAM,QAAQ,GAAA,CAAI;YAC/B,IAAI,SAAS;YAEb,IAAI,MACA,IAAI;gBACA,MAAM,QAAQ,MAAM,OAAM,iBAAA,CAAkB;gBAE5CA,QAAO,KAAA,CAAM,sBAAsB,KAAK,MAAM,OAAO;gBACrD,IAAI,MAAM,OAAA,IAAW,QACjB,SAAS;YAEjB,EAAA,OACO,KAAK;gBACRA,QAAO,KAAA,CAAM,gCAAgC,KAAK;gBAClD,SAAS;YACb;iBAEC;gBACDA,QAAO,KAAA,CAAM,+BAA+B;gBAC5C,SAAS;YACb;YAEA,IAAI,QAAQ;gBACRA,QAAO,KAAA,CAAM,yBAAyB;gBACjC,QAAQ,MAAA,CAAO;YACxB;QACJ;IACJ;AACJ;A,qB;ACzDO,IAAM,cAAN,MAAM,qBAAoB;IAyBrB,YAAY,IAAA,CAAuB;QACvC,KAAA,CAAM;QAEN,IAAA,CAAK,aAAA,GAAgB,KAAK,aAA1B;QACA,IAAA,CAAK,cAAA,GAAiB,KAAK,cAA3B;QACA,IAAA,CAAK,SAAA,GAAY,KAAK,SAAtB;QACA,IAAA,CAAK,SAAA,GAAY,KAAK,SAAtB;QACA,IAAA,CAAK,YAAA,GAAe,KAAK,YAAzB;QACA,IAAA,CAAK,KAAA,GAAQ,KAAK,KAAlB;QACA,IAAA,CAAK,aAAA,GAAgB,KAAK,aAA1B;QACA,IAAA,CAAK,gBAAA,GAAmB,KAAK,gBAA7B;QAEA,IAAA,CAAK,aAAA,GAAgB,KAAK,aAA1B;QACA,IAAA,CAAK,YAAA,GAAe,KAAK,YAAzB;IACJ;IAEA,aAAoB,OAAO,IAAA,EAAmD;QAC1E,MAAM,gBAAgB,KAAK,aAAA,KAAkB,OAAO,YAAY,oBAAA,KAA0B,KAAK,aAAA,IAAiB,KAAhH;QACA,MAAM,iBAAiB,gBAAiB,MAAM,YAAY,qBAAA,CAAsB,iBAAkB,KAAlG;QAEA,OAAO,IAAI,aAAY;YACnB,GAAG,IADgB;YAEnB;YACA;QACJ;IACJ;IAEO,kBAA0B;QAC7B,IAAI,OAAO,eAAe,MAAA,CAAO;QACjC,OAAO,KAAK,SAAA,CAAU;YAClB,IAAI,IAAA,CAAK,EADS;YAElB,MAAM,IAAA,CAAK,IADF;YAET,SAAS,IAAA,CAAK,OADH;YAEX,cAAc,IAAA,CAAK,YADL;YAEd,WAAW,IAAA,CAAK,SADG;YAGnB,eAAe,IAAA,CAAK,aAFJ;YAGhB,WAAW,IAAA,CAAK,SADI;YAEpB,WAAW,IAAA,CAAK,SADA;YAEhB,cAAc,IAAA,CAAK,YADH;YAEhB,OAAO,IAAA,CAAK,KADO;YAEnB,eAAe,IAAA,CAAK,aADR;YAEZ,kBAAmB,IAAA,CAAK,gBADJ;YAEpB,eAAe,IAAA,CAAK,aADI;YAExB,cAAc,IAAA,CAAK,YADC;QAExB;IACJ;IAEA,OAAc,kBAAkB,aAAA,EAA6C;QACzE,OAAO,YAAA,CAAa,eAAe;QACnC,MAAM,OAAO,KAAK,KAAA,CAAM;QACxB,OAAO,aAAY,MAAA,CAAO;IAC9B;AACJ;A,uB;AC5DO,IAAM,iBAAN,MAAM;IAMD,YAAY,IAAA,CAGjB;QACC,IAAA,CAAK,GAAA,GAAM,KAAK,GAAhB;QACA,IAAA,CAAK,KAAA,GAAQ,KAAK,KAAlB;IACJ;IAEA,aAAoB,OAAO,EAAA,YAAA;IAEvB,GAFuB,EAElB,SAAL,EAAgB,SAAX,EAAsB,YAAX,EAAyB,aAAd,EAA6B,KAAf,EAAe,WAAA;IAExD,UAFwD,EAE5C,aAAZ,EAA2B,YAAf,EAA6B,aAAd,EAA6B,KAAf,EAAsB,SAAP,EACxD,QAD+D,EAE/D,YADA,EAEA,gBADA,EAEA,gBADA,EAEA,WADA,EAEA,OADA,EAEA,uBADA,EAEA,GAAG,gBACP,EAAoD;QAChD,IAAI,CAAC,KAAK;YACN,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;YACnB,MAAM,IAAI,MAAM;QACpB;QACA,IAAI,CAAC,WAAW;YACZ,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;YACnB,MAAM,IAAI,MAAM;QACpB;QACA,IAAI,CAAC,cAAc;YACf,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;YACnB,MAAM,IAAI,MAAM;QACpB;QACA,IAAI,CAAC,eAAe;YAChB,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;YACnB,MAAM,IAAI,MAAM;QACpB;QACA,IAAI,CAAC,OAAO;YACR,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;YACnB,MAAM,IAAI,MAAM;QACpB;QACA,IAAI,CAAC,WAAW;YACZ,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;YACnB,MAAM,IAAI,MAAM;QACpB;QAEA,MAAM,QAAQ,MAAM,YAAY,MAAA,CAAO;YACnC,MAAM;YACN;YACA;YACA,eAAe,CAAC;YAChB;YAAW;YAAW;YACtB;YACA;YAAe;YAAO;YACtB;QACJ;QAEA,MAAM,YAAY,IAAI,IAAI;QAC1B,UAAU,YAAA,CAAa,MAAA,CAAO,aAAa;QAC3C,UAAU,YAAA,CAAa,MAAA,CAAO,gBAAgB;QAC9C,UAAU,YAAA,CAAa,MAAA,CAAO,iBAAiB;QAC/C,IAAI,CAAC,yBACD,UAAU,YAAA,CAAa,MAAA,CAAO,SAAS;QAE3C,IAAI,OACA,UAAU,YAAA,CAAa,MAAA,CAAO,SAAS;QAG3C,IAAI,SACA,UAAU,YAAA,CAAa,MAAA,CAAO,YAAY;QAG9C,IAAI,aAAa,MAAM,EAAvB;QACA,IAAI,WACA,aAAa,GAAG,aAAa,sBAAsB,WAAnD;QAEJ,UAAU,YAAA,CAAa,MAAA,CAAO,SAAS;QACvC,IAAI,MAAM,cAAA,EAAgB;YACtB,UAAU,YAAA,CAAa,MAAA,CAAO,kBAAkB,MAAM,cAAc;YACpE,UAAU,YAAA,CAAa,MAAA,CAAO,yBAAyB;QAC3D;QAEA,IAAI,UAAU;YAEV,MAAM,YAAY,MAAM,OAAA,CAAQ,YAAY,WAAW;gBAAC;aAAxD;YACA,UACK,OAAA,CAAQ,CAAA,IAAK,UAAU,YAAA,CAAa,MAAA,CAAO,YAAY;QAChE;QAEA,KAAA,MAAW,CAAC,KAAK,MAAK,IAAK,OAAO,OAAA,CAAQ;YAAE;YAAe,GAAG,cAAA;YAAgB,GAAG,gBAAA;QAAiB,GAC9F,IAAI,SAAS,MACT,UAAU,YAAA,CAAa,MAAA,CAAO,KAAK,MAAM,QAAA;QAIjD,OAAO,IAAI,eAAc;YACrB,KAAK,UAAU,IADM;YAErB;QACJ;IACJ;AACJ;AA3Ga,eACe,OAAA,GAAU,IAAI,OAAO;AAD1C,IAAM,gBAAN;A,wB;AC9CP,IAAM,YAAY;AAOX,IAAM,iBAAN;IAsCI,YAAY,MAAA,CAAyB;QAjB5C,mCAAA,GAAA,IAAA,CAAO,YAAA,GAAe;QAEtB,iCAAA,GAAA,IAAA,CAAO,UAAA,GAAa;QAapB,8BAAA,GAAA,IAAA,CAAO,OAAA,GAAuB,CAAC;QAG3B,IAAA,CAAK,KAAA,GAAQ,OAAO,GAAA,CAAI;QACxB,IAAA,CAAK,aAAA,GAAgB,OAAO,GAAA,CAAI;QAChC,IAAI,IAAA,CAAK,KAAA,EAAO;YACZ,MAAM,aAAa,mBAAmB,IAAA,CAAK,KAAK,EAAE,KAAA,CAAM;YACxD,IAAA,CAAK,KAAA,GAAQ,UAAA,CAAW,EAAxB;YACA,IAAI,WAAW,MAAA,GAAS,GACpB,IAAA,CAAK,SAAA,GAAY,WAAW,KAAA,CAAM,GAAG,IAAA,CAAK;QAElD;QAEA,IAAA,CAAK,KAAA,GAAQ,OAAO,GAAA,CAAI;QACxB,IAAA,CAAK,iBAAA,GAAoB,OAAO,GAAA,CAAI;QACpC,IAAA,CAAK,SAAA,GAAY,OAAO,GAAA,CAAI;QAE5B,IAAA,CAAK,IAAA,GAAO,OAAO,GAAA,CAAI;IAC3B;IAEA,IAAW,aAAiC;QACxC,IAAI,IAAA,CAAK,UAAA,KAAe,KAAA,GACpB,OAAO,KAAP;QAEJ,OAAO,IAAA,CAAK,UAAA,GAAa,MAAM,YAAA;IACnC;IACA,IAAW,WAAW,KAAA,EAA2B;QAE7C,IAAI,OAAO,UAAU,UAAU,QAAQ,OAAO;QAC9C,IAAI,UAAU,KAAA,KAAa,SAAS,GAChC,IAAA,CAAK,UAAA,GAAa,KAAK,KAAA,CAAM,SAAS,MAAM,YAAA;IAEpD;IAEA,IAAW,WAAoB;QAnFnC,IAAA;QAoFQ,OAAA,AAAA,CAAA,AAAO,CAAA,KAAA,IAAA,CAAK,KAAA,AAAA,KAAL,OAAA,KAAA,IAAA,GAAY,KAAA,CAAM,KAAK,QAAA,CAAS,UAAA,KAAc,CAAC,CAAC,IAAA,CAAK,QAA5D;IACJ;AACJ;A,wB;ACzDO,IAAM,iBAAN;IAMI,YAAY,EACf,GADe,EAEf,UADA,EACY,aAAZ,EAA2B,wBAAf,EAAyC,gBAA1B,EAA4C,YAAlB,EAAgC,SAAd,EAC3E,CAAuB;QARvB,IAAA,CAAiB,OAAA,GAAU,IAAI,OAAO;QASlC,IAAI,CAAC,KAAK;YACN,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;YACnB,MAAM,IAAI,MAAM;QACpB;QAEA,MAAM,YAAY,IAAI,IAAI;QAC1B,IAAI,eACA,UAAU,YAAA,CAAa,MAAA,CAAO,iBAAiB;QAEnD,IAAI,WACA,UAAU,YAAA,CAAa,MAAA,CAAO,aAAa;QAG/C,IAAI,0BAA0B;YAC1B,UAAU,YAAA,CAAa,MAAA,CAAO,4BAA4B;YAE1D,IAAI,YAAY;gBACZ,IAAA,CAAK,KAAA,GAAQ,IAAI,MAAM;oBAAE,MAAM;oBAAY;gBAAa;gBAExD,UAAU,YAAA,CAAa,MAAA,CAAO,SAAS,IAAA,CAAK,KAAA,CAAM,EAAE;YACxD;QACJ;QAEA,KAAA,MAAW,CAAC,KAAK,MAAK,IAAK,OAAO,OAAA,CAAQ;YAAE,GAAG,gBAAA;QAAiB,GAC5D,IAAI,SAAS,MACT,UAAU,YAAA,CAAa,MAAA,CAAO,KAAK,MAAM,QAAA;QAIjD,IAAA,CAAK,GAAA,GAAM,UAAU,IAArB;IACJ;AACJ;A,yB;AC/DO,IAAM,kBAAN;IAcI,YAAY,MAAA,CAAyB;QACxC,IAAA,CAAK,KAAA,GAAQ,OAAO,GAAA,CAAI;QAExB,IAAA,CAAK,KAAA,GAAQ,OAAO,GAAA,CAAI;QACxB,IAAA,CAAK,iBAAA,GAAoB,OAAO,GAAA,CAAI;QACpC,IAAA,CAAK,SAAA,GAAY,OAAO,GAAA,CAAI;IAChC;AACJ;A,uB;ACXA,IAAM,wBAAwB;IAC1B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACJ;AAQA,IAAM,iCAAiC;IAAC;IAAO;IAAO;IAAO;IAAO;CAApE;AAKO,IAAM,gBAAN;IAEI,YACgB,SAAA,CACrB;QADqB,IAAA,CAAA,SAAA,GAAA;QAFvB,IAAA,CAAmB,OAAA,GAAU,IAAI,OAAO;IAGrC;IAEI,qBAAqB,MAAA,EAAkC;QAC1D,MAAM,SAAS;YAAE,GAAG,MAAA;QAAO;QAE3B,IAAI,IAAA,CAAK,SAAA,CAAU,oBAAA,EAAsB;YACrC,IAAI;YACJ,IAAI,MAAM,OAAA,CAAQ,IAAA,CAAK,SAAA,CAAU,oBAAoB,GACjD,iBAAiB,IAAA,CAAK,SAAA,CAAU,oBAAhC;iBAEA,iBAAiB;YAGrB,KAAA,MAAW,SAAS,eAChB,IAAI,CAAC,+BAA+B,QAAA,CAAS,QACzC,OAAO,MAAA,CAAO,MAAd;QAGZ;QAEA,OAAO;IACX;IAGO,YAAY,OAAA,EAAsB,OAAA,EAAiC;QACtE,MAAM,SAAS;YAAE,GAAG,OAAA;QAAQ;QAC5B,KAAA,MAAW,CAAC,OAAO,OAAM,IAAK,OAAO,OAAA,CAAQ,SACzC,IAAI,MAAA,CAAO,MAAK,KAAM,QAAQ;YAC1B,IAAI,MAAM,OAAA,CAAQ,MAAA,CAAO,MAAM,KAAK,MAAM,OAAA,CAAQ;gBAC9C,IAAI,IAAA,CAAK,SAAA,CAAU,mBAAA,CAAoB,KAAA,IAAS,WAC5C,MAAA,CAAO,MAAK,GAAI;qBACb;oBACH,MAAM,eAAe,MAAM,OAAA,CAAQ,MAAA,CAAO,MAAM,IAAI,MAAA,CAAO,MAAK,GAAiB;wBAAC,MAAA,CAAO,MAAM;qBAA/F;oBACA,KAAA,MAAW,SAAS,MAAM,OAAA,CAAQ,UAAU,SAAS;wBAAC;qBAAM,CACxD,IAAI,CAAC,aAAa,QAAA,CAAS,QACvB,aAAa,IAAA,CAAK;oBAG1B,MAAA,CAAO,MAAK,GAAI;gBACpB;mBACJ,IAAW,OAAO,MAAA,CAAO,MAAK,KAAM,YAAY,OAAO,WAAW,UAC9D,MAAA,CAAO,MAAK,GAAI,IAAA,CAAK,WAAA,CAAY,MAAA,CAAO,MAAK,EAAgB;iBAE7D,MAAA,CAAO,MAAK,GAAI;QAExB;QAGJ,OAAO;IACX;AACJ;A,mB;AChFO,IAAM,YAAN;IACI,YACa,IAAA,EACT,KAAA,CACT;QAFkB,IAAA,CAAA,IAAA,GAAA;QACT,IAAA,CAAA,KAAA,GAAA;IACP;AACR;A,oB;ACwDO,IAAM,aAAN;IAWI,YAAY,QAAA,EAAwD,eAAA,CAAmC;QAT9G,IAAA,CAAmB,OAAA,GAAU,IAAI,OAAO;QAUpC,IAAA,CAAK,QAAA,GAAW,oBAAoB,0BAA0B,WAAW,IAAI,wBAAwB;QAErG,IAAA,CAAK,eAAA,GAAkB,mBAAA,OAAA,kBAAmB,IAAI,gBAAgB,IAAA,CAAK,QAAQ;QAC3E,IAAA,CAAK,cAAA,GAAiB,IAAI,cAAc,IAAA,CAAK,QAAQ;QACrD,IAAA,CAAK,UAAA,GAAa,IAAI,kBAAkB,IAAA,CAAK,QAAA,EAAU,IAAA,CAAK,eAAA,EAAiB,IAAA,CAAK,cAAc;QAChG,IAAA,CAAK,YAAA,GAAe,IAAI,YAAY,IAAA,CAAK,QAAA,EAAU,IAAA,CAAK,eAAe;IAC3E;IAEA,MAAa,oBAAoB,EAC7B,KAD6B,EAE7B,OADA,EAEA,WADA,EAEA,YADA,EAEA,aADA,EAEA,UADA,EAEA,YADA,EAEA,KADA,EAEA,SADA,EAEA,gBAAgB,IAAA,CAAK,QAAA,CAAS,aAD9B,EAEA,QAAQ,IAAA,CAAK,QAAA,CAAS,KADQ,EAE9B,eAAe,IAAA,CAAK,QAAA,CAAS,YADP,EAEtB,SAAS,IAAA,CAAK,QAAA,CAAS,MADM,EAE7B,UAAU,IAAA,CAAK,QAAA,CAAS,OADD,EAEvB,UAAU,IAAA,CAAK,QAAA,CAAS,OADA,EAExB,aAAa,IAAA,CAAK,QAAA,CAAS,UADH,EAExB,aAAa,IAAA,CAAK,QAAA,CAAS,UADA,EAE3B,WAAW,IAAA,CAAK,QAAA,CAAS,QADE,EAE3B,gBAAgB,IAAA,CAAK,QAAA,CAAS,aADL,EAEzB,mBAAmB,IAAA,CAAK,QAAA,CAAS,gBADH,EAE9B,mBAAmB,IAAA,CAAK,QAAA,CAAS,gBADA,EAEjC,OADiC,EAEjC,0BAA0B,IAAA,CAAK,QAAA,CAAS,uBADxC,EAEJ,EAAoD;QAChD,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,IAAI,kBAAkB,QAClB,MAAM,IAAI,MAAM;QAGpB,MAAM,MAAM,MAAM,IAAA,CAAK,eAAA,CAAgB,wBAAA;QACvCA,QAAO,KAAA,CAAM,mCAAmC;QAEhD,MAAM,gBAAgB,MAAM,cAAc,MAAA,CAAO;YAC7C;YACA,WAAW,IAAA,CAAK,QAAA,CAAS,SADzB;YAEA,WAAW,IAAA,CAAK,QAAA,CAAS,SADA;YAEzB;YACA;YACA;YACA,YAAY;YACZ;YACA;YAAQ;YAAS;YAAS;YAAY;YAAe;YAAY;YAAY;YAC7E;YAAU;YAAS;YAAa;YAAkB;YAAkB;YAAc;YAClF,eAAe,IAAA,CAAK,QAAA,CAAS,aADqD;YAElF;YACA;YACA,aAAa,IAAA,CAAK,QAAA,CAAS,WAD3B;YAEA;QACJ;QAGA,MAAM,IAAA,CAAK,eAAA;QAEX,MAAM,cAAc,cAAc,KAAlC;QACA,MAAM,IAAA,CAAK,QAAA,CAAS,UAAA,CAAW,GAAA,CAAI,YAAY,EAAA,EAAI,YAAY,eAAA;QAC/D,OAAO;IACX;IAEA,MAAa,wBAAwB,GAAA,EAAa,cAAc,KAAA,EAAkE;QAC9H,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,MAAM,WAAW,IAAI,eAAe,SAAS,UAAA,CAAW,KAAK,IAAA,CAAK,QAAA,CAAS,aAAa;QACxF,IAAI,CAAC,SAAS,KAAA,EAAO;YACjBA,QAAO,KAAA,CAAM,IAAI,MAAM;YAEvB,MAAM;QACV;QAEA,MAAM,oBAAoB,MAAM,IAAA,CAAK,QAAA,CAAS,UAAA,CAAW,cAAc,WAAW,MAAK,CAAE,SAAS,KAAK;QACvG,IAAI,CAAC,mBAAmB;YACpBA,QAAO,KAAA,CAAM,IAAI,MAAM;YACvB,MAAM;QACV;QAEA,MAAM,QAAQ,MAAM,YAAY,iBAAA,CAAkB;QAClD,OAAO;YAAE;YAAO;QAAS;IAC7B;IAEA,MAAa,sBAAsB,GAAA,EAAa,YAAA,EAAqE;QACjH,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,MAAM,EAAE,KAAA,EAAO,QAAA,EAAS,GAAI,MAAM,IAAA,CAAK,uBAAA,CAAwB,KAAK;QACpEA,QAAO,KAAA,CAAM;QAEb,IAAI,IAAA,CAAK,QAAA,CAAS,IAAA,IAAQ,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,KAAA,EAAO;YAChD,MAAM,YAAY,MAAM,IAAA,CAAK,YAAA,CAAa,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,KAAK;YAClE,eAAe;gBAAE,GAAG,YAAA;gBAAc,QAAQ;YAAU;QACxD;QAUA,IAAI;YACA,MAAM,IAAA,CAAK,UAAA,CAAW,sBAAA,CAAuB,UAAU,OAAO;QAClE,EAAA,OACO,KAAK;YACR,IAAI,eAAe,kBAAkB,IAAA,CAAK,QAAA,CAAS,IAAA,EAAM;gBACrD,MAAM,YAAY,MAAM,IAAA,CAAK,YAAA,CAAa,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,KAAA,EAAO,IAAI,KAAK;gBAC7E,YAAA,CAAc,OAAM,GAAI;gBACxB,MAAM,IAAA,CAAK,UAAA,CAAW,sBAAA,CAAuB,UAAU,OAAO;YAClE,OACI,MAAM;QAEd;QAEA,OAAO;IACX;IAEA,MAAM,aAAa,SAAA,EAAsB,KAAA,EAAiC;QACtE,IAAI;QACJ,IAAI;QAEJ,IAAI,CAAA,AAAE,CAAA,MAAM,UAAU,UAAA,EAAW,EAAG,QAAA,CAAS,IAAA,CAAK,QAAA,CAAS,SAAS,GAAG;YACnE,UAAU,MAAM,YAAY,gBAAA;YAC5B,YAAY,IAAI,UAAU,SAAS;YACnC,MAAM,UAAU,GAAA,CAAI,IAAA,CAAK,QAAA,CAAS,SAAA,EAAW;QACjD,OAAO;YACH,YAAY,MAAM,UAAU,GAAA,CAAI,IAAA,CAAK,QAAA,CAAS,SAAS;YAGvD,IAAI,UAAU,KAAA,KAAU,SAAS,OAAO;gBACpC,UAAU,KAAA,GAAQ;gBAClB,MAAM,UAAU,GAAA,CAAI,IAAA,CAAK,QAAA,CAAS,SAAA,EAAW;YACjD;QACJ;QAEA,OAAO,MAAM,YAAY,iBAAA,CAAkB;YACvC,KAAK,MAAM,IAAA,CAAK,eAAA,CAAgB,gBAAA,CAAiB;YACjD,YAAY;YACZ,SAAS,UAAU,IADP;YAEZ,OAAO,UAAU,KADE;QAEvB;IACJ;IAEA,MAAa,wCAAwC,EACjD,QADiD,EAEjD,QADA,EAEA,eAAe,KADf,EAEA,mBAAmB,CAAC,CADL,EAEnB,EAAyE;QACrE,MAAM,gBAAyC,MAAM,IAAA,CAAK,YAAA,CAAa,mBAAA,CAAoB;YAAE;YAAU;YAAU,GAAG,gBAAA;QAAiB;QACrI,MAAM,iBAAiC,IAAI,eAAe,IAAI;QAC9D,OAAO,MAAA,CAAO,gBAAgB;QAC9B,MAAM,IAAA,CAAK,UAAA,CAAW,2BAAA,CAA4B,gBAAgB;QAClE,OAAO;IACX;IAEA,MAAa,gBAAgB,EACzB,KADyB,EAEzB,YADA,EAEA,QADA,EAEA,gBADA,EAEA,YADA,EAEA,gBADA,EAEJ,EAAiD;QA/PrD,IAAA;QAgQQ,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAKnC,IAAI;QACJ,IAAI,IAAA,CAAK,QAAA,CAAS,wBAAA,KAA6B,KAAA,GAC3C,QAAQ,MAAM,KAAd;aACG;YACH,MAAM,kBAAkB,IAAA,CAAK,QAAA,CAAS,wBAAA,CAAyB,KAAA,CAAM;YACrE,MAAM,iBAAA,AAAA,CAAA,AAAiB,CAAA,KAAA,MAAM,KAAA,AAAA,KAAN,OAAA,KAAA,IAAA,GAAa,KAAA,CAAM,IAAA,KAAQ,EAAlD;YAEA,QAAQ,eAAe,MAAA,CAAO,CAAA,IAAK,gBAAgB,QAAA,CAAS,IAAI,IAAA,CAAK;QACzE;QAEA,IAAI,IAAA,CAAK,QAAA,CAAS,IAAA,IAAQ,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,KAAA,EAAO;YAChD,MAAM,YAAY,MAAM,IAAA,CAAK,YAAA,CAAa,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,KAAK;YAClE,eAAe;gBAAE,GAAG,YAAA;gBAAc,QAAQ;YAAU;QACxD;QAUA,IAAI;QACJ,IAAI;YACA,SAAS,MAAM,IAAA,CAAK,YAAA,CAAa,oBAAA,CAAqB;gBAClD,eAAe,MAAM,aAD6B;gBAC7B,6CAAA;gBAErB;gBACA;gBACA;gBACA;gBACA;gBACA,GAAG,gBADH;YAEJ;QACJ,EAAA,OAAS,KAAK;YACV,IAAI,eAAe,kBAAkB,IAAA,CAAK,QAAA,CAAS,IAAA,EAAM;gBACrD,YAAA,CAAc,OAAM,GAAI,MAAM,IAAA,CAAK,YAAA,CAAa,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,KAAA,EAAO,IAAI,KAAK;gBACnF,SAAS,MAAM,IAAA,CAAK,YAAA,CAAa,oBAAA,CAAqB;oBAClD,eAAe,MAAM,aAD6B;oBAC7B,6CAAA;oBAErB;oBACA;oBACA;oBACA;oBACA;oBACA,GAAG,gBADH;gBAEJ;YACJ,OACI,MAAM;QAEd;QAEA,MAAM,WAAW,IAAI,eAAe,IAAI;QACxC,OAAO,MAAA,CAAO,UAAU;QACxBA,QAAO,KAAA,CAAM,uBAAuB;QACpC,MAAM,IAAA,CAAK,UAAA,CAAW,uBAAA,CAAwB,UAAU;YACpD,GAAG,KADiD;YACjD,+DAAA;YAAA,kGAAA;YAGH;QACJ;QACA,OAAO;IACX;IAEA,MAAa,qBAAqB,EAC9B,KAD8B,EAE9B,aADA,EAEA,SADA,EAEA,YADA,EAEA,2BAA2B,IAAA,CAAK,QAAA,CAAS,wBADzC,EAEA,mBAAmB,IAAA,CAAK,QAAA,CAAS,gBADQ,EAE7C,GAA8B,CAAC,CAAA,EAA4B;QACvD,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,MAAM,MAAM,MAAM,IAAA,CAAK,eAAA,CAAgB,qBAAA;QACvC,IAAI,CAAC,KAAK;YACNA,QAAO,KAAA,CAAM,IAAI,MAAM;YACvB,MAAM;QACV;QAEAA,QAAO,KAAA,CAAM,iCAAiC;QAG9C,IAAI,CAAC,aAAa,4BAA4B,CAAC,eAC3C,YAAY,IAAA,CAAK,QAAA,CAAS,SAA1B;QAGJ,MAAM,UAAU,IAAI,eAAe;YAC/B;YACA;YACA;YACA;YACA,YAAY;YACZ;YACA;QACJ;QAGA,MAAM,IAAA,CAAK,eAAA;QAEX,MAAM,eAAe,QAAQ,KAA7B;QACA,IAAI,cAAc;YACdA,QAAO,KAAA,CAAM;YACb,MAAM,IAAA,CAAK,QAAA,CAAS,UAAA,CAAW,GAAA,CAAI,aAAa,EAAA,EAAI,aAAa,eAAA;QACrE;QAEA,OAAO;IACX;IAEA,MAAa,yBAAyB,GAAA,EAAa,cAAc,KAAA,EAAyE;QACtI,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,MAAM,WAAW,IAAI,gBAAgB,SAAS,UAAA,CAAW,KAAK,IAAA,CAAK,QAAA,CAAS,aAAa;QACzF,IAAI,CAAC,SAAS,KAAA,EAAO;YACjBA,QAAO,KAAA,CAAM;YAEb,IAAI,SAAS,KAAA,EAAO;gBAChBA,QAAO,IAAA,CAAK,uBAAuB,SAAS,KAAK;gBACjD,MAAM,IAAI,cAAc;YAC5B;YAEA,OAAO;gBAAE,OAAO,KAAA;gBAAW;YAAS;QACxC;QAEA,MAAM,oBAAoB,MAAM,IAAA,CAAK,QAAA,CAAS,UAAA,CAAW,cAAc,WAAW,MAAK,CAAE,SAAS,KAAK;QACvG,IAAI,CAAC,mBAAmB;YACpBA,QAAO,KAAA,CAAM,IAAI,MAAM;YACvB,MAAM;QACV;QAEA,MAAM,QAAQ,MAAM,MAAM,iBAAA,CAAkB;QAC5C,OAAO;YAAE;YAAO;QAAS;IAC7B;IAEA,MAAa,uBAAuB,GAAA,EAAuC;QACvE,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,MAAM,EAAE,KAAA,EAAO,QAAA,EAAS,GAAI,MAAM,IAAA,CAAK,wBAAA,CAAyB,KAAK;QACrE,IAAI,OAAO;YACPA,QAAO,KAAA,CAAM;YACb,IAAA,CAAK,UAAA,CAAW,uBAAA,CAAwB,UAAU;QACtD,OACIA,QAAO,KAAA,CAAM;QAGjB,OAAO;IACX;IAEO,kBAAiC;QACpC,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACpB,OAAO,MAAM,eAAA,CAAgB,IAAA,CAAK,QAAA,CAAS,UAAA,EAAY,IAAA,CAAK,QAAA,CAAS,sBAAsB;IAC/F;IAEA,MAAa,YAAY,KAAA,EAAe,IAAA,EAAwD;QAC5F,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACpB,OAAO,MAAM,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO;YAClC;YACA,iBAAiB;QACrB;IACJ;AACJ;A,wB;AC3ZO,IAAM,iBAAN;IAMI,YAA6B,YAAA,CAA2B;QAA3B,IAAA,CAAA,YAAA,GAAA;QALpC,IAAA,CAAiB,OAAA,GAAU,IAAI,OAAO;QAyCtC,IAAA,CAAU,MAAA,GAAS,OACf;YAKA,MAAM,gBAAgB,KAAK,aAA3B;YACA,IAAI,CAAC,eACD;YAEJ,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;YAEnC,IAAI,KAAK,OAAA,EAAS;gBACd,IAAA,CAAK,IAAA,GAAO,KAAK,OAAA,CAAQ,GAAzB;gBACAA,QAAO,KAAA,CAAM,iBAAiB,eAAe,SAAS,IAAA,CAAK,IAAI;YACnE,OACK;gBACD,IAAA,CAAK,IAAA,GAAO,KAAZ;gBACAA,QAAO,KAAA,CAAM,iBAAiB,eAAe;YACjD;YAEA,IAAI,IAAA,CAAK,mBAAA,EAAqB;gBAC1B,IAAA,CAAK,mBAAA,CAAoB,KAAA,CAAM;gBAC/B;YACJ;YAEA,IAAI;gBACA,MAAM,MAAM,MAAM,IAAA,CAAK,YAAA,CAAa,eAAA,CAAgB,qBAAA;gBACpD,IAAI,KAAK;oBACLA,QAAO,KAAA,CAAM;oBAEb,MAAM,YAAY,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,SAA7C;oBACA,MAAM,oBAAoB,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,6BAArD;oBACA,MAAM,cAAc,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,uBAA/C;oBAEA,MAAM,qBAAqB,IAAI,mBAAmB,IAAA,CAAK,SAAA,EAAW,WAAW,KAAK,mBAAmB;oBACrG,MAAM,mBAAmB,IAAA;oBACzB,IAAA,CAAK,mBAAA,GAAsB;oBAC3B,mBAAmB,KAAA,CAAM;gBAC7B,OAEIA,QAAO,IAAA,CAAK;YAEpB,EAAA,OACO,KAAK;gBAERA,QAAO,KAAA,CAAM,qCAAqC,eAAe,QAAQ,IAAI,OAAA,GAAU;YAC3F;QACJ;QAEA,IAAA,CAAU,KAAA,GAAQ;YACd,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;YACnC,IAAA,CAAK,IAAA,GAAO,KAAZ;YAEA,IAAI,IAAA,CAAK,mBAAA,EACL,IAAA,CAAK,mBAAA,CAAoB,IAAA;YAG7B,IAAI,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,uBAAA,EAAyB;gBAIpD,MAAM,cAAc,YAAY;oBAC5B,cAAc;oBAEd,IAAI;wBACA,MAAM,UAAU,MAAM,IAAA,CAAK,YAAA,CAAa,kBAAA;wBACxC,IAAI,SAAS;4BACT,MAAM,UAAU;gCACZ,eAAe,QAAQ,aADX;gCAEZ,SAAS,QAAQ,GAAA,GAAM;oCACnB,KAAK,QAAQ,GADM;gCAEvB,IAAI;4BACR;4BACK,IAAA,CAAK,MAAA,CAAO;wBACrB;oBACJ,EAAA,OACO,KAAK;wBAERA,QAAO,KAAA,CAAM,iCAAiC,eAAe,QAAQ,IAAI,OAAA,GAAU;oBACvF;gBACJ,GAAG;YACP;QACJ;QAEA,IAAA,CAAU,SAAA,GAAY;YAClB,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;YACnC,IAAI;gBACA,MAAM,UAAU,MAAM,IAAA,CAAK,YAAA,CAAa,kBAAA;gBACxC,IAAI,aAAa;gBAEjB,IAAI,WAAW,IAAA,CAAK,mBAAA;oBAChB,IAAI,QAAQ,GAAA,KAAQ,IAAA,CAAK,IAAA,EAAM;wBAC3B,aAAa;wBACb,IAAA,CAAK,mBAAA,CAAoB,KAAA,CAAM,QAAQ,aAAa;wBAEpDA,QAAO,KAAA,CAAM,6GAA6G,QAAQ,aAAa;wBAC/I,MAAM,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,wBAAA;oBACnC,OAEIA,QAAO,KAAA,CAAM,oCAAoC,QAAQ,GAAG;uBAIhEA,QAAO,KAAA,CAAM;gBAGjB,IAAI;oBACA,IAAI,IAAA,CAAK,IAAA,EACL,MAAM,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,mBAAA;yBAG/B,MAAM,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,kBAAA;uBAGnCA,QAAO,KAAA,CAAM;YAErB,EAAA,OACO,KAAK;gBACR,IAAI,IAAA,CAAK,IAAA,EAAM;oBACXA,QAAO,KAAA,CAAM,qEAAqE;oBAClF,MAAM,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,mBAAA;gBACnC;YACJ;QACJ;QA/JI,IAAI,CAAC,cACD,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM,IAAI,MAAM;QAGjC,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,aAAA,CAAc,IAAA,CAAK,MAAM;QAClD,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,eAAA,CAAgB,IAAA,CAAK,KAAK;QAEnD,IAAA,CAAK,KAAA,GAAQ,KAAA,CAAM,CAAC;YAEhB,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;QACvB;IACJ;IAEA,MAAgB,QAAuB;QACnC,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACpB,MAAM,OAAO,MAAM,IAAA,CAAK,YAAA,CAAa,OAAA;QAGrC,IAAI,MACK,IAAA,CAAK,MAAA,CAAO;aACrB,IACS,IAAA,CAAK,YAAA,CAAa,QAAA,CAAS,uBAAA,EAAyB;YACzD,MAAM,UAAU,MAAM,IAAA,CAAK,YAAA,CAAa,kBAAA;YACxC,IAAI,SAAS;gBACT,MAAM,UAAU;oBACZ,eAAe,QAAQ,aADX;oBAEZ,SAAS,QAAQ,GAAA,GAAM;wBACnB,KAAK,QAAQ,GADM;oBAEvB,IAAI;gBACR;gBACK,IAAA,CAAK,MAAA,CAAO;YACrB;QACJ;IACJ;AA+HJ;A,c;AClKO,IAAM,OAAN,MAAM;IAuCF,YAAY,IAAA,CAWhB;QAlEP,IAAA;QAmEQ,IAAA,CAAK,QAAA,GAAW,KAAK,QAArB;QACA,IAAA,CAAK,aAAA,GAAA,AAAgB,CAAA,KAAA,KAAK,aAAA,AAAA,KAAL,OAAA,KAAsB;QAC3C,IAAA,CAAK,YAAA,GAAe,KAAK,YAAzB;QACA,IAAA,CAAK,aAAA,GAAgB,KAAK,aAA1B;QAEA,IAAA,CAAK,UAAA,GAAa,KAAK,UAAvB;QACA,IAAA,CAAK,KAAA,GAAQ,KAAK,KAAlB;QACA,IAAA,CAAK,OAAA,GAAU,KAAK,OAApB;QACA,IAAA,CAAK,UAAA,GAAa,KAAK,UAAvB;QACA,IAAA,CAAK,KAAA,GAAQ,KAAK,SAAlB;QACA,IAAA,CAAK,SAAA,GAAY,KAAK,SAAtB;IACJ;IAAA,+DAAA,GAGA,IAAW,aAAiC;QACxC,IAAI,IAAA,CAAK,UAAA,KAAe,KAAA,GACpB,OAAO,KAAP;QAEJ,OAAO,IAAA,CAAK,UAAA,GAAa,MAAM,YAAA;IACnC;IAEA,IAAW,WAAW,KAAA,EAA2B;QAC7C,IAAI,UAAU,KAAA,GACV,IAAA,CAAK,UAAA,GAAa,KAAK,KAAA,CAAM,SAAS,MAAM,YAAA;IAEpD;IAAA,8DAAA,GAGA,IAAW,UAA+B;QACtC,MAAM,aAAa,IAAA,CAAK,UAAxB;QACA,IAAI,eAAe,KAAA,GACf,OAAO,KAAP;QAEJ,OAAO,cAAc;IACzB;IAAA,2DAAA,GAGA,IAAW,SAAmB;QAxGlC,IAAA,IAAA;QAyGQ,OAAA,AAAO,CAAA,KAAA,AAAA,CAAA,KAAA,IAAA,CAAK,KAAA,AAAA,KAAL,OAAA,KAAA,IAAA,GAAY,KAAA,CAAM,IAAA,KAAlB,OAAA,KAA0B,EAAjC;IACJ;IAEO,kBAA0B;QAC7B,IAAI,OAAO,QAAQ,MAAA,CAAO;QAC1B,OAAO,KAAK,SAAA,CAAU;YAClB,UAAU,IAAA,CAAK,QADG;YAElB,eAAe,IAAA,CAAK,aADL;YAEf,cAAc,IAAA,CAAK,YADC;YAEpB,eAAe,IAAA,CAAK,aADD;YAEnB,YAAY,IAAA,CAAK,UADG;YAEpB,OAAO,IAAA,CAAK,KADK;YAEjB,SAAS,IAAA,CAAK,OADF;YAEZ,YAAY,IAAA,CAAK,UADH;QAElB;IACJ;IAEA,OAAc,kBAAkB,aAAA,EAA6B;QACzD,OAAO,YAAA,CAAa,QAAQ;QAC5B,OAAO,IAAI,MAAK,KAAK,KAAA,CAAM;IAC/B;AACJ;A,wC;ACxHA,IAAM,gBAAgB;AAcf,IAAe,sBAAf;IAAA,aAAsD;QAEzD,IAAA,CAAmB,MAAA,GAAS,IAAI,MAAuB;QACvD,IAAA,CAAmB,gBAAA,GAAmB,aAAA,GAAA,IAAI;QAE1C,IAAA,CAAU,OAAA,GAA8B;IAAA;IAExC,MAAa,SAAS,MAAA,EAAmD;QACrE,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,IAAI,CAAC,IAAA,CAAK,OAAA,EACN,MAAM,IAAI,MAAM;QAGpBA,QAAO,KAAA,CAAM;QACb,IAAA,CAAK,OAAA,CAAQ,QAAA,CAAS,OAAA,CAAQ,OAAO,GAAG;QAExC,MAAM,EAAE,GAAA,EAAK,QAAA,EAAS,GAAI,MAAM,IAAI,QAAqB,CAAC,SAAS;YAC/D,MAAM,WAAW,CAAC;gBArC9B,IAAA;gBAsCgB,MAAM,OAAgC,EAAE,IAAxC;gBACA,MAAM,SAAA,AAAS,CAAA,KAAA,OAAO,YAAA,AAAA,KAAP,OAAA,KAAuB,OAAO,QAAA,CAAS,MAAtD;gBACA,IAAI,EAAE,MAAA,KAAW,UAAA,AAAU,CAAA,QAAA,OAAA,KAAA,IAAA,KAAM,MAAA,AAAA,MAAW,eAExC;gBAEJ,IAAI;oBACA,MAAM,QAAQ,SAAS,UAAA,CAAW,KAAK,GAAA,EAAK,OAAO,aAAa,EAAE,GAAA,CAAI;oBACtE,IAAI,CAAC,OACDA,QAAO,IAAA,CAAK;oBAEhB,IAAI,EAAE,MAAA,KAAW,IAAA,CAAK,OAAA,IAAW,UAAU,OAAO,KAAA,EAG9C;gBAER,EAAA,OACO,KAAK;oBACR,IAAA,CAAK,QAAA;oBACL,OAAO,IAAI,MAAM;gBACrB;gBACA,QAAQ;YACZ;YACA,OAAO,gBAAA,CAAiB,WAAW,UAAU;YAC7C,IAAA,CAAK,gBAAA,CAAiB,GAAA,CAAI,IAAM,OAAO,mBAAA,CAAoB,WAAW,UAAU;YAChF,IAAA,CAAK,gBAAA,CAAiB,GAAA,CAAI,IAAA,CAAK,MAAA,CAAO,UAAA,CAAW,CAAC;gBAC9C,IAAA,CAAK,QAAA;gBACL,OAAO;YACX;QACJ;QACAA,QAAO,KAAA,CAAM;QACb,IAAA,CAAK,QAAA;QAEL,IAAI,CAAC,UACD,IAAA,CAAK,KAAA;QAGT,OAAO;YAAE;QAAI;IACjB;IAIQ,WAAiB;QACrB,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEpB,KAAA,MAAW,WAAW,IAAA,CAAK,gBAAA,CACvB;QAEJ,IAAA,CAAK,gBAAA,CAAiB,KAAA;IAC1B;IAEA,OAAiB,cAAc,MAAA,EAAgB,GAAA,EAAa,WAAW,KAAA,EAAO,eAAe,OAAO,QAAA,CAAS,MAAA,EAAc;QACvH,OAAO,WAAA,CAAY;YACf,QAAQ;YACR;YACA;QACJ,GAAkB;IACtB;AACJ;A,6B;ACxFO,IAAM,6BAAkD;IAC3D,UAAU;IACV,SAAS;IACT,QAAQ;IACR,gCAAgC;AACpC;AACO,IAAM,qBAAqB;AAClC,IAAM,sDAAsD;AAC5D,IAAM,uCAAuC;AACtC,IAAM,uCAAuC;AA4E7C,IAAM,2BAAN,cAAuC;IA+BnC,YAAY,IAAA,CAA2B;QAC1C,MAAM,EACF,qBAAqB,KAAK,YADxB,EAEF,iCAAiC,KAAK,wBADZ,EAE1B,sBAAsB,0BADgB,EAEtC,oBAAoB,kBADE,EAEtB,iBAAiB,QADG,EAEpB,iBAAiB,MADA,EAGjB,2BAA2B,KAAK,wBAFf,EAGjB,qBAAqB,KAAK,kBADM,EAGhC,uBAF0B,EAG1B,sBAAsB,KAAK,YAD3B,EAEA,6BAD2B,EAE3B,uBAAuB,IADvB,EAEA,2BAA2B,IADJ,EAEvB,8BAA8B,KADH,EAG3B,iBAAiB,KAFa,EAG9B,0BAA0B,KADT,EAEjB,gCAAgC,oCADN,EAE1B,6BAA6B,MADG,EAEhC,0BAA0B,IADG,EAG7B,mBAAmB;YAAC;YAAgB;SAFV,EAG1B,wBAAwB,KAD2B,EAEnD,gCAAgC,KADR,EAGxB,+CAA+C,mDAFf,EAIhC,SAF+C,EAGnD,GAAI;QAEJ,KAAA,CAAM;QAEN,IAAA,CAAK,kBAAA,GAAqB;QAC1B,IAAA,CAAK,8BAAA,GAAiC;QACtC,IAAA,CAAK,mBAAA,GAAsB;QAC3B,IAAA,CAAK,iBAAA,GAAoB;QACzB,IAAA,CAAK,cAAA,GAAiB;QACtB,IAAA,CAAK,cAAA,GAAiB;QAEtB,IAAA,CAAK,wBAAA,GAA2B;QAChC,IAAA,CAAK,kBAAA,GAAqB;QAE1B,IAAA,CAAK,mBAAA,GAAsB;QAC3B,IAAA,CAAK,6BAAA,GAAgC,iCAAiC,2BAA2B;QACjG,IAAA,CAAK,oBAAA,GAAuB;QAC5B,IAAA,CAAK,wBAAA,GAA2B;QAChC,IAAA,CAAK,2BAAA,GAA8B;QAEnC,IAAA,CAAK,cAAA,GAAiB;QACtB,IAAA,CAAK,uBAAA,GAA0B;QAC/B,IAAA,CAAK,6BAAA,GAAgC;QACrC,IAAA,CAAK,uBAAA,GAA0B;QAC/B,IAAA,CAAK,0BAAA,GAA6B;QAElC,IAAA,CAAK,gBAAA,GAAmB;QACxB,IAAA,CAAK,qBAAA,GAAwB;QAC7B,IAAA,CAAK,6BAAA,GAAgC;QAErC,IAAA,CAAK,4CAAA,GAA+C;QAEpD,IAAI,WACA,IAAA,CAAK,SAAA,GAAY;aAEhB;YACD,MAAM,QAAQ,OAAO,WAAW,cAAc,OAAO,cAAA,GAAiB,IAAI;YAC1E,IAAA,CAAK,SAAA,GAAY,IAAI,qBAAqB;gBAAE;YAAM;QACtD;IACJ;AACJ;A,iC;ACjLO,IAAM,eAAN,MAAM,sBAAqB;IAKvB,YAAY,EACf,gCAAgC,oCADjB,EAEnB,CAAuB;QACnB,KAAA;QAPJ,IAAA,CAAmB,OAAA,GAAU,IAAI,OAAO;QAQpC,IAAA,CAAK,iBAAA,GAAoB;QAEzB,IAAA,CAAK,MAAA,GAAS,cAAa,kBAAA;QAC3B,IAAA,CAAK,OAAA,GAAU,IAAA,CAAK,MAAA,CAAO,aAA3B;IACJ;IAEA,OAAe,qBAAwC;QACnD,MAAM,SAAS,OAAO,QAAA,CAAS,aAAA,CAAc;QAG7C,OAAO,KAAA,CAAM,UAAA,GAAa;QAC1B,OAAO,KAAA,CAAM,QAAA,GAAW;QACxB,OAAO,KAAA,CAAM,IAAA,GAAO;QACpB,OAAO,KAAA,CAAM,GAAA,GAAM;QACnB,OAAO,KAAA,GAAQ;QACf,OAAO,MAAA,GAAS;QAEhB,OAAO,QAAA,CAAS,IAAA,CAAK,WAAA,CAAY;QACjC,OAAO;IACX;IAEA,MAAa,SAAS,MAAA,EAAmD;QACrE,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM,+BAA+B,IAAA,CAAK,iBAAiB;QACxE,MAAM,QAAQ,WAAW,IAAM,KAAK,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,IAAI,aAAa,yCAAyC,IAAA,CAAK,iBAAA,GAAoB;QACzI,IAAA,CAAK,gBAAA,CAAiB,GAAA,CAAI,IAAM,aAAa;QAE7C,OAAO,MAAM,KAAA,CAAM,SAAS;IAChC;IAEO,QAAc;QAzDzB,IAAA;QA0DQ,IAAI,IAAA,CAAK,MAAA,EAAQ;YACb,IAAI,IAAA,CAAK,MAAA,CAAO,UAAA,EAAY;gBACxB,IAAA,CAAK,MAAA,CAAO,gBAAA,CAAiB,QAAQ,CAAC;oBA5DtD,IAAAC;oBA6DoB,MAAM,QAAQ,GAAG,MAAjB;oBACAA,CAAAA,MAAA,MAAM,UAAA,AAAA,KAAN,QAAAA,IAAkB,WAAA,CAAY;oBACzB,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,IAAI,MAAM;gBACrC,GAAG;gBACH,CAAA,KAAA,IAAA,CAAK,MAAA,CAAO,aAAA,AAAA,KAAZ,QAAA,GAA2B,QAAA,CAAS,OAAA,CAAQ;YAChD;YACA,IAAA,CAAK,MAAA,GAAS;QAClB;QACA,IAAA,CAAK,OAAA,GAAU;IACnB;IAEA,OAAc,aAAa,GAAA,EAAa,YAAA,EAA6B;QACjE,OAAO,KAAA,CAAM,cAAc,OAAO,MAAA,EAAQ,KAAK,OAAO;IAC1D;AACJ;A,oC;AChEO,IAAM,kBAAN;IAGH,YAAoB,SAAA,CAAqC;QAArC,IAAA,CAAA,SAAA,GAAA;QAFpB,IAAA,CAAiB,OAAA,GAAU,IAAI,OAAO;IAEoB;IAE1D,MAAa,QAAQ,EACjB,gCAAgC,IAAA,CAAK,SAAA,CAAU,6BAD9B,EAErB,EAA8C;QAC1C,OAAO,IAAI,aAAa;YAAE;QAA8B;IAC5D;IAEA,MAAa,SAAS,GAAA,EAA4B;QAC9C,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACpB,aAAa,YAAA,CAAa,KAAK,IAAA,CAAK,SAAA,CAAU,wBAAwB;IAC1E;AACJ;A,gC;AClBA,IAAM,8BAA8B;AACpC,IAAM,SAAS;AAeR,IAAM,cAAN,cAA0B;IAKtB,YAAY,EACf,oBAAoB,kBADL,EAEf,sBAAsB,CAAC,CADH,EAEpB,WADuB,EAE3B,CAAsB;QAClB,KAAA;QATJ,IAAA,CAAmB,OAAA,GAAU,IAAI,OAAO;QAUpC,MAAM,gBAAgB,WAAW,MAAA,CAAO;YAAE,GAAG,0BAAA;YAA4B,GAAG,mBAAA;QAAoB;QAChG,IAAA,CAAK,OAAA,GAAU,OAAO,IAAA,CAAK,KAAA,GAAW,mBAAmB,WAAW,SAAA,CAAU;QAE9E,IAAI,aACA,YAAY,gBAAA,CAAiB,SAAS;YAvClD,IAAA;YAwCqB,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,IAAI,MAAA,AAAM,CAAA,KAAA,YAAY,MAAA,AAAA,KAAZ,OAAA,KAAsB;QAC3D;QAGJ,IAAI,oBAAoB,8BAAA,IAAkC,oBAAoB,8BAAA,GAAiC,GAC3G,WAAW;YACP,IAAI,CAAC,IAAA,CAAK,OAAA,IAAW,OAAO,IAAA,CAAK,OAAA,CAAQ,MAAA,KAAW,aAAa,IAAA,CAAK,OAAA,CAAQ,MAAA,EAAQ;gBAC7E,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,IAAI,MAAM;gBACjC;YACJ;YAEA,IAAA,CAAK,KAAA;QACT,GAAG,oBAAoB,8BAAA,GAAiC;IAEhE;IAEA,MAAa,SAAS,MAAA,EAAmD;QAxD7E,IAAA;QAyDQ,CAAA,KAAA,IAAA,CAAK,OAAA,AAAA,KAAL,QAAA,GAAc,KAAd;QAEA,MAAM,sBAAsB,YAAY;YACpC,IAAI,CAAC,IAAA,CAAK,OAAA,IAAW,IAAA,CAAK,OAAA,CAAQ,MAAA,EACzB,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,IAAI,MAAM;QAEzC,GAAG;QACH,IAAA,CAAK,gBAAA,CAAiB,GAAA,CAAI,IAAM,cAAc;QAE9C,OAAO,MAAM,KAAA,CAAM,SAAS;IAChC;IAEO,QAAc;QACjB,IAAI,IAAA,CAAK,OAAA,EACL;YAAA,IAAI,CAAC,IAAA,CAAK,OAAA,CAAQ,MAAA,EAAQ;gBACtB,IAAA,CAAK,OAAA,CAAQ,KAAA;gBACR,IAAA,CAAK,MAAA,CAAO,KAAA,CAAM,IAAI,MAAM;YACrC;QAAA;QAEJ,IAAA,CAAK,OAAA,GAAU;IACnB;IAEA,OAAc,aAAa,GAAA,EAAa,QAAA,EAAyB;QAC7D,IAAI,CAAC,OAAO,MAAA,EACR,MAAM,IAAI,MAAM;QAEpB,OAAO,KAAA,CAAM,cAAc,OAAO,MAAA,EAAQ,KAAK;IACnD;AACJ;A,mC;AC1EO,IAAM,iBAAN;IAGH,YAAoB,SAAA,CAAqC;QAArC,IAAA,CAAA,SAAA,GAAA;QAFpB,IAAA,CAAiB,OAAA,GAAU,IAAI,OAAO;IAEqB;IAE3D,MAAa,QAAQ,EACjB,sBAAsB,IAAA,CAAK,SAAA,CAAU,mBADpB,EAEjB,oBAAoB,IAAA,CAAK,SAAA,CAAU,iBADE,EAErC,WADmC,EAEvC,EAA4C;QACxC,OAAO,IAAI,YAAY;YAAE;YAAqB;YAAmB;QAAY;IACjF;IAEA,MAAa,SAAS,GAAA,EAAa,EAAE,WAAW,KAAA,EAAM,EAAkB;QACpE,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEpB,YAAY,YAAA,CAAa,KAAK;IAClC;AACJ;A,sC;ACVO,IAAM,oBAAN;IAGH,YAAoB,SAAA,CAAqC;QAArC,IAAA,CAAA,SAAA,GAAA;QAFpB,IAAA,CAAiB,OAAA,GAAU,IAAI,OAAO;IAEoB;IAE1D,MAAa,QAAQ,EACjB,iBAAiB,IAAA,CAAK,SAAA,CAAU,cADf,EAEjB,iBAAiB,IAAA,CAAK,SAAA,CAAU,cADA,EAEpC,EAAqC;QA3BzC,IAAA;QA4BQ,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACpB,IAAI,eAAe,OAAO,IAA1B;QAEA,IAAI,mBAAmB,OACnB,eAAA,AAAe,CAAA,KAAA,OAAO,GAAA,AAAA,KAAP,OAAA,KAAc,OAAO,IAApC;QAGJ,MAAM,WAAW,aAAa,QAAA,CAAS,eAAc,CAAE,IAAA,CAAK,aAAa,QAAQ;QACjF,IAAI;QACJ,OAAO;YACH,UAAU,OAAO;gBACb,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;gBAEpB,MAAM,UAAU,IAAI,QAAQ,CAAC,SAAS;oBAClC,QAAQ;gBACZ;gBACA,SAAS,OAAO,GAAG;gBACnB,OAAO,MAAO;YAClB;YACA,OAAO;gBACH,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;gBACpB,SAAA,QAAA,MAAQ,IAAI,MAAM;gBAClB,aAAa,IAAA;YACjB;QACJ;IACJ;IAEA,MAAa,WAA0B;QACnC;IACJ;AACJ;A,2B;ACtBO,IAAM,oBAAN,cAAgC;IAU5B,YAAY,QAAA,CAAoC;QACnD,KAAA,CAAM;YAAE,mCAAmC,SAAS,4CAAA;QAA6C;QAVrG,IAAA,CAAmB,OAAA,GAAU,IAAI,OAAO;QAExC,IAAA,CAAiB,WAAA,GAAc,IAAI,MAAc;QACjD,IAAA,CAAiB,aAAA,GAAgB,IAAI,MAAU;QAC/C,IAAA,CAAiB,iBAAA,GAAoB,IAAI,MAAe;QACxD,IAAA,CAAiB,aAAA,GAAgB,IAAI,MAAU;QAC/C,IAAA,CAAiB,cAAA,GAAiB,IAAI,MAAU;QAChD,IAAA,CAAiB,mBAAA,GAAsB,IAAI,MAAU;IAIrD;IAEA,MAAa,KAAK,IAAA,EAAY,aAAW,IAAA,EAAqB;QAC1D,KAAA,CAAM,KAAK;QACX,IAAI,YACA,MAAM,IAAA,CAAK,WAAA,CAAY,KAAA,CAAM;IAErC;IACA,MAAa,SAAwB;QACjC,KAAA,CAAM;QACN,MAAM,IAAA,CAAK,aAAA,CAAc,KAAA;IAC7B;IAAA;;GAAA,GAKO,cAAc,EAAA,EAAoC;QACrD,OAAO,IAAA,CAAK,WAAA,CAAY,UAAA,CAAW;IACvC;IAAA;;GAAA,GAIO,iBAAiB,EAAA,EAA8B;QAClD,OAAO,IAAA,CAAK,WAAA,CAAY,aAAA,CAAc;IAC1C;IAAA;;GAAA,GAKO,gBAAgB,EAAA,EAAsC;QACzD,OAAO,IAAA,CAAK,aAAA,CAAc,UAAA,CAAW;IACzC;IAAA;;GAAA,GAIO,mBAAmB,EAAA,EAAgC;QACtD,OAAO,IAAA,CAAK,aAAA,CAAc,aAAA,CAAc;IAC5C;IAAA;;GAAA,GAKO,oBAAoB,EAAA,EAA0C;QACjE,OAAO,IAAA,CAAK,iBAAA,CAAkB,UAAA,CAAW;IAC7C;IAAA;;GAAA,GAIO,uBAAuB,EAAA,EAAoC;QAC9D,OAAO,IAAA,CAAK,iBAAA,CAAkB,aAAA,CAAc;IAChD;IAAA;;GAAA,GAIA,MAAa,uBAAuB,CAAA,EAAyB;QACzD,MAAM,IAAA,CAAK,iBAAA,CAAkB,KAAA,CAAM;IACvC;IAAA;;;GAAA,GAMO,gBAAgB,EAAA,EAAsC;QACzD,OAAO,IAAA,CAAK,aAAA,CAAc,UAAA,CAAW;IACzC;IAAA;;GAAA,GAIO,mBAAmB,EAAA,EAAgC;QACtD,IAAA,CAAK,aAAA,CAAc,aAAA,CAAc;IACrC;IAAA;;GAAA,GAIA,MAAa,qBAAoC;QAC7C,MAAM,IAAA,CAAK,aAAA,CAAc,KAAA;IAC7B;IAAA;;;GAAA,GAMO,iBAAiB,EAAA,EAAuC;QAC3D,OAAO,IAAA,CAAK,cAAA,CAAe,UAAA,CAAW;IAC1C;IAAA;;GAAA,GAIO,oBAAoB,EAAA,EAAiC;QACxD,IAAA,CAAK,cAAA,CAAe,aAAA,CAAc;IACtC;IAAA;;GAAA,GAIA,MAAa,sBAAqC;QAC9C,MAAM,IAAA,CAAK,cAAA,CAAe,KAAA;IAC9B;IAAA;;;GAAA,GAMO,sBAAsB,EAAA,EAA4C;QACrE,OAAO,IAAA,CAAK,mBAAA,CAAoB,UAAA,CAAW;IAC/C;IAAA;;GAAA,GAIO,yBAAyB,EAAA,EAAsC;QAClE,IAAA,CAAK,mBAAA,CAAoB,aAAA,CAAc;IAC3C;IAAA;;GAAA,GAIA,MAAa,2BAA0C;QACnD,MAAM,IAAA,CAAK,mBAAA,CAAoB,KAAA;IACnC;AACJ;A,4B;AC1JO,IAAM,qBAAN;IAKI,YAAoB,YAAA,CAA2B;QAA3B,IAAA,CAAA,YAAA,GAAA;QAJ3B,IAAA,CAAU,OAAA,GAAU,IAAI,OAAO;QAC/B,IAAA,CAAQ,UAAA,GAAa;QACrB,IAAA,CAAiB,WAAA,GAAc,IAAI,MAAM;QAgCzC,IAAA,CAAU,cAAA,GAAsC;YAC5C,MAAMD,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;YACnC,IAAI;gBACA,MAAM,IAAA,CAAK,YAAA,CAAa,YAAA;gBACxBA,QAAO,KAAA,CAAM;YACjB,EAAA,OACO,KAAK;gBACR,IAAI,eAAe,cAAc;oBAE7BA,QAAO,IAAA,CAAK,mCAAmC,KAAK;oBACpD,IAAA,CAAK,WAAA,CAAY,IAAA,CAAK;oBACtB;gBACJ;gBAEAA,QAAO,KAAA,CAAM,4BAA4B;gBACzC,MAAM,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,sBAAA,CAAuB;YAC1D;QACJ;IA/CuD;IAEvD,MAAa,QAAuB;QAChC,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,IAAI,CAAC,IAAA,CAAK,UAAA,EAAY;YAClB,IAAA,CAAK,UAAA,GAAa;YAClB,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,sBAAA,CAAuB,IAAA,CAAK,cAAc;YACnE,IAAA,CAAK,WAAA,CAAY,UAAA,CAAW,IAAA,CAAK,cAAc;YAG/C,IAAI;gBACA,MAAM,IAAA,CAAK,YAAA,CAAa,OAAA;YAE5B,EAAA,OACO,KAAK;gBAERA,QAAO,KAAA,CAAM,iBAAiB;YAClC;QACJ;IACJ;IAEO,OAAa;QAChB,IAAI,IAAA,CAAK,UAAA,EAAY;YACjB,IAAA,CAAK,WAAA,CAAY,MAAA;YACjB,IAAA,CAAK,WAAA,CAAY,aAAA,CAAc,IAAA,CAAK,cAAc;YAClD,IAAA,CAAK,YAAA,CAAa,MAAA,CAAO,yBAAA,CAA0B,IAAA,CAAK,cAAc;YACtE,IAAA,CAAK,UAAA,GAAa;QACtB;IACJ;AAoBJ;A,sB;ACtDO,IAAM,eAAN;IAUH,YAAY,IAAA,CAQT;QACC,IAAA,CAAK,aAAA,GAAgB,KAAK,aAA1B;QACA,IAAA,CAAK,QAAA,GAAW,KAAK,QAArB;QACA,IAAA,CAAK,aAAA,GAAgB,KAAK,aAA1B;QACA,IAAA,CAAK,KAAA,GAAQ,KAAK,KAAlB;QACA,IAAA,CAAK,OAAA,GAAU,KAAK,OAApB;QAEA,IAAA,CAAK,IAAA,GAAO,KAAK,KAAjB;IAEJ;AACJ;A,qB;AC0CO,IAAM,cAAN;IAaI,YAAY,QAAA,EAA+B,iBAAA,EAAgC,cAAA,EAA6B,eAAA,CAA8B;QAV7I,IAAA,CAAmB,OAAA,GAAU,IAAI,OAAO;QAWpC,IAAA,CAAK,QAAA,GAAW,IAAI,yBAAyB;QAE7C,IAAA,CAAK,OAAA,GAAU,IAAI,WAAW;QAE9B,IAAA,CAAK,kBAAA,GAAqB,qBAAA,OAAA,oBAAqB,IAAI,kBAAkB,IAAA,CAAK,QAAQ;QAClF,IAAA,CAAK,eAAA,GAAkB,kBAAA,OAAA,iBAAkB,IAAI,eAAe,IAAA,CAAK,QAAQ;QACzE,IAAA,CAAK,gBAAA,GAAmB,mBAAA,OAAA,kBAAmB,IAAI,gBAAgB,IAAA,CAAK,QAAQ;QAE5E,IAAA,CAAK,OAAA,GAAU,IAAI,kBAAkB,IAAA,CAAK,QAAQ;QAClD,IAAA,CAAK,mBAAA,GAAsB,IAAI,mBAAmB,IAAI;QAGtD,IAAI,IAAA,CAAK,QAAA,CAAS,oBAAA,EACd,IAAA,CAAK,gBAAA;QAGT,IAAA,CAAK,eAAA,GAAkB;QACvB,IAAI,IAAA,CAAK,QAAA,CAAS,cAAA,EACd,IAAA,CAAK,eAAA,GAAkB,IAAI,eAAe,IAAI;IAEtD;IAAA;;GAAA,GAKA,IAAW,SAA4B;QACnC,OAAO,IAAA,CAAK,OAAZ;IACJ;IAAA;;GAAA,GAKA,IAAW,kBAAmC;QAC1C,OAAO,IAAA,CAAK,OAAA,CAAQ,eAApB;IACJ;IAAA;;;;GAAA,GAOA,MAAa,UAAgC;QACzC,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,OAAO,MAAM,IAAA,CAAK,SAAA;QACxB,IAAI,MAAM;YACNA,QAAO,IAAA,CAAK;YACZ,MAAM,IAAA,CAAK,OAAA,CAAQ,IAAA,CAAK,MAAM;YAC9B,OAAO;QACX;QAEAA,QAAO,IAAA,CAAK;QACZ,OAAO;IACX;IAAA;;;;GAAA,GAOA,MAAa,aAA4B;QACrC,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,IAAA,CAAK,SAAA,CAAU;QACrBA,QAAO,IAAA,CAAK;QACZ,MAAM,IAAA,CAAK,OAAA,CAAQ,MAAA;IACvB;IAAA;;;;;;GAAA,GASA,MAAa,eAAe,OAA2B,CAAC,CAAA,EAAkB;QAvK9E,IAAA;QAwKQ,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACpB,MAAM,EACF,cADE,EAEF,GAAG,aACP,GAAI;QAEJ,IAAI;QACJ,IAAA,AAAI,CAAA,KAAA,IAAA,CAAK,QAAA,CAAS,IAAA,AAAA,KAAd,OAAA,KAAA,IAAA,GAAoB,uBAAA,EACpB,UAAU,MAAM,IAAA,CAAK,eAAA,CAAgB,IAAA,CAAK,QAAA,CAAS,IAAI;QAG3D,MAAM,SAAS,MAAM,IAAA,CAAK,kBAAA,CAAmB,OAAA,CAAQ;YAAE;QAAe;QACtE,MAAM,IAAA,CAAK,YAAA,CAAa;YACpB,cAAc;YACd;YACA,GAAG,WADH;QAEJ,GAAG;IACP;IAAA;;;;;;;GAAA,GAUA,MAAa,uBAAuB,MAAM,OAAO,QAAA,CAAS,IAAA,EAAqB;QAC3E,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,OAAO,MAAM,IAAA,CAAK,UAAA,CAAW;QACnC,IAAI,KAAK,OAAA,IAAW,KAAK,OAAA,CAAQ,GAAA,EAC7BA,QAAO,IAAA,CAAK,8BAA8B,KAAK,OAAA,CAAQ,GAAG;aAG1DA,QAAO,IAAA,CAAK;QAGhB,OAAO;IACX;IAAA;;;;;GAAA,GAQA,MAAa,+BAA+B,EACxC,QADwC,EAExC,QADA,EAEA,eAAe,KADf,EAEJ,EAAsD;QAClD,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,MAAM,iBAAiB,MAAM,IAAA,CAAK,OAAA,CAAQ,uCAAA,CAAwC;YAC9E;YACA;YACA;YACA,kBAAkB,IAAA,CAAK,QAAA,CAAS,gBADhC;QAEJ;QACAA,QAAO,KAAA,CAAM;QAEb,MAAM,OAAO,MAAM,IAAA,CAAK,UAAA,CAAW;QACnC,IAAI,KAAK,OAAA,IAAW,KAAK,OAAA,CAAQ,GAAA,EAC7BA,QAAO,IAAA,CAAK,8BAA8B,KAAK,OAAA,CAAQ,GAAG;aAE1DA,QAAO,IAAA,CAAK;QAEhB,OAAO;IACX;IAAA;;;;;GAAA,GAQA,MAAa,YAAY,OAAwB,CAAC,CAAA,EAAkB;QApPxE,IAAA;QAqPQ,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,IAAI;QACJ,IAAA,AAAI,CAAA,KAAA,IAAA,CAAK,QAAA,CAAS,IAAA,AAAA,KAAd,OAAA,KAAA,IAAA,GAAoB,uBAAA,EACpB,UAAU,MAAM,IAAA,CAAK,eAAA,CAAgB,IAAA,CAAK,QAAA,CAAS,IAAI;QAG3D,MAAM,EACF,mBADE,EAEF,iBADA,EAEA,WADA,EAEA,GAAG,aACP,GAAI;QACJ,MAAM,MAAM,IAAA,CAAK,QAAA,CAAS,kBAA1B;QACA,IAAI,CAAC,KACDA,QAAO,KAAA,CAAM,IAAI,MAAM;QAG3B,MAAM,SAAS,MAAM,IAAA,CAAK,eAAA,CAAgB,OAAA,CAAQ;YAAE;YAAqB;YAAmB;QAAY;QACxG,MAAM,OAAO,MAAM,IAAA,CAAK,OAAA,CAAQ;YAC5B,cAAc;YACd,cAAc;YACd,SAAS;YACT;YACA,GAAG,WADH;QAEJ,GAAG;QACH,IAAI;YACA,IAAI,KAAK,OAAA,IAAW,KAAK,OAAA,CAAQ,GAAA,EAC7BA,QAAO,IAAA,CAAK,8BAA8B,KAAK,OAAA,CAAQ,GAAG;iBAE1DA,QAAO,IAAA,CAAK;;QAIpB,OAAO;IACX;IAAA;;;;;;;GAAA,GAUA,MAAa,oBAAoB,MAAM,OAAO,QAAA,CAAS,IAAA,EAAM,WAAW,KAAA,EAAsB;QAC1F,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,IAAA,CAAK,eAAA,CAAgB,QAAA,CAAS,KAAK;YAAE;QAAS;QACpDA,QAAO,IAAA,CAAK;IAChB;IAAA;;;;GAAA,GAOA,MAAa,aAAa,OAAyB,CAAC,CAAA,EAAyB;QA7SjF,IAAA,IAAA;QA8SQ,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,EACF,6BADE,EAEF,GAAG,aACP,GAAI;QAEJ,IAAI,OAAO,MAAM,IAAA,CAAK,SAAA;QACtB,IAAI,QAAA,OAAA,KAAA,IAAA,KAAM,aAAA,EAAe;YACrBA,QAAO,KAAA,CAAM;YACb,MAAM,QAAQ,IAAI,aAAa;YAC/B,OAAO,MAAM,IAAA,CAAK,gBAAA,CAAiB;gBAC/B;gBACA,cAAc,YAAY,YAD1B;gBAEA,UAAU,YAAY,QADI;gBAE1B,kBAAkB,YAAY,gBADR;gBAEtB,kBAAkB;YACtB;QACJ;QAEA,IAAI;QACJ,IAAA,AAAI,CAAA,KAAA,IAAA,CAAK,QAAA,CAAS,IAAA,AAAA,KAAd,OAAA,KAAA,IAAA,GAAoB,uBAAA,EACpB,UAAU,MAAM,IAAA,CAAK,eAAA,CAAgB,IAAA,CAAK,QAAA,CAAS,IAAI;QAG3D,MAAM,MAAM,IAAA,CAAK,QAAA,CAAS,mBAA1B;QACA,IAAI,CAAC,KACDA,QAAO,KAAA,CAAM,IAAI,MAAM;QAG3B,IAAI;QACJ,IAAI,QAAQ,IAAA,CAAK,QAAA,CAAS,wBAAA,EAA0B;YAChDA,QAAO,KAAA,CAAM,kCAAkC,KAAK,OAAA,CAAQ,GAAG;YAC/D,YAAY,KAAK,OAAA,CAAQ,GAAzB;QACJ;QAEA,MAAM,SAAS,MAAM,IAAA,CAAK,gBAAA,CAAiB,OAAA,CAAQ;YAAE;QAA8B;QACnF,OAAO,MAAM,IAAA,CAAK,OAAA,CAAQ;YACtB,cAAc;YACd,cAAc;YACd,QAAQ;YACR,eAAe,IAAA,CAAK,QAAA,CAAS,2BAAA,GAA8B,QAAA,OAAA,KAAA,IAAA,KAAM,QAAA,GAAW,KADpE;YAER;YACA,GAAG,WADH;QAEJ,GAAG,QAAQ;QACX,IAAI;YACA,IAAA,AAAI,CAAA,KAAA,KAAK,OAAA,AAAA,KAAL,OAAA,KAAA,IAAA,GAAc,GAAA,EACdA,QAAO,IAAA,CAAK,8BAA8B,KAAK,OAAA,CAAQ,GAAG;iBAG1DA,QAAO,IAAA,CAAK;;QAIpB,OAAO;IACX;IAEA,MAAgB,iBAAiB,IAAA,EAA0C;QACvE,MAAM,WAAW,MAAM,IAAA,CAAK,OAAA,CAAQ,eAAA,CAAgB;YAChD,kBAAkB,IAAA,CAAK,QAAA,CAAS,6BADgB;YAEhD,GAAG,IAD6B;QAEpC;QACA,MAAM,OAAO,IAAI,KAAK;YAAE,GAAG,KAAK,KAAA;YAAO,GAAG,QAAA;QAAS;QAEnD,MAAM,IAAA,CAAK,SAAA,CAAU;QACrB,MAAM,IAAA,CAAK,OAAA,CAAQ,IAAA,CAAK;QACxB,OAAO;IACX;IAAA;;;;;;;;GAAA,GAWA,MAAa,qBAAqB,MAAM,OAAO,QAAA,CAAS,IAAA,EAAqB;QACzE,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,IAAA,CAAK,gBAAA,CAAiB,QAAA,CAAS;QACrCA,QAAO,IAAA,CAAK;IAChB;IAAA;;;;;;;;GAAA,GAWA,MAAa,eAAe,MAAM,OAAO,QAAA,CAAS,IAAA,EAAiC;QAC/E,MAAM,EAAE,KAAA,EAAM,GAAI,MAAM,IAAA,CAAK,OAAA,CAAQ,uBAAA,CAAwB;QAC7D,OAAQ,MAAM,YAAA;YACV,KAAK;gBACD,OAAO,MAAM,IAAA,CAAK,sBAAA,CAAuB;YAC7C,KAAK;gBACD,MAAM,IAAA,CAAK,mBAAA,CAAoB;gBAC/B;YACJ,KAAK;gBACD,MAAM,IAAA,CAAK,oBAAA,CAAqB;gBAChC;YACJ;gBACI,MAAM,IAAI,MAAM;QACxB;QACA,OAAO,KAAP;IACJ;IAAA;;;;;;;;GAAA,GAWA,MAAa,gBAAgB,MAAM,OAAO,QAAA,CAAS,IAAA,EAAM,WAAW,KAAA,EAA6C;QAC7G,MAAM,EAAE,KAAA,EAAM,GAAI,MAAM,IAAA,CAAK,OAAA,CAAQ,wBAAA,CAAyB;QAC9D,IAAI,CAAC,OACD,OAAO,KAAP;QAGJ,OAAQ,MAAM,YAAA;YACV,KAAK;gBACD,OAAO,MAAM,IAAA,CAAK,uBAAA,CAAwB;YAC9C,KAAK;gBACD,MAAM,IAAA,CAAK,oBAAA,CAAqB,KAAK;gBACrC;YACJ,KAAK;gBACD,MAAM,IAAA,CAAK,qBAAA,CAAsB;gBACjC;YACJ;gBACI,MAAM,IAAI,MAAM;QACxB;QACA,OAAO,KAAP;IACJ;IAAA;;;;GAAA,GAOA,MAAa,mBAAmB,OAA+B,CAAC,CAAA,EAAkC;QAC9F,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,EACF,6BADE,EAEF,GAAG,aACP,GAAI;QACJ,MAAM,MAAM,IAAA,CAAK,QAAA,CAAS,mBAA1B;QACA,IAAI,CAAC,KACDA,QAAO,KAAA,CAAM,IAAI,MAAM;QAG3B,MAAM,OAAO,MAAM,IAAA,CAAK,SAAA;QACxB,MAAM,SAAS,MAAM,IAAA,CAAK,gBAAA,CAAiB,OAAA,CAAQ;YAAE;QAA8B;QACnF,MAAM,cAAc,MAAM,IAAA,CAAK,YAAA,CAAa;YACxC,cAAc;YAAA,iCAAA;YACd,cAAc;YACd,QAAQ;YACR,eAAe,IAAA,CAAK,QAAA,CAAS,2BAAA,GAA8B,QAAA,OAAA,KAAA,IAAA,KAAM,QAAA,GAAW,KADpE;YAER,eAAe,IAAA,CAAK,QAAA,CAAS,0BAD+C;YAE5E,OAAO;YACP,cAAc;YACd,GAAG,WADW;QAElB,GAAG;QACH,IAAI;YACA,MAAM,eAA4C,CAAC;YACnD,MAAM,iBAAiB,MAAM,IAAA,CAAK,OAAA,CAAQ,qBAAA,CAAsB,YAAY,GAAA,EAAK;YACjFA,QAAO,KAAA,CAAM;YAEb,IAAI,eAAe,aAAA,IAAiB,eAAe,OAAA,CAAQ,GAAA,EAAK;gBAC5DA,QAAO,IAAA,CAAK,uBAAuB,eAAe,OAAA,CAAQ,GAAG;gBAC7D,OAAO;oBACH,eAAe,eAAe,aAD3B;oBAEH,KAAK,eAAe,OAAA,CAAQ,GADE;gBAElC;YACJ;YAEAA,QAAO,IAAA,CAAK;YACZ,OAAO;QACX,EAAA,OAAS,KAAK;YACV,IAAI,IAAA,CAAK,QAAA,CAAS,uBAAA,IAA2B,eAAe,eACxD,OAAQ,IAAI,KAAA;gBACR,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACDA,QAAO,IAAA,CAAK;oBACZ,OAAO;wBAAA,oEAAA;wBAEH,eAAe,IAAI,aAFhB;oBAGP;YACR;YAEJ,MAAM;QACV;IACJ;IAEA,MAAgB,QAAQ,IAAA,EAA+B,MAAA,EAAiB,SAAA,EAAmC;QACvG,MAAM,cAAc,MAAM,IAAA,CAAK,YAAA,CAAa,MAAM;QAClD,OAAO,MAAM,IAAA,CAAK,UAAA,CAAW,YAAY,GAAA,EAAK;IAClD;IAEA,MAAgB,aAAa,IAAA,EAA+B,MAAA,EAA4C;QACpG,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,IAAI;YACA,MAAM,gBAAgB,MAAM,IAAA,CAAK,OAAA,CAAQ,mBAAA,CAAoB;YAC7DA,QAAO,KAAA,CAAM;YAEb,OAAO,MAAM,OAAO,QAAA,CAAS;gBACzB,KAAK,cAAc,GADM;gBAEzB,OAAO,cAAc,KAAA,CAAM,EADR;gBAEnB,eAAe,cAAc,KAAA,CAAM,aADR;gBAE3B,cAAc,IAAA,CAAK,QAAA,CAAS,kBADO;YAEvC;QACJ,EAAA,OAAS,KAAK;YACVA,QAAO,KAAA,CAAM;YACb,OAAO,KAAA;YACP,MAAM;QACV;IACJ;IAEA,MAAgB,WAAW,GAAA,EAAa,SAAA,EAAmC;QACvE,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,eAA4C,CAAC;QACnD,MAAM,iBAAiB,MAAM,IAAA,CAAK,OAAA,CAAQ,qBAAA,CAAsB,KAAK;QACrEA,QAAO,KAAA,CAAM;QAEb,MAAM,OAAO,MAAM,IAAA,CAAK,UAAA,CAAW,gBAAgB;QACnD,OAAO;IACX;IAEA,MAAgB,WAAW,cAAA,EAAgC,SAAA,EAAoB;QAC3E,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,OAAO,IAAI,KAAK;QACtB,IAAI,WAAW;YACX,IAAI,cAAc,KAAK,OAAA,CAAQ,GAAA,EAAK;gBAChCA,QAAO,KAAA,CAAM,2EAA2E,KAAK,OAAA,CAAQ,GAAG;gBACxG,MAAM,IAAI,cAAc;oBAAE,GAAG,cAAA;oBAAgB,OAAO;gBAAiB;YACzE;YACAA,QAAO,KAAA,CAAM;QACjB;QAEA,MAAM,IAAA,CAAK,SAAA,CAAU;QACrBA,QAAO,KAAA,CAAM;QACb,MAAM,IAAA,CAAK,OAAA,CAAQ,IAAA,CAAK;QAExB,OAAO;IACX;IAAA;;;;GAAA,GAOA,MAAa,gBAAgB,OAA4B,CAAC,CAAA,EAAkB;QACxE,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,EACF,cADE,EAEF,GAAG,aACP,GAAI;QACJ,MAAM,SAAS,MAAM,IAAA,CAAK,kBAAA,CAAmB,OAAA,CAAQ;YAAE;QAAe;QACtE,MAAM,IAAA,CAAK,aAAA,CAAc;YACrB,cAAc;YACd,0BAA0B,IAAA,CAAK,QAAA,CAAS,wBAD1B;YAEd,GAAG,WADqC;QAE5C,GAAG;QACHA,QAAO,IAAA,CAAK;IAChB;IAAA;;;;;;;GAAA,GAUA,MAAa,wBAAwB,MAAM,OAAO,QAAA,CAAS,IAAA,EAAgC;QACvF,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,WAAW,MAAM,IAAA,CAAK,WAAA,CAAY;QACxCA,QAAO,IAAA,CAAK;QACZ,OAAO;IACX;IAAA;;;;GAAA,GAOA,MAAa,aAAa,OAAyB,CAAC,CAAA,EAAkB;QAClE,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,EACF,mBADE,EAEF,iBADA,EAEA,WADA,EAEA,GAAG,aACP,GAAI;QACJ,MAAM,MAAM,IAAA,CAAK,QAAA,CAAS,8BAA1B;QAEA,MAAM,SAAS,MAAM,IAAA,CAAK,eAAA,CAAgB,OAAA,CAAQ;YAAE;YAAqB;YAAmB;QAAY;QACxG,MAAM,IAAA,CAAK,QAAA,CAAS;YAChB,cAAc;YACd,0BAA0B;YAAA,iDAAA;YAAA,mDAAA;YAAA,iDAAA;YAAA,kDAAA;YAAA,8CAAA;YAM1B,OAAO,OAAO,OAAO,KAAA,IAAY,CAAC;YAClC,GAAG,WAD+B;QAEtC,GAAG;QACHA,QAAO,IAAA,CAAK;IAChB;IAAA;;;;;;;GAAA,GAUA,MAAa,qBAAqB,MAAM,OAAO,QAAA,CAAS,IAAA,EAAM,WAAW,KAAA,EAAsB;QAC3F,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,IAAA,CAAK,eAAA,CAAgB,QAAA,CAAS,KAAK;YAAE;QAAS;QACpDA,QAAO,IAAA,CAAK;IAChB;IAEA,MAAgB,SAAS,IAAA,EAAgC,MAAA,EAA2C;QAChG,MAAM,cAAc,MAAM,IAAA,CAAK,aAAA,CAAc,MAAM;QACnD,OAAO,MAAM,IAAA,CAAK,WAAA,CAAY,YAAY,GAAG;IACjD;IAEA,MAAgB,cAAc,OAAiC,CAAC,CAAA,EAAG,MAAA,EAA4C;QA/nBnH,IAAA;QAgoBQ,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QAEnC,IAAI;YACA,MAAM,OAAO,MAAM,IAAA,CAAK,SAAA;YACxBA,QAAO,KAAA,CAAM;YAEb,IAAI,IAAA,CAAK,QAAA,CAAS,qBAAA,EACd,MAAM,IAAA,CAAK,eAAA,CAAgB;YAG/B,MAAM,WAAW,KAAK,aAAA,IAAiB,QAAQ,KAAK,QAApD;YACA,IAAI,UAAU;gBACVA,QAAO,KAAA,CAAM;gBACb,KAAK,aAAA,GAAgB;YACzB;YAEA,MAAM,IAAA,CAAK,UAAA;YACXA,QAAO,KAAA,CAAM;YAEb,MAAM,iBAAiB,MAAM,IAAA,CAAK,OAAA,CAAQ,oBAAA,CAAqB;YAC/DA,QAAO,KAAA,CAAM;YAEb,OAAO,MAAM,OAAO,QAAA,CAAS;gBACzB,KAAK,eAAe,GADK;gBAEzB,OAAA,AAAO,CAAA,KAAA,eAAe,KAAA,AAAA,KAAf,OAAA,KAAA,IAAA,GAAsB,EADT;gBAEpB,cAAc,IAAA,CAAK,QAAA,CAAS,kBADC;YAEjC;QACJ,EAAA,OAAS,KAAK;YACVA,QAAO,KAAA,CAAM;YACb,OAAO,KAAA;YACP,MAAM;QACV;IACJ;IAEA,MAAgB,YAAY,GAAA,EAAuC;QAC/D,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,kBAAkB,MAAM,IAAA,CAAK,OAAA,CAAQ,sBAAA,CAAuB;QAClEA,QAAO,KAAA,CAAM;QAEb,OAAO;IACX;IAAA;;;;GAAA,GAOA,MAAa,cAAc,OAA0B,CAAC,CAAA,EAAkB;QA/qB5E,IAAA;QAgrBQ,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,EACF,6BADE,EAEF,GAAG,aACP,GAAI;QAEJ,MAAM,gBAAgB,IAAA,CAAK,QAAA,CAAS,6BAAA,GAAA,AAC7B,CAAA,KAAA,MAAM,IAAA,CAAK,SAAA,EAAU,KAArB,OAAA,KAAA,IAAA,GAAyB,QAAA,GAC1B,KAFN;QAIA,MAAM,MAAM,IAAA,CAAK,QAAA,CAAS,8BAA1B;QACA,MAAM,SAAS,MAAM,IAAA,CAAK,gBAAA,CAAiB,OAAA,CAAQ;YAAE;QAA8B;QACnF,MAAM,IAAA,CAAK,QAAA,CAAS;YAChB,cAAc;YACd,0BAA0B;YAC1B;YACA,GAAG,WADH;QAEJ,GAAG;QAEHA,QAAO,IAAA,CAAK;IAChB;IAAA;;;;;;;GAAA,GAUA,MAAa,sBAAsB,MAAM,OAAO,QAAA,CAAS,IAAA,EAAqB;QAC1E,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,IAAA,CAAK,gBAAA,CAAiB,QAAA,CAAS;QACrCA,QAAO,IAAA,CAAK;IAChB;IAEA,MAAa,aAAa,KAAA,EAA0C;QAChE,MAAM,OAAO,MAAM,IAAA,CAAK,SAAA;QACxB,MAAM,IAAA,CAAK,eAAA,CAAgB,MAAM;IACrC;IAEA,MAAgB,gBAAgB,IAAA,EAAmB,QAAQ,IAAA,CAAK,QAAA,CAAS,gBAAA,EAAiC;QACtG,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,IAAI,CAAC,MAAL;QAEA,MAAM,eAAe,MAAM,MAAA,CAAO,CAAA,OAAQ,OAAO,IAAA,CAAK,KAAI,KAAM;QAEhE,IAAI,CAAC,aAAa,MAAA,EAAQ;YACtBA,QAAO,KAAA,CAAM;YACb;QACJ;QAGA,KAAA,MAAW,QAAQ,aAAc;YAC7B,MAAM,IAAA,CAAK,OAAA,CAAQ,WAAnB,CACI,IAAA,CAAK,KADU,EACN,+DAAA;YACT;YAEJA,QAAO,IAAA,CAAK,GAAG,KAAI,qBAAA,CAAuB;YAC1C,IAAI,SAAS,gBACT,IAAA,CAAK,KAAI,GAAI;QAErB;QAEA,MAAM,IAAA,CAAK,SAAA,CAAU;QACrBA,QAAO,KAAA,CAAM;QACb,MAAM,IAAA,CAAK,OAAA,CAAQ,IAAA,CAAK;IAC5B;IAAA;;GAAA,GAKO,mBAAyB;QAC5B,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACf,IAAA,CAAK,mBAAA,CAAoB,KAAA;IAClC;IAAA;;GAAA,GAKO,kBAAwB;QAC3B,IAAA,CAAK,mBAAA,CAAoB,IAAA;IAC7B;IAEA,IAAc,gBAAwB;QAClC,OAAO,CAAA,KAAA,EAAQ,IAAA,CAAK,QAAA,CAAS,SAAS,CAAA,CAAA,EAAI,IAAA,CAAK,QAAA,CAAS,SAAS,EAAjE;IACJ;IAEA,MAAgB,YAAkC;QAC9C,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,MAAM,gBAAgB,MAAM,IAAA,CAAK,QAAA,CAAS,SAAA,CAAU,GAAA,CAAI,IAAA,CAAK,aAAa;QAC1E,IAAI,eAAe;YACfA,QAAO,KAAA,CAAM;YACb,OAAO,KAAK,iBAAA,CAAkB;QAClC;QAEAA,QAAO,KAAA,CAAM;QACb,OAAO;IACX;IAEA,MAAa,UAAU,IAAA,EAAkC;QACrD,MAAMA,UAAS,IAAA,CAAK,OAAA,CAAQ,MAAA,CAAO;QACnC,IAAI,MAAM;YACNA,QAAO,KAAA,CAAM;YACb,MAAM,gBAAgB,KAAK,eAAA;YAC3B,MAAM,IAAA,CAAK,QAAA,CAAS,SAAA,CAAU,GAAA,CAAI,IAAA,CAAK,aAAA,EAAe;QAC1D,OAAO;YACH,IAAA,CAAK,OAAA,CAAQ,KAAA,CAAM;YACnB,MAAM,IAAA,CAAK,QAAA,CAAS,SAAA,CAAU,MAAA,CAAO,IAAA,CAAK,aAAa;YACvD,IAAI,IAAA,CAAK,QAAA,CAAS,IAAA,EACd,MAAM,IAAA,CAAK,QAAA,CAAS,IAAA,CAAK,KAAA,CAAM,MAAA,CAAO,IAAA,CAAK,QAAA,CAAS,SAAS;QAErE;IACJ;IAAA;;GAAA,GAKA,MAAa,kBAAiC;QAC1C,MAAM,IAAA,CAAK,OAAA,CAAQ,eAAA;IACvB;IAAA;;;;;;;;;;GAAA,GAaA,MAAa,UAAU,GAAA,EAAa,IAAA,EAAY,UAAA,EAAqB,KAAA,EAA6C;QArzBtH,IAAA,IAAA;QAszBQ,MAAM,YAAY,MAAA,CAAA,AAAM,CAAA,KAAA,AAAA,CAAA,KAAA,IAAA,CAAK,QAAA,CAAS,IAAA,AAAA,KAAd,OAAA,KAAA,IAAA,GAAoB,KAAA,AAAA,KAApB,OAAA,KAAA,IAAA,GAA2B,GAAA,CAAI,IAAA,CAAK,QAAA,CAAS,SAArE,CAAA;QACA,IAAI,WACA,OAAO,MAAM,YAAY,iBAAA,CAAkB;YACvC;YACA,aAAa,QAAA,OAAA,KAAA,IAAA,KAAM,YADnB;YAEA;YACA,SAAS,UAAU,IADnB;YAEA;QACJ;QAEJ,OAAO,KAAP;IACJ;IAEA,MAAM,gBAAgB,YAAA,EAAyD;QAC3E,IAAI,YAAY,MAAM,aAAa,KAAA,CAAM,GAAA,CAAI,IAAA,CAAK,QAAA,CAAS,SAAS;QACpE,IAAI,CAAC,WAAW;YACZ,MAAM,WAAW,MAAM,YAAY,gBAAA;YACnC,YAAY,IAAI,UAAU;YAC1B,MAAM,aAAa,KAAA,CAAM,GAAA,CAAI,IAAA,CAAK,QAAA,CAAS,SAAA,EAAW;QAC1D;QACA,OAAO,MAAM,YAAY,eAAA,CAAgB,UAAU,IAAI;IAC3D;AACJ;A,e;AC10BE,IAAA,UAAW;A,iB;ACIN,IAAM,UAAkB;A,4B;ACCxB,IAAM,qBAAN;IAAA,aAA8C;QACjD,IAAA,CAAS,OAAA,GAAkB;QAC3B,IAAA,CAAS,UAAA,GAAqB;IAAA;IAE9B,MAAa,IAAI,GAAA,EAAa,KAAA,EAAiC;QAC3D,MAAM,QAAQ,MAAM,IAAA,CAAK,WAAA,CAAY,IAAA,CAAK,OAAA,EAAS,IAAA,CAAK,UAAU;QAClE,MAAM,MAAM,aAAa,CAAC;YACtB,IAAI,GAAA,CAAI,OAAO;YACf,OAAO,IAAA,CAAK,gBAAA,CAAiB,IAAI,WAAW;QAChD;IACJ;IAEA,MAAa,IAAI,GAAA,EAAiC;QAC9C,MAAM,QAAQ,MAAM,IAAA,CAAK,WAAA,CAAY,IAAA,CAAK,OAAA,EAAS,IAAA,CAAK,UAAU;QAClE,OAAO,MAAM,MAAM,YAAY,CAAC;YAC5B,OAAO,IAAA,CAAK,gBAAA,CAAiB,IAAI,GAAA,CAAI;QACzC;IACJ;IAEA,MAAa,OAAO,GAAA,EAAiC;QACjD,MAAM,OAAO,MAAM,IAAA,CAAK,GAAA,CAAI;QAC5B,MAAM,QAAQ,MAAM,IAAA,CAAK,WAAA,CAAY,IAAA,CAAK,OAAA,EAAS,IAAA,CAAK,UAAU;QAClE,MAAM,MAAM,aAAa,CAAC;YACtB,OAAO,IAAA,CAAK,gBAAA,CAAiB,IAAI,MAAA,CAAO;QAC5C;QACA,OAAO;IACX;IAEA,MAAa,aAAgC;QACzC,MAAM,QAAQ,MAAM,IAAA,CAAK,WAAA,CAAY,IAAA,CAAK,OAAA,EAAS,IAAA,CAAK,UAAU;QAClE,OAAO,MAAM,MAAM,YAAY,CAAC;YAC5B,OAAO,IAAA,CAAK,gBAAA,CAAiB,IAAI,UAAA;QACrC;IACJ;IAEA,iBACI,OAAA,EAAqD;QACrD,OAAO,IAAI,QAAW,CAAC,SAAS;YAC3B,QAA2B,UAAA,GAAc,QAA0B,SAAA,GAAY,IAAM,QAAS,QAA0B,MAAM;YAC9H,QAA2B,OAAA,GAAW,QAA0B,OAAA,GAAU,IAAM,OAAQ,QAA0B,KAAK;QAC5H;IACJ;IAEA,MAAM,YACF,MAAA,EACA,SAAA,EAC4G;QAC5G,MAAM,UAAU,UAAU,IAAA,CAAK;QAC/B,QAAQ,eAAA,GAAkB,IAAM,QAAQ,MAAA,CAAO,iBAAA,CAAkB;QACjE,MAAM,KAAK,MAAM,IAAA,CAAK,gBAAA,CAA8B;QAEpD,OAAO,OACH,QACA;YAEA,MAAM,KAAK,GAAG,WAAA,CAAY,WAAW;YACrC,MAAM,QAAQ,GAAG,WAAA,CAAY;YAC7B,OAAO,MAAM,SAAS;QAC1B;IACJ;AACJ;;;;;ACnEA,uDAAa;AAiCb,+CAAgB;AAjCT,MAAM,0BAA0B;AACvC;AACA,kBAAkB,SAAS,CAAC,IAAI,GAAG;AACnC,SAAS,iBAAiB,GAAG;IACzB,OAAO,mBAAmB,KAAK,KAAK,OAAO,CAAC,QAAQ,CAAC,GAAG;QACpD,IAAI,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,IAAI,WAAW;QACnD,IAAI,KAAK,MAAM,GAAG,GACd,OAAO,MAAM;QAEjB,OAAO,MAAM;IACjB;AACJ;AACA,SAAS,gBAAgB,GAAG;IACxB,IAAI,SAAS,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM;IAClD,OAAQ,OAAO,MAAM,GAAG;QACpB,KAAK;YACD;QACJ,KAAK;YACD,UAAU;YACV;QACJ,KAAK;YACD,UAAU;YACV;QACJ;YACI,MAAM,IAAI,MAAM;IACxB;IACA,IAAI;QACA,OAAO,iBAAiB;IAC5B,EACA,OAAO,KAAK;QACR,OAAO,KAAK;IAChB;AACJ;AACO,SAAS,UAAU,KAAK,EAAE,OAAO;IACpC,IAAI,OAAO,UAAU,UACjB,MAAM,IAAI,kBAAkB;IAEhC,WAAY,CAAA,UAAU,CAAC,CAAA;IACvB,MAAM,MAAM,QAAQ,MAAM,KAAK,OAAO,IAAI;IAC1C,MAAM,OAAO,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI;IAClC,IAAI,OAAO,SAAS,UAChB,MAAM,IAAI,kBAAkB,CAAC,uCAAuC,EAAE,MAAM,GAAG;IAEnF,IAAI;IACJ,IAAI;QACA,UAAU,gBAAgB;IAC9B,EACA,OAAO,GAAG;QACN,MAAM,IAAI,kBAAkB,CAAC,kDAAkD,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IAC7G;IACA,IAAI;QACA,OAAO,KAAK,KAAK,CAAC;IACtB,EACA,OAAO,GAAG;QACN,MAAM,IAAI,kBAAkB,CAAC,gDAAgD,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;IAC3G;AACJ;;;ACxDA,QAAQ,cAAc,GAAG,SAAU,CAAC;IAClC,OAAO,KAAK,EAAE,UAAU,GAAG,IAAI;QAAC,SAAS;IAAC;AAC5C;AAEA,QAAQ,iBAAiB,GAAG,SAAU,CAAC;IACrC,OAAO,cAAc,CAAC,GAAG,cAAc;QAAC,OAAO;IAAI;AACrD;AAEA,QAAQ,SAAS,GAAG,SAAU,MAAM,EAAE,IAAI;IACxC,OAAO,IAAI,CAAC,QAAQ,OAAO,CAAC,SAAU,GAAG;QACvC,IACE,QAAQ,aACR,QAAQ,gBACR,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,MAE3C;QAGF,OAAO,cAAc,CAAC,MAAM,KAAK;YAC/B,YAAY;YACZ,KAAK;gBACH,OAAO,MAAM,CAAC,IAAI;YACpB;QACF;IACF;IAEA,OAAO;AACT;AAEA,QAAQ,MAAM,GAAG,SAAU,IAAI,EAAE,QAAQ,EAAE,GAAG;IAC5C,OAAO,cAAc,CAAC,MAAM,UAAU;QACpC,YAAY;QACZ,KAAK;IACP;AACF","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-0919a0b2179fa55a.js","src/index.js","src/auth.js","node_modules/oidc-client-ts/dist/umd/oidc-client-ts.js","node_modules/oidc-client-ts/src/index.ts","node_modules/oidc-client-ts/src/utils/Logger.ts","node_modules/oidc-client-ts/src/utils/JwtUtils.ts","node_modules/oidc-client-ts/src/utils/CryptoUtils.ts","node_modules/oidc-client-ts/src/utils/Event.ts","node_modules/oidc-client-ts/src/utils/PopupUtils.ts","node_modules/oidc-client-ts/src/utils/Timer.ts","node_modules/oidc-client-ts/src/utils/UrlUtils.ts","node_modules/oidc-client-ts/src/errors/ErrorResponse.ts","node_modules/oidc-client-ts/src/errors/ErrorTimeout.ts","node_modules/oidc-client-ts/src/AccessTokenEvents.ts","node_modules/oidc-client-ts/src/CheckSessionIFrame.ts","node_modules/oidc-client-ts/src/InMemoryWebStorage.ts","node_modules/oidc-client-ts/src/errors/ErrorDPoPNonce.ts","node_modules/oidc-client-ts/src/JsonService.ts","node_modules/oidc-client-ts/src/MetadataService.ts","node_modules/oidc-client-ts/src/WebStorageStateStore.ts","node_modules/oidc-client-ts/src/OidcClientSettings.ts","node_modules/oidc-client-ts/src/UserInfoService.ts","node_modules/oidc-client-ts/src/TokenClient.ts","node_modules/oidc-client-ts/src/ResponseValidator.ts","node_modules/oidc-client-ts/src/State.ts","node_modules/oidc-client-ts/src/SigninState.ts","node_modules/oidc-client-ts/src/SigninRequest.ts","node_modules/oidc-client-ts/src/SigninResponse.ts","node_modules/oidc-client-ts/src/SignoutRequest.ts","node_modules/oidc-client-ts/src/SignoutResponse.ts","node_modules/oidc-client-ts/src/ClaimsService.ts","node_modules/oidc-client-ts/src/DPoPStore.ts","node_modules/oidc-client-ts/src/OidcClient.ts","node_modules/oidc-client-ts/src/SessionMonitor.ts","node_modules/oidc-client-ts/src/User.ts","node_modules/oidc-client-ts/src/navigators/AbstractChildWindow.ts","node_modules/oidc-client-ts/src/UserManagerSettings.ts","node_modules/oidc-client-ts/src/navigators/IFrameWindow.ts","node_modules/oidc-client-ts/src/navigators/IFrameNavigator.ts","node_modules/oidc-client-ts/src/navigators/PopupWindow.ts","node_modules/oidc-client-ts/src/navigators/PopupNavigator.ts","node_modules/oidc-client-ts/src/navigators/RedirectNavigator.ts","node_modules/oidc-client-ts/src/UserManagerEvents.ts","node_modules/oidc-client-ts/src/SilentRenewService.ts","node_modules/oidc-client-ts/src/RefreshState.ts","node_modules/oidc-client-ts/src/UserManager.ts","node_modules/oidc-client-ts/package.json","node_modules/oidc-client-ts/src/Version.ts","node_modules/oidc-client-ts/src/IndexedDbDPoPStore.ts","node_modules/jwt-decode/build/esm/index.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"890e741a975ef6c8\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, disposedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    disposedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'reload') {\n      fullReload();\n    } else if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n        hmrDisposeQueue();\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        let processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","import { signIn, handleRedirectCallback, getAccessToken } from './auth.js';\n\n/**\n * Fetch fragments using the access token.\n */\nasync function fetchFragments() {\n  const accessToken = await getAccessToken();\n\n  if (!accessToken) {\n    console.error('User is not authenticated.');\n    alert('Please log in first.');\n    return;\n  }\n\n  try {\n    const response = await fetch('http://localhost:8080/v1/fragments', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n\n    if (response.ok) {\n      const data = await response.json();\n      console.log('Fragments:', data);\n    } else {\n      console.error('Failed to fetch fragments:', response.statusText);\n    }\n  } catch (error) {\n    console.error('Error fetching fragments:', error);\n  }\n}\n\n// Add event listeners to buttons\ndocument.getElementById('loginButton').addEventListener('click', () => {\n  signIn();\n});\n\ndocument\n  .getElementById('fetchFragmentsButton')\n  .addEventListener('click', fetchFragments);\n\n// Handle OAuth redirect callback\nhandleRedirectCallback();\n","import { UserManager } from 'oidc-client-ts';\n\nconst config = {\n  authority: `https://cognito-idp.us-east-1.amazonaws.com/${process.env.AWS_COGNITO_POOL_ID}`,\n  client_id: process.env.AWS_COGNITO_CLIENT_ID,\n  redirect_uri: process.env.OAUTH_SIGN_IN_REDIRECT_URL,\n  response_type: 'code',\n  scope: 'openid email',\n};\n\nconst userManager = new UserManager(config);\n\n// Redirect the user to Cognito for login\nexport async function signIn() {\n  try {\n    await userManager.signinRedirect();\n  } catch (err) {\n    console.error('Login failed:', err);\n  }\n}\n\n// Handle the redirect from Cognito after login\nexport async function handleRedirectCallback() {\n  try {\n    const user = await userManager.signinRedirectCallback();\n    console.log('Logged in user:', user);\n    sessionStorage.setItem('accessToken', user.access_token); // Save token\n  } catch (err) {\n    console.error('Error handling redirect callback:', err);\n  }\n}\n\n// Retrieve the access token\nexport async function getAccessToken() {\n  return sessionStorage.getItem('accessToken');\n}\n",null,"// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nexport { ErrorResponse, ErrorTimeout } from \"./errors\";\nexport type { INavigator, IFrameWindowParams, IWindow, NavigateParams, NavigateResponse, PopupWindowParams, RedirectParams } from \"./navigators\";\nexport { Log, Logger } from \"./utils\";\nexport type { ILogger, PopupWindowFeatures } from \"./utils\";\nexport type { OidcAddressClaim, OidcStandardClaims, IdTokenClaims, JwtClaims } from \"./Claims\";\n\nexport { AccessTokenEvents } from \"./AccessTokenEvents\";\nexport type { AccessTokenCallback } from \"./AccessTokenEvents\";\nexport { CheckSessionIFrame } from \"./CheckSessionIFrame\";\nexport { InMemoryWebStorage } from \"./InMemoryWebStorage\";\nexport type { AsyncStorage } from \"./AsyncStorage\";\nexport { MetadataService } from \"./MetadataService\";\nexport * from \"./OidcClient\";\nexport { OidcClientSettingsStore } from \"./OidcClientSettings\";\nexport type { OidcClientSettings, SigningKey, ExtraHeader } from \"./OidcClientSettings\";\nexport type { OidcMetadata } from \"./OidcMetadata\";\nexport { SessionMonitor } from \"./SessionMonitor\";\nexport type { SessionStatus } from \"./SessionStatus\";\nexport type { SigninRequest, SigninRequestCreateArgs } from \"./SigninRequest\";\nexport type { RefreshState } from \"./RefreshState\";\nexport { SigninResponse } from \"./SigninResponse\";\nexport { SigninState } from \"./SigninState\";\nexport type { SigninStateArgs, SigninStateCreateArgs } from \"./SigninState\";\nexport type { SignoutRequest, SignoutRequestArgs } from \"./SignoutRequest\";\nexport { SignoutResponse } from \"./SignoutResponse\";\nexport { State } from \"./State\";\nexport type { StateStore } from \"./StateStore\";\nexport { User } from \"./User\";\nexport type { UserProfile } from \"./User\";\nexport * from \"./UserManager\";\nexport type {\n    UserManagerEvents,\n    SilentRenewErrorCallback,\n    UserLoadedCallback,\n    UserSessionChangedCallback,\n    UserSignedInCallback,\n    UserSignedOutCallback,\n    UserUnloadedCallback,\n} from \"./UserManagerEvents\";\nexport { UserManagerSettingsStore } from \"./UserManagerSettings\";\nexport type { UserManagerSettings } from \"./UserManagerSettings\";\nexport { Version } from \"./Version\";\nexport { WebStorageStateStore } from \"./WebStorageStateStore\";\nexport { IndexedDbDPoPStore } from \"./IndexedDbDPoPStore\";\nexport { DPoPState } from \"./DPoPStore\";\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\n/**\n * Native interface\n *\n * @public\n */\nexport interface ILogger {\n    debug(...args: unknown[]): void;\n    info(...args: unknown[]): void;\n    warn(...args: unknown[]): void;\n    error(...args: unknown[]): void;\n}\n\nconst nopLogger: ILogger = {\n    debug: () => undefined,\n    info: () => undefined,\n    warn: () => undefined,\n    error: () => undefined,\n};\n\nlet level: number;\nlet logger: ILogger;\n\n/**\n * Log levels\n *\n * @public\n */\nexport enum Log {\n    NONE,\n    ERROR,\n    WARN,\n    INFO,\n    DEBUG\n}\n\n/**\n * Log manager\n *\n * @public\n */\nexport namespace Log { // eslint-disable-line @typescript-eslint/no-namespace\n    export function reset(): void {\n        level = Log.INFO;\n        logger = nopLogger;\n    }\n\n    export function setLevel(value: Log): void {\n        if (!(Log.NONE <= value && value <= Log.DEBUG)) {\n            throw new Error(\"Invalid log level\");\n        }\n        level = value;\n    }\n\n    export function setLogger(value: ILogger): void {\n        logger = value;\n    }\n}\n\n/**\n * Internal logger instance\n *\n * @public\n */\nexport class Logger {\n    private _method?: string;\n    public constructor(private _name: string) {}\n\n    /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n    public debug(...args: unknown[]): void {\n        if (level >= Log.DEBUG) {\n            logger.debug(Logger._format(this._name, this._method), ...args);\n        }\n    }\n    public info(...args: unknown[]): void {\n        if (level >= Log.INFO) {\n            logger.info(Logger._format(this._name, this._method), ...args);\n        }\n    }\n    public warn(...args: unknown[]): void {\n        if (level >= Log.WARN) {\n            logger.warn(Logger._format(this._name, this._method), ...args);\n        }\n    }\n    public error(...args: unknown[]): void {\n        if (level >= Log.ERROR) {\n            logger.error(Logger._format(this._name, this._method), ...args);\n        }\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n\n    public throw(err: Error): never {\n        this.error(err);\n        throw err;\n    }\n\n    public create(method: string): Logger {\n        const methodLogger: Logger = Object.create(this);\n        methodLogger._method = method;\n        methodLogger.debug(\"begin\");\n        return methodLogger;\n    }\n\n    public static createStatic(name: string, staticMethod: string): Logger {\n        const staticLogger = new Logger(`${name}.${staticMethod}`);\n        staticLogger.debug(\"begin\");\n        return staticLogger;\n    }\n\n    private static _format(name: string, method?: string) {\n        const prefix = `[${name}]`;\n        return method ? `${prefix} ${method}:` : prefix;\n    }\n\n    /* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n    // helpers for static class methods\n    public static debug(name: string, ...args: unknown[]): void {\n        if (level >= Log.DEBUG) {\n            logger.debug(Logger._format(name), ...args);\n        }\n    }\n    public static info(name: string, ...args: unknown[]): void {\n        if (level >= Log.INFO) {\n            logger.info(Logger._format(name), ...args);\n        }\n    }\n    public static warn(name: string, ...args: unknown[]): void {\n        if (level >= Log.WARN) {\n            logger.warn(Logger._format(name), ...args);\n        }\n    }\n    public static error(name: string, ...args: unknown[]): void {\n        if (level >= Log.ERROR) {\n            logger.error(Logger._format(name), ...args);\n        }\n    }\n    /* eslint-enable @typescript-eslint/no-unsafe-enum-comparison */\n}\n\nLog.reset();\n","import { jwtDecode } from \"jwt-decode\";\n\nimport { Logger } from \"./Logger\";\nimport type { JwtClaims } from \"../Claims\";\nimport { CryptoUtils } from \"./CryptoUtils\";\n\n/**\n * @internal\n */\nexport class JwtUtils {\n    // IMPORTANT: doesn't validate the token\n    public static decode(token: string): JwtClaims {\n        try {\n            return jwtDecode<JwtClaims>(token);\n        }\n        catch (err) {\n            Logger.error(\"JwtUtils.decode\", err);\n            throw err;\n        }\n    }\n\n    public static async generateSignedJwt(header: object, payload: object, privateKey: CryptoKey) : Promise<string> {\n        const encodedHeader = CryptoUtils.encodeBase64Url(new TextEncoder().encode(JSON.stringify(header)));\n        const encodedPayload = CryptoUtils.encodeBase64Url(new TextEncoder().encode(JSON.stringify(payload)));\n        const encodedToken = `${encodedHeader}.${encodedPayload}`;\n\n        const signature = await window.crypto.subtle.sign(\n            {\n                name: \"ECDSA\",\n                hash: { name: \"SHA-256\" },\n            },\n            privateKey,\n            new TextEncoder().encode(encodedToken),\n        );\n\n        const encodedSignature = CryptoUtils.encodeBase64Url(new Uint8Array(signature));\n        return `${encodedToken}.${encodedSignature}`;\n    }\n}\n","import { Logger } from \"./Logger\";\nimport { JwtUtils } from \"./JwtUtils\";\n\nexport interface GenerateDPoPProofOpts {\n    url: string;\n    accessToken?: string;\n    httpMethod?: string;\n    keyPair: CryptoKeyPair;\n    nonce?: string;\n}\n\nconst UUID_V4_TEMPLATE = \"10000000-1000-4000-8000-100000000000\";\n\nconst toBase64 = (val: ArrayBuffer): string =>\n    btoa([...new Uint8Array(val)]\n        .map((chr) => String.fromCharCode(chr))\n        .join(\"\"));\n\n/**\n * @internal\n */\nexport class CryptoUtils {\n    private static _randomWord(): number {\n        const arr = new Uint32Array(1);\n        crypto.getRandomValues(arr);\n        return arr[0];\n    }\n\n    /**\n     * Generates RFC4122 version 4 guid\n     */\n    public static generateUUIDv4(): string {\n        const uuid = UUID_V4_TEMPLATE.replace(/[018]/g, c =>\n            (+c ^ CryptoUtils._randomWord() & 15 >> +c / 4).toString(16),\n        );\n        return uuid.replace(/-/g, \"\");\n    }\n\n    /**\n     * PKCE: Generate a code verifier\n     */\n    public static generateCodeVerifier(): string {\n        return CryptoUtils.generateUUIDv4() + CryptoUtils.generateUUIDv4() + CryptoUtils.generateUUIDv4();\n    }\n\n    /**\n     * PKCE: Generate a code challenge\n     */\n    public static async generateCodeChallenge(code_verifier: string): Promise<string> {\n        if (!crypto.subtle) {\n            throw new Error(\"Crypto.subtle is available only in secure contexts (HTTPS).\");\n        }\n\n        try {\n            const encoder = new TextEncoder();\n            const data = encoder.encode(code_verifier);\n            const hashed = await crypto.subtle.digest(\"SHA-256\", data);\n            return toBase64(hashed).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n        }\n        catch (err) {\n            Logger.error(\"CryptoUtils.generateCodeChallenge\", err);\n            throw err;\n        }\n    }\n\n    /**\n     * Generates a base64-encoded string for a basic auth header\n     */\n    public static generateBasicAuth(client_id: string, client_secret: string): string {\n        const encoder = new TextEncoder();\n        const data = encoder.encode([client_id, client_secret].join(\":\"));\n        return toBase64(data);\n    }\n\n    /**\n     * Generates a hash of a string using a given algorithm\n     * @param alg\n     * @param message\n     */\n    public static async hash(alg: string, message: string) : Promise<Uint8Array> {\n        const msgUint8 = new TextEncoder().encode(message);\n        const hashBuffer = await crypto.subtle.digest(alg, msgUint8);\n        return new Uint8Array(hashBuffer);\n    }\n\n    /**\n     * Generates a base64url encoded string\n     */\n    public static encodeBase64Url = (input: Uint8Array) => {\n        return toBase64(input).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n    };\n\n    /**\n     * Generates a rfc7638 compliant jwk thumbprint\n     * @param jwk\n     */\n    public static async customCalculateJwkThumbprint(jwk: JsonWebKey): Promise<string> {\n        let jsonObject: object;\n        switch (jwk.kty) {\n            case \"RSA\":\n                jsonObject = {\n                    \"e\": jwk.e,\n                    \"kty\": jwk.kty,\n                    \"n\": jwk.n,\n                };\n                break;\n            case \"EC\":\n                jsonObject = {\n                    \"crv\": jwk.crv,\n                    \"kty\": jwk.kty,\n                    \"x\": jwk.x,\n                    \"y\": jwk.y,\n                };\n                break;\n            case \"OKP\":\n                jsonObject = {\n                    \"crv\": jwk.crv,\n                    \"kty\": jwk.kty,\n                    \"x\": jwk.x,\n                };\n                break;\n            case \"oct\":\n                jsonObject = {\n                    \"crv\": jwk.k,\n                    \"kty\": jwk.kty,\n                };\n                break;\n            default:\n                throw new Error(\"Unknown jwk type\");\n        }\n        const utf8encodedAndHashed = await CryptoUtils.hash(\"SHA-256\", JSON.stringify(jsonObject));\n        return CryptoUtils.encodeBase64Url(utf8encodedAndHashed);\n    }\n\n    public static async generateDPoPProof({\n        url,\n        accessToken,\n        httpMethod,\n        keyPair,\n        nonce,\n    }: GenerateDPoPProofOpts): Promise<string> {\n        let hashedToken: Uint8Array;\n        let encodedHash: string;\n\n        const payload: Record<string, string | number> = {\n            \"jti\": window.crypto.randomUUID(),\n            \"htm\": httpMethod ?? \"GET\",\n            \"htu\": url,\n            \"iat\": Math.floor(Date.now() / 1000),\n        };\n\n        if (accessToken) {\n            hashedToken = await CryptoUtils.hash(\"SHA-256\", accessToken);\n            encodedHash = CryptoUtils.encodeBase64Url(hashedToken);\n            payload.ath = encodedHash;\n        }\n\n        if (nonce) {\n            payload.nonce = nonce;\n        }\n\n        try {\n            const publicJwk = await crypto.subtle.exportKey(\"jwk\", keyPair.publicKey);\n            const header = {\n                \"alg\": \"ES256\",\n                \"typ\": \"dpop+jwt\",\n                \"jwk\": {\n                    \"crv\": publicJwk.crv,\n                    \"kty\": publicJwk.kty,\n                    \"x\": publicJwk.x,\n                    \"y\": publicJwk.y,\n                },\n            };\n            return await JwtUtils.generateSignedJwt(header, payload, keyPair.privateKey);\n        } catch (err) {\n            if (err instanceof TypeError) {\n                throw new Error(`Error exporting dpop public key: ${err.message}`);\n            } else {\n                throw err;\n            }\n        }\n    }\n\n    public static async generateDPoPJkt(keyPair: CryptoKeyPair) : Promise<string> {\n        try {\n            const publicJwk = await crypto.subtle.exportKey(\"jwk\", keyPair.publicKey);\n            return await CryptoUtils.customCalculateJwkThumbprint(publicJwk);\n        } catch (err) {\n            if (err instanceof TypeError) {\n                throw new Error(`Could not retrieve dpop keys from storage: ${err.message}`);\n            } else {\n                throw err;\n            }\n        }\n    }\n\n    public static async generateDPoPKeys() : Promise<CryptoKeyPair> {\n        return await window.crypto.subtle.generateKey(\n            {\n                name: \"ECDSA\",\n                namedCurve: \"P-256\",\n            },\n            false,\n            [\"sign\", \"verify\"],\n        );\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./Logger\";\n\n/**\n * @internal\n */\nexport type Callback<EventType extends unknown[]> = (...ev: EventType) => (Promise<void> | void);\n\n/**\n * @internal\n */\nexport class Event<EventType extends unknown[]> {\n    protected readonly _logger: Logger;\n\n    private readonly _callbacks: Array<Callback<EventType>> = [];\n\n    public constructor(protected readonly _name: string) {\n        this._logger = new Logger(`Event('${this._name}')`);\n    }\n\n    public addHandler(cb: Callback<EventType>): () => void {\n        this._callbacks.push(cb);\n        return () => this.removeHandler(cb);\n    }\n\n    public removeHandler(cb: Callback<EventType>): void {\n        const idx = this._callbacks.lastIndexOf(cb);\n        if (idx >= 0) {\n            this._callbacks.splice(idx, 1);\n        }\n    }\n\n    public async raise(...ev: EventType): Promise<void> {\n        this._logger.debug(\"raise:\", ...ev);\n        for (const cb of this._callbacks) {\n            await cb(...ev);\n        }\n    }\n}\n","/**\n *\n * @public\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/open#window_features\n */\nexport interface PopupWindowFeatures {\n    left?: number;\n    top?: number;\n    width?: number;\n    height?: number;\n    menubar?: boolean | string;\n    toolbar?: boolean | string;\n    location?: boolean | string;\n    status?: boolean | string;\n    resizable?: boolean | string;\n    scrollbars?: boolean | string;\n    /** Close popup window after time in seconds, by default it is -1. To enable this feature, set value greater than 0. */\n    closePopupWindowAfterInSeconds?: number;\n\n    [k: string]: boolean | string | number | undefined;\n}\n\nexport class PopupUtils {\n    /**\n     * Populates a map of window features with a placement centered in front of\n     * the current window. If no explicit width is given, a default value is\n     * binned into [800, 720, 600, 480, 360] based on the current window's width.\n     */\n    static center({ ...features }: PopupWindowFeatures): PopupWindowFeatures {\n        if (features.width == null)\n            features.width = [800, 720, 600, 480].find(width => width <= window.outerWidth / 1.618) ?? 360;\n        features.left ??= Math.max(0, Math.round(window.screenX + (window.outerWidth - features.width) / 2));\n        if (features.height != null)\n            features.top ??= Math.max(0, Math.round(window.screenY + (window.outerHeight - features.height) / 2));\n        return features;\n    }\n\n    static serialize(features: PopupWindowFeatures): string {\n        return Object.entries(features)\n            .filter(([, value]) => value != null)\n            .map(([key, value]) => `${key}=${typeof value !== \"boolean\" ? value as string : value ? \"yes\" : \"no\"}`)\n            .join(\",\");\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Event } from \"./Event\";\nimport { Logger } from \"./Logger\";\n\n/**\n * @internal\n */\nexport class Timer extends Event<[void]> {\n    protected readonly _logger = new Logger(`Timer('${this._name}')`);\n    private _timerHandle: ReturnType<typeof setInterval> | null = null;\n    private _expiration = 0;\n\n    // get the time\n    public static getEpochTime(): number {\n        return Math.floor(Date.now() / 1000);\n    }\n\n    public init(durationInSeconds: number): void {\n        const logger = this._logger.create(\"init\");\n        durationInSeconds = Math.max(Math.floor(durationInSeconds), 1);\n        const expiration = Timer.getEpochTime() + durationInSeconds;\n        if (this.expiration === expiration && this._timerHandle) {\n            // no need to reinitialize to same expiration, so bail out\n            logger.debug(\"skipping since already initialized for expiration at\", this.expiration);\n            return;\n        }\n\n        this.cancel();\n\n        logger.debug(\"using duration\", durationInSeconds);\n        this._expiration = expiration;\n\n        // we're using a fairly short timer and then checking the expiration in the\n        // callback to handle scenarios where the browser device sleeps, and then\n        // the timers end up getting delayed.\n        const timerDurationInSeconds = Math.min(durationInSeconds, 5);\n        this._timerHandle = setInterval(this._callback, timerDurationInSeconds * 1000);\n    }\n\n    public get expiration(): number {\n        return this._expiration;\n    }\n\n    public cancel(): void {\n        this._logger.create(\"cancel\");\n        if (this._timerHandle) {\n            clearInterval(this._timerHandle);\n            this._timerHandle = null;\n        }\n    }\n\n    protected _callback = (): void => {\n        const diff = this._expiration - Timer.getEpochTime();\n        this._logger.debug(\"timer completes in\", diff);\n\n        if (this._expiration <= Timer.getEpochTime()) {\n            this.cancel();\n            void super.raise();\n        }\n    };\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\n/**\n * @internal\n */\nexport class UrlUtils {\n    public static readParams(url: string, responseMode: \"query\" | \"fragment\" = \"query\"): URLSearchParams {\n        if (!url) throw new TypeError(\"Invalid URL\");\n        // the base URL is irrelevant, it's just here to support relative url arguments\n        const parsedUrl = new URL(url, \"http://127.0.0.1\");\n        const params = parsedUrl[responseMode === \"fragment\" ? \"hash\" : \"search\"];\n        return new URLSearchParams(params.slice(1));\n    }\n}\n\n/**\n * @internal\n */\nexport const URL_STATE_DELIMITER = \";\";","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\n\n/**\n * Error class thrown in case of an authentication error.\n *\n * @public\n * @see https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n */\nexport class ErrorResponse extends Error {\n    /** Marker to detect class: \"ErrorResponse\" */\n    public readonly name: string = \"ErrorResponse\";\n\n    /** An error code string that can be used to classify the types of errors that occur and to respond to errors. */\n    public readonly error: string | null;\n    /** additional information that can help a developer identify the cause of the error.*/\n    public readonly error_description: string | null;\n    /**\n     * URI identifying a human-readable web page with information about the error, used to provide the client\n       developer with additional information about the error.\n    */\n    public readonly error_uri: string | null;\n\n    /** custom state data set during the initial signin request */\n    public state?: unknown;\n\n    public readonly session_state: string | null;\n\n    public url_state?: string;\n\n    public constructor(\n        args: {\n            error?: string | null; error_description?: string | null; error_uri?: string | null;\n            userState?: unknown; session_state?: string | null; url_state?: string;\n        },\n        /** The x-www-form-urlencoded request body sent to the authority server */\n        public readonly form?: URLSearchParams,\n    ) {\n        super(args.error_description || args.error || \"\");\n\n        if (!args.error) {\n            Logger.error(\"ErrorResponse\", \"No error passed\");\n            throw new Error(\"No error passed\");\n        }\n\n        this.error = args.error;\n        this.error_description = args.error_description ?? null;\n        this.error_uri = args.error_uri ?? null;\n\n        this.state = args.userState;\n        this.session_state = args.session_state ?? null;\n        this.url_state = args.url_state;\n    }\n}\n","// Copyright (C) 2021 AuthTS Contributors\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\n/**\n * Error class thrown in case of network timeouts (e.g IFrame time out).\n *\n * @public\n */\nexport class ErrorTimeout extends Error {\n    /** Marker to detect class: \"ErrorTimeout\" */\n    public readonly name: string = \"ErrorTimeout\";\n\n    public constructor(message?: string) {\n        super(message);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, Timer } from \"./utils\";\nimport type { User } from \"./User\";\n\n/**\n * @public\n */\nexport type AccessTokenCallback = (...ev: unknown[]) => (Promise<void> | void);\n\n/**\n * @public\n */\nexport class AccessTokenEvents {\n    protected readonly _logger = new Logger(\"AccessTokenEvents\");\n\n    private readonly _expiringTimer = new Timer(\"Access token expiring\");\n    private readonly _expiredTimer = new Timer(\"Access token expired\");\n    private readonly _expiringNotificationTimeInSeconds: number;\n\n    public constructor(args: { expiringNotificationTimeInSeconds: number }) {\n        this._expiringNotificationTimeInSeconds = args.expiringNotificationTimeInSeconds;\n    }\n\n    public load(container: User): void {\n        const logger = this._logger.create(\"load\");\n        // only register events if there's an access token and it has an expiration\n        if (container.access_token && container.expires_in !== undefined) {\n            const duration = container.expires_in;\n            logger.debug(\"access token present, remaining duration:\", duration);\n\n            if (duration > 0) {\n                // only register expiring if we still have time\n                let expiring = duration - this._expiringNotificationTimeInSeconds;\n                if (expiring <= 0) {\n                    expiring = 1;\n                }\n\n                logger.debug(\"registering expiring timer, raising in\", expiring, \"seconds\");\n                this._expiringTimer.init(expiring);\n            }\n            else {\n                logger.debug(\"canceling existing expiring timer because we're past expiration.\");\n                this._expiringTimer.cancel();\n            }\n\n            // if it's negative, it will still fire\n            const expired = duration + 1;\n            logger.debug(\"registering expired timer, raising in\", expired, \"seconds\");\n            this._expiredTimer.init(expired);\n        }\n        else {\n            this._expiringTimer.cancel();\n            this._expiredTimer.cancel();\n        }\n    }\n\n    public unload(): void {\n        this._logger.debug(\"unload: canceling existing access token timers\");\n        this._expiringTimer.cancel();\n        this._expiredTimer.cancel();\n    }\n\n    /**\n     * Add callback: Raised prior to the access token expiring.\n     */\n    public addAccessTokenExpiring(cb: AccessTokenCallback): () => void {\n        return this._expiringTimer.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised prior to the access token expiring.\n     */\n    public removeAccessTokenExpiring(cb: AccessTokenCallback): void {\n        this._expiringTimer.removeHandler(cb);\n    }\n\n    /**\n     * Add callback: Raised after the access token has expired.\n     */\n    public addAccessTokenExpired(cb: AccessTokenCallback): () => void {\n        return this._expiredTimer.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised after the access token has expired.\n     */\n    public removeAccessTokenExpired(cb: AccessTokenCallback): void {\n        this._expiredTimer.removeHandler(cb);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\n\n/**\n * @internal\n */\nexport class CheckSessionIFrame {\n    private readonly _logger = new Logger(\"CheckSessionIFrame\");\n    private _frame_origin: string;\n    private _frame: HTMLIFrameElement;\n    private _timer: ReturnType<typeof setInterval> | null = null;\n    private _session_state: string | null = null;\n\n    public constructor(\n        private _callback: () => Promise<void>,\n        private _client_id: string,\n        url: string,\n        private _intervalInSeconds: number,\n        private _stopOnError: boolean,\n    ) {\n        const parsedUrl = new URL(url);\n        this._frame_origin = parsedUrl.origin;\n\n        this._frame = window.document.createElement(\"iframe\");\n\n        // shotgun approach\n        this._frame.style.visibility = \"hidden\";\n        this._frame.style.position = \"fixed\";\n        this._frame.style.left = \"-1000px\";\n        this._frame.style.top = \"0\";\n        this._frame.width = \"0\";\n        this._frame.height = \"0\";\n        this._frame.src = parsedUrl.href;\n    }\n\n    public load(): Promise<void> {\n        return new Promise<void>((resolve) => {\n            this._frame.onload = () => {\n                resolve();\n            };\n\n            window.document.body.appendChild(this._frame);\n            window.addEventListener(\"message\", this._message, false);\n        });\n    }\n\n    private _message = (e: MessageEvent<string>): void => {\n        if (e.origin === this._frame_origin &&\n            e.source === this._frame.contentWindow\n        ) {\n            if (e.data === \"error\") {\n                this._logger.error(\"error message from check session op iframe\");\n                if (this._stopOnError) {\n                    this.stop();\n                }\n            }\n            else if (e.data === \"changed\") {\n                this._logger.debug(\"changed message from check session op iframe\");\n                this.stop();\n                void this._callback();\n            }\n            else {\n                this._logger.debug(e.data + \" message from check session op iframe\");\n            }\n        }\n    };\n\n    public start(session_state: string): void {\n        if (this._session_state === session_state) {\n            return;\n        }\n\n        this._logger.create(\"start\");\n\n        this.stop();\n\n        this._session_state = session_state;\n\n        const send = () => {\n            if (!this._frame.contentWindow || !this._session_state) {\n                return;\n            }\n\n            this._frame.contentWindow.postMessage(this._client_id + \" \" + this._session_state, this._frame_origin);\n        };\n\n        // trigger now\n        send();\n\n        // and setup timer\n        this._timer = setInterval(send, this._intervalInSeconds * 1000);\n    }\n\n    public stop(): void {\n        this._logger.create(\"stop\");\n        this._session_state = null;\n\n        if (this._timer) {\n\n            clearInterval(this._timer);\n            this._timer = null;\n        }\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\n\n/**\n * @public\n */\nexport class InMemoryWebStorage implements Storage {\n    private readonly _logger = new Logger(\"InMemoryWebStorage\");\n    private _data: Record<string, string> = {};\n\n    public clear(): void {\n        this._logger.create(\"clear\");\n        this._data = {};\n    }\n\n    public getItem(key: string): string {\n        this._logger.create(`getItem('${key}')`);\n        return this._data[key];\n    }\n\n    public setItem(key: string, value: string): void {\n        this._logger.create(`setItem('${key}')`);\n        this._data[key] = value;\n    }\n\n    public removeItem(key: string): void {\n        this._logger.create(`removeItem('${key}')`);\n        delete this._data[key];\n    }\n\n    public get length(): number {\n        return Object.getOwnPropertyNames(this._data).length;\n    }\n\n    public key(index: number): string {\n        return Object.getOwnPropertyNames(this._data)[index];\n    }\n}\n","export class ErrorDPoPNonce extends Error {\n    /** Marker to detect class: \"ErrorDPoPNonce\" */\n    public readonly name: string = \"ErrorDPoPNonce\";\n    public readonly nonce: string;\n\n    public constructor(nonce: string, message?: string) {\n        super(message);\n        this.nonce = nonce;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { ErrorResponse, ErrorTimeout } from \"./errors\";\nimport type { ExtraHeader } from \"./OidcClientSettings\";\nimport { Logger } from \"./utils\";\nimport { ErrorDPoPNonce } from \"./errors/ErrorDPoPNonce\";\n\n/**\n * @internal\n */\nexport type JwtHandler = (text: string) => Promise<Record<string, unknown>>;\n\n/**\n * @internal\n */\nexport interface GetJsonOpts {\n    token?: string;\n    credentials?: RequestCredentials;\n    timeoutInSeconds?: number;\n}\n\n/**\n * @internal\n */\nexport interface PostFormOpts {\n    body: URLSearchParams;\n    basicAuth?: string;\n    timeoutInSeconds?: number;\n    initCredentials?: \"same-origin\" | \"include\" | \"omit\";\n    extraHeaders?: Record<string, ExtraHeader>;\n}\n\n/**\n * @internal\n */\nexport class JsonService {\n    private readonly _logger = new Logger(\"JsonService\");\n\n    private _contentTypes: string[] = [];\n\n    public constructor(\n        additionalContentTypes: string[] = [],\n        private _jwtHandler: JwtHandler | null = null,\n        private _extraHeaders: Record<string, ExtraHeader> = {},\n    ) {\n        this._contentTypes.push(...additionalContentTypes, \"application/json\");\n        if (_jwtHandler) {\n            this._contentTypes.push(\"application/jwt\");\n        }\n    }\n\n    protected async fetchWithTimeout(input: RequestInfo, init: RequestInit & { timeoutInSeconds?: number } = {}) {\n        const { timeoutInSeconds, ...initFetch } = init;\n        if (!timeoutInSeconds) {\n            return await fetch(input, initFetch);\n        }\n\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), timeoutInSeconds * 1000);\n\n        try {\n            const response = await fetch(input, {\n                ...init,\n                signal: controller.signal,\n            });\n            return response;\n        }\n        catch (err) {\n            if (err instanceof DOMException && err.name === \"AbortError\") {\n                throw new ErrorTimeout(\"Network timed out\");\n            }\n            throw err;\n        }\n        finally {\n            clearTimeout(timeoutId);\n        }\n    }\n\n    public async getJson(url: string, {\n        token,\n        credentials,\n        timeoutInSeconds,\n    }: GetJsonOpts = {}): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"getJson\");\n        const headers: HeadersInit = {\n            \"Accept\": this._contentTypes.join(\", \"),\n        };\n        if (token) {\n            logger.debug(\"token passed, setting Authorization header\");\n            headers[\"Authorization\"] = \"Bearer \" + token;\n        }\n\n        this.appendExtraHeaders(headers);\n\n        let response: Response;\n        try {\n            logger.debug(\"url:\", url);\n            response = await this.fetchWithTimeout(url, { method: \"GET\", headers, timeoutInSeconds, credentials });\n        }\n        catch (err) {\n            logger.error(\"Network Error\");\n            throw err;\n        }\n\n        logger.debug(\"HTTP response received, status\", response.status);\n        const contentType = response.headers.get(\"Content-Type\");\n        if (contentType && !this._contentTypes.find(item => contentType.startsWith(item))) {\n            logger.throw(new Error(`Invalid response Content-Type: ${(contentType ?? \"undefined\")}, from URL: ${url}`));\n        }\n        if (response.ok && this._jwtHandler && contentType?.startsWith(\"application/jwt\")) {\n            return await this._jwtHandler(await response.text());\n        }\n        let json: Record<string, unknown>;\n        try {\n            json = await response.json();\n        }\n        catch (err) {\n            logger.error(\"Error parsing JSON response\", err);\n            if (response.ok) throw err;\n            throw new Error(`${response.statusText} (${response.status})`);\n        }\n        if (!response.ok) {\n            logger.error(\"Error from server:\", json);\n            if (json.error) {\n                throw new ErrorResponse(json);\n            }\n            throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n        }\n        return json;\n    }\n\n    public async postForm(url: string, {\n        body,\n        basicAuth,\n        timeoutInSeconds,\n        initCredentials,\n        extraHeaders,\n    }: PostFormOpts): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"postForm\");\n        const headers: HeadersInit = {\n            \"Accept\": this._contentTypes.join(\", \"),\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            ...extraHeaders,\n        };\n        if (basicAuth !== undefined) {\n            headers[\"Authorization\"] = \"Basic \" + basicAuth;\n        }\n\n        this.appendExtraHeaders(headers);\n\n        let response: Response;\n        try {\n            logger.debug(\"url:\", url);\n            response = await this.fetchWithTimeout(url, { method: \"POST\", headers, body, timeoutInSeconds, credentials: initCredentials });\n        }\n        catch (err) {\n            logger.error(\"Network error\");\n            throw err;\n        }\n\n        logger.debug(\"HTTP response received, status\", response.status);\n        const contentType = response.headers.get(\"Content-Type\");\n        if (contentType && !this._contentTypes.find(item => contentType.startsWith(item))) {\n            throw new Error(`Invalid response Content-Type: ${(contentType ?? \"undefined\")}, from URL: ${url}`);\n        }\n\n        const responseText = await response.text();\n\n        let json: Record<string, unknown> = {};\n        if (responseText) {\n            try {\n                json = JSON.parse(responseText);\n            }\n            catch (err) {\n                logger.error(\"Error parsing JSON response\", err);\n                if (response.ok) throw err;\n                throw new Error(`${response.statusText} (${response.status})`);\n            }\n        }\n\n        if (!response.ok) {\n            logger.error(\"Error from server:\", json);\n            if (response.headers.has(\"dpop-nonce\")) {\n                const nonce = response.headers.get(\"dpop-nonce\") as string;\n                throw new ErrorDPoPNonce(nonce, `${JSON.stringify(json)}`);\n            }\n            if (json.error) {\n                throw new ErrorResponse(json, body);\n            }\n            throw new Error(`${response.statusText} (${response.status}): ${JSON.stringify(json)}`);\n        }\n\n        return json;\n    }\n\n    private appendExtraHeaders(\n        headers: Record<string, string>,\n    ): void {\n        const logger = this._logger.create(\"appendExtraHeaders\");\n        const customKeys = Object.keys(this._extraHeaders);\n        const protectedHeaders = [\n            \"authorization\",\n            \"accept\",\n            \"content-type\",\n        ];\n        if (customKeys.length === 0) {\n            return;\n        }\n        customKeys.forEach((headerName) => {\n            if (protectedHeaders.includes(headerName.toLocaleLowerCase())) {\n                logger.warn(\"Protected header could not be overridden\", headerName, protectedHeaders);\n                return;\n            }\n            const content = (typeof this._extraHeaders[headerName] === \"function\") ?\n                (this._extraHeaders[headerName] as ()=>string)() :\n                this._extraHeaders[headerName];\n            if (content && content !== \"\") {\n                headers[headerName] = content as string;\n            }\n        });\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport { JsonService } from \"./JsonService\";\nimport type { OidcClientSettingsStore, SigningKey } from \"./OidcClientSettings\";\nimport type { OidcMetadata } from \"./OidcMetadata\";\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata\n */\nexport class MetadataService {\n    private readonly _logger = new Logger(\"MetadataService\");\n    private readonly _jsonService;\n\n    // cache\n    private _metadataUrl: string;\n    private _signingKeys: SigningKey[] | null = null;\n    private _metadata: Partial<OidcMetadata> | null = null;\n    private _fetchRequestCredentials: RequestCredentials | undefined;\n\n    public constructor(private readonly _settings: OidcClientSettingsStore) {\n        this._metadataUrl = this._settings.metadataUrl;\n        this._jsonService = new JsonService(\n            [\"application/jwk-set+json\"],\n            null,\n            this._settings.extraHeaders,\n        );\n        if (this._settings.signingKeys) {\n            this._logger.debug(\"using signingKeys from settings\");\n            this._signingKeys = this._settings.signingKeys;\n        }\n\n        if (this._settings.metadata) {\n            this._logger.debug(\"using metadata from settings\");\n            this._metadata = this._settings.metadata;\n        }\n\n        if (this._settings.fetchRequestCredentials) {\n            this._logger.debug(\"using fetchRequestCredentials from settings\");\n            this._fetchRequestCredentials = this._settings.fetchRequestCredentials;\n        }\n    }\n\n    public resetSigningKeys(): void {\n        this._signingKeys = null;\n    }\n\n    public async getMetadata(): Promise<Partial<OidcMetadata>> {\n        const logger = this._logger.create(\"getMetadata\");\n        if (this._metadata) {\n            logger.debug(\"using cached values\");\n            return this._metadata;\n        }\n\n        if (!this._metadataUrl) {\n            logger.throw(new Error(\"No authority or metadataUrl configured on settings\"));\n            throw null;\n        }\n\n        logger.debug(\"getting metadata from\", this._metadataUrl);\n        const metadata = await this._jsonService.getJson(this._metadataUrl, { credentials: this._fetchRequestCredentials, timeoutInSeconds: this._settings.requestTimeoutInSeconds });\n\n        logger.debug(\"merging remote JSON with seed metadata\");\n        this._metadata = Object.assign({}, this._settings.metadataSeed, metadata);\n        return this._metadata;\n    }\n\n    public getIssuer(): Promise<string> {\n        return this._getMetadataProperty(\"issuer\") as Promise<string>;\n    }\n\n    public getAuthorizationEndpoint(): Promise<string> {\n        return this._getMetadataProperty(\"authorization_endpoint\") as Promise<string>;\n    }\n\n    public getUserInfoEndpoint(): Promise<string> {\n        return this._getMetadataProperty(\"userinfo_endpoint\") as Promise<string>;\n    }\n\n    public getTokenEndpoint(optional: false): Promise<string>;\n    public getTokenEndpoint(optional?: true): Promise<string | undefined>;\n    public getTokenEndpoint(optional = true): Promise<string | undefined> {\n        return this._getMetadataProperty(\"token_endpoint\", optional) as Promise<string | undefined>;\n    }\n\n    public getCheckSessionIframe(): Promise<string | undefined> {\n        return this._getMetadataProperty(\"check_session_iframe\", true) as Promise<string | undefined>;\n    }\n\n    public getEndSessionEndpoint(): Promise<string | undefined> {\n        return this._getMetadataProperty(\"end_session_endpoint\", true) as Promise<string | undefined>;\n    }\n\n    public getRevocationEndpoint(optional: false): Promise<string>;\n    public getRevocationEndpoint(optional?: true): Promise<string | undefined>;\n    public getRevocationEndpoint(optional = true): Promise<string | undefined> {\n        return this._getMetadataProperty(\"revocation_endpoint\", optional) as Promise<string | undefined>;\n    }\n\n    public getKeysEndpoint(optional: false): Promise<string>;\n    public getKeysEndpoint(optional?: true): Promise<string | undefined>;\n    public getKeysEndpoint(optional = true): Promise<string | undefined> {\n        return this._getMetadataProperty(\"jwks_uri\", optional) as Promise<string | undefined>;\n    }\n\n    protected async _getMetadataProperty(name: keyof OidcMetadata, optional=false): Promise<string | boolean | string[] | undefined> {\n        const logger = this._logger.create(`_getMetadataProperty('${name}')`);\n\n        const metadata = await this.getMetadata();\n        logger.debug(\"resolved\");\n\n        if (metadata[name] === undefined) {\n            if (optional === true) {\n                logger.warn(\"Metadata does not contain optional property\");\n                return undefined;\n            }\n\n            logger.throw(new Error(\"Metadata does not contain property \" + name));\n        }\n\n        return metadata[name];\n    }\n\n    public async getSigningKeys(): Promise<SigningKey[] | null> {\n        const logger = this._logger.create(\"getSigningKeys\");\n        if (this._signingKeys) {\n            logger.debug(\"returning signingKeys from cache\");\n            return this._signingKeys;\n        }\n\n        const jwks_uri = await this.getKeysEndpoint(false);\n        logger.debug(\"got jwks_uri\", jwks_uri);\n\n        const keySet = await this._jsonService.getJson(jwks_uri, { timeoutInSeconds: this._settings.requestTimeoutInSeconds });\n        logger.debug(\"got key set\", keySet);\n\n        if (!Array.isArray(keySet.keys)) {\n            logger.throw(new Error(\"Missing keys on keyset\"));\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        this._signingKeys = keySet.keys;\n        return this._signingKeys;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport type { StateStore } from \"./StateStore\";\nimport type { AsyncStorage } from \"./AsyncStorage\";\n\n/**\n * @public\n */\nexport class WebStorageStateStore implements StateStore {\n    private readonly _logger = new Logger(\"WebStorageStateStore\");\n\n    private readonly _store: AsyncStorage | Storage;\n    private readonly _prefix: string;\n\n    public constructor({\n        prefix = \"oidc.\",\n        store = localStorage,\n    }: { prefix?: string; store?: AsyncStorage | Storage } = {}) {\n        this._store = store;\n        this._prefix = prefix;\n    }\n\n    public async set(key: string, value: string): Promise<void> {\n        this._logger.create(`set('${key}')`);\n\n        key = this._prefix + key;\n        await this._store.setItem(key, value);\n    }\n\n    public async get(key: string): Promise<string | null> {\n        this._logger.create(`get('${key}')`);\n\n        key = this._prefix + key;\n        const item = await this._store.getItem(key);\n        return item;\n    }\n\n    public async remove(key: string): Promise<string | null> {\n        this._logger.create(`remove('${key}')`);\n\n        key = this._prefix + key;\n        const item = await this._store.getItem(key);\n        await this._store.removeItem(key);\n        return item;\n    }\n\n    public async getAllKeys(): Promise<string[]> {\n        this._logger.create(\"getAllKeys\");\n        const len = await this._store.length;\n\n        const keys = [];\n        for (let index = 0; index < len; index++) {\n            const key = await this._store.key(index);\n            if (key && key.indexOf(this._prefix) === 0) {\n                keys.push(key.substr(this._prefix.length));\n            }\n        }\n        return keys;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { WebStorageStateStore } from \"./WebStorageStateStore\";\nimport type { OidcMetadata } from \"./OidcMetadata\";\nimport type { StateStore } from \"./StateStore\";\nimport { InMemoryWebStorage } from \"./InMemoryWebStorage\";\nimport type { DPoPStore } from \"./DPoPStore\";\n\nconst DefaultResponseType = \"code\";\nconst DefaultScope = \"openid\";\nconst DefaultClientAuthentication = \"client_secret_post\";\nconst DefaultStaleStateAgeInSeconds = 60 * 15;\n\n/**\n * @public\n */\nexport type SigningKey = Record<string, string | string[]>;\n\n/**\n * @public\n */\nexport type ExtraHeader = string | (() => string);\n\n/**\n * Optional DPoP settings\n * @public\n */\nexport interface DPoPSettings {\n    bind_authorization_code?: boolean;\n    store: DPoPStore;\n}\n\n/**\n * The settings used to configure the {@link OidcClient}.\n *\n * @public\n */\nexport interface OidcClientSettings {\n    /** The URL of the OIDC/OAuth2 provider */\n    authority: string;\n    metadataUrl?: string;\n    /** Provide metadata when authority server does not allow CORS on the metadata endpoint */\n    metadata?: Partial<OidcMetadata>;\n    /** Can be used to seed or add additional values to the results of the discovery request */\n    metadataSeed?: Partial<OidcMetadata>;\n    /** Provide signingKeys when authority server does not allow CORS on the jwks uri */\n    signingKeys?: SigningKey[];\n\n    /** Your client application's identifier as registered with the OIDC/OAuth2 */\n    client_id: string;\n    client_secret?: string;\n    /** The type of response desired from the OIDC/OAuth2 provider (default: \"code\") */\n    response_type?: string;\n    /** The scope being requested from the OIDC/OAuth2 provider (default: \"openid\") */\n    scope?: string;\n    /** The redirect URI of your client application to receive a response from the OIDC/OAuth2 provider */\n    redirect_uri: string;\n    /** The OIDC/OAuth2 post-logout redirect URI */\n    post_logout_redirect_uri?: string;\n\n    /**\n     * Client authentication method that is used to authenticate when using the token endpoint (default: \"client_secret_post\")\n     * - \"client_secret_basic\": using the HTTP Basic authentication scheme\n     * - \"client_secret_post\": including the client credentials in the request body\n     *\n     * See https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication\n     */\n    client_authentication?: \"client_secret_basic\" | \"client_secret_post\";\n\n    /** optional protocol param */\n    prompt?: string;\n    /** optional protocol param */\n    display?: string;\n    /** optional protocol param */\n    max_age?: number;\n    /** optional protocol param */\n    ui_locales?: string;\n    /** optional protocol param */\n    acr_values?: string;\n    /** optional protocol param */\n    resource?: string | string[];\n\n    /**\n     * Optional protocol param\n     * The response mode used by the authority server is defined by the response_type unless explicitly specified:\n     * - Response mode for the OAuth 2.0 response type \"code\" is the \"query\" encoding\n     * - Response mode for the OAuth 2.0 response type \"token\" is the \"fragment\" encoding\n     *\n     * @see https://openid.net/specs/oauth-v2-multiple-response-types-1_0.html#ResponseModes\n     */\n    response_mode?: \"query\" | \"fragment\";\n\n    /**\n     * Should optional OIDC protocol claims be removed from profile or specify the ones to be removed (default: true)\n     * When true, the following claims are removed by default: [\"nbf\", \"jti\", \"auth_time\", \"nonce\", \"acr\", \"amr\", \"azp\", \"at_hash\"]\n     * When specifying claims, the following claims are not allowed: [\"sub\", \"iss\", \"aud\", \"exp\", \"iat\"]\n    */\n    filterProtocolClaims?: boolean | string[];\n    /** Flag to control if additional identity data is loaded from the user info endpoint in order to populate the user's profile (default: false) */\n    loadUserInfo?: boolean;\n    /** Number (in seconds) indicating the age of state entries in storage for authorize requests that are considered abandoned and thus can be cleaned up (default: 900) */\n    staleStateAgeInSeconds?: number;\n\n    /**\n     * Indicates how objects returned from the user info endpoint as claims (e.g. `address`) are merged into the claims from the\n     * id token as a single object.  (default: `{ array: \"replace\" }`)\n     * - array: \"replace\": natives (string, int, float) and arrays are replaced, objects are merged as distinct objects\n     * - array: \"merge\": natives (string, int, float) are replaced, arrays and objects are merged as distinct objects\n     */\n    mergeClaimsStrategy?: { array: \"replace\" | \"merge\" };\n\n    /**\n     * Storage object used to persist interaction state (default: window.localStorage, InMemoryWebStorage iff no window).\n     * E.g. `stateStore: new WebStorageStateStore({ store: window.localStorage })`\n     */\n    stateStore?: StateStore;\n\n    /**\n     * An object containing additional query string parameters to be including in the authorization request.\n     * E.g, when using Azure AD to obtain an access token an additional resource parameter is required. extraQueryParams: `{resource:\"some_identifier\"}`\n     */\n    extraQueryParams?: Record<string, string | number | boolean>;\n\n    extraTokenParams?: Record<string, unknown>;\n\n    /**\n     * An object containing additional header to be including in request.\n     */\n    extraHeaders?: Record<string, ExtraHeader>;\n\n    /**\n     * DPoP enabled or disabled\n     */\n    dpop?: DPoPSettings | undefined;\n\n    /**\n     * Will check the content type header of the response of the revocation endpoint to match these passed values (default: [])\n     */\n    revokeTokenAdditionalContentTypes?: string[];\n    /**\n     * Will disable PKCE validation, changing to true will not append to sign in request code_challenge and code_challenge_method. (default: false)\n     */\n    disablePKCE?: boolean;\n    /**\n     * Sets the credentials for fetch requests. (default: \"same-origin\")\n     * Use this if you need to send cookies to the OIDC/OAuth2 provider or if you are using a proxy that requires cookies\n     */\n    fetchRequestCredentials?: RequestCredentials;\n\n    /**\n     * Only scopes in this list will be passed in the token refresh request.\n     */\n    refreshTokenAllowedScope?: string | undefined;\n\n    /**\n     * Defines request timeouts globally across all requests made to the authorisation server\n     */\n    requestTimeoutInSeconds?: number | undefined;\n\n    /**\n     * https://datatracker.ietf.org/doc/html/rfc6749#section-3.3 describes behavior when omitting scopes from sign in requests\n     * If the IDP supports default scopes, this setting will ignore the scopes property passed to the config. (Default: false)\n     */\n    omitScopeWhenRequesting?: boolean;\n}\n\n/**\n * The settings with defaults applied of the {@link OidcClient}.\n *\n * @public\n * @see {@link OidcClientSettings}\n */\nexport class OidcClientSettingsStore {\n    // metadata\n    public readonly authority: string;\n    public readonly metadataUrl: string;\n    public readonly metadata: Partial<OidcMetadata> | undefined;\n    public readonly metadataSeed: Partial<OidcMetadata> | undefined;\n    public readonly signingKeys: SigningKey[] | undefined;\n\n    // client config\n    public readonly client_id: string;\n    public readonly client_secret: string | undefined;\n    public readonly response_type: string;\n    public readonly scope: string;\n    public readonly redirect_uri: string;\n    public readonly post_logout_redirect_uri: string | undefined;\n    public readonly client_authentication: \"client_secret_basic\" | \"client_secret_post\";\n\n    // optional protocol params\n    public readonly prompt: string | undefined;\n    public readonly display: string | undefined;\n    public readonly max_age: number | undefined;\n    public readonly ui_locales: string | undefined;\n    public readonly acr_values: string | undefined;\n    public readonly resource: string | string[] | undefined;\n    public readonly response_mode: \"query\" | \"fragment\" | undefined;\n\n    // behavior flags\n    public readonly filterProtocolClaims: boolean | string[];\n    public readonly loadUserInfo: boolean;\n    public readonly staleStateAgeInSeconds: number;\n    public readonly mergeClaimsStrategy: { array: \"replace\" | \"merge\" };\n    public readonly omitScopeWhenRequesting: boolean;\n\n    public readonly stateStore: StateStore;\n\n    // extra\n    public readonly extraQueryParams: Record<string, string | number | boolean>;\n    public readonly extraTokenParams: Record<string, unknown>;\n    public readonly dpop: DPoPSettings | undefined;\n    public readonly extraHeaders: Record<string, ExtraHeader>;\n\n    public readonly revokeTokenAdditionalContentTypes?: string[];\n    public readonly fetchRequestCredentials: RequestCredentials;\n    public readonly refreshTokenAllowedScope: string | undefined;\n    public readonly disablePKCE: boolean;\n    public readonly requestTimeoutInSeconds: number | undefined;\n\n    public constructor({\n        // metadata related\n        authority, metadataUrl, metadata, signingKeys, metadataSeed,\n        // client related\n        client_id, client_secret, response_type = DefaultResponseType, scope = DefaultScope,\n        redirect_uri, post_logout_redirect_uri,\n        client_authentication = DefaultClientAuthentication,\n        // optional protocol\n        prompt, display, max_age, ui_locales, acr_values, resource, response_mode,\n        // behavior flags\n        filterProtocolClaims = true,\n        loadUserInfo = false,\n        requestTimeoutInSeconds,\n        staleStateAgeInSeconds = DefaultStaleStateAgeInSeconds,\n        mergeClaimsStrategy = { array: \"replace\" },\n        disablePKCE = false,\n        // other behavior\n        stateStore,\n        revokeTokenAdditionalContentTypes,\n        fetchRequestCredentials,\n        refreshTokenAllowedScope,\n        // extra\n        extraQueryParams = {},\n        extraTokenParams = {},\n        extraHeaders = {},\n        dpop,\n        omitScopeWhenRequesting = false,\n    }: OidcClientSettings) {\n\n        this.authority = authority;\n\n        if (metadataUrl) {\n            this.metadataUrl = metadataUrl;\n        } else {\n            this.metadataUrl = authority;\n            if (authority) {\n                if (!this.metadataUrl.endsWith(\"/\")) {\n                    this.metadataUrl += \"/\";\n                }\n                this.metadataUrl += \".well-known/openid-configuration\";\n            }\n        }\n\n        this.metadata = metadata;\n        this.metadataSeed = metadataSeed;\n        this.signingKeys = signingKeys;\n\n        this.client_id = client_id;\n        this.client_secret = client_secret;\n        this.response_type = response_type;\n        this.scope = scope;\n        this.redirect_uri = redirect_uri;\n        this.post_logout_redirect_uri = post_logout_redirect_uri;\n        this.client_authentication = client_authentication;\n\n        this.prompt = prompt;\n        this.display = display;\n        this.max_age = max_age;\n        this.ui_locales = ui_locales;\n        this.acr_values = acr_values;\n        this.resource = resource;\n        this.response_mode = response_mode;\n\n        this.filterProtocolClaims = filterProtocolClaims ?? true;\n        this.loadUserInfo = !!loadUserInfo;\n        this.staleStateAgeInSeconds = staleStateAgeInSeconds;\n        this.mergeClaimsStrategy = mergeClaimsStrategy;\n        this.omitScopeWhenRequesting = omitScopeWhenRequesting;\n        this.disablePKCE = !!disablePKCE;\n        this.revokeTokenAdditionalContentTypes = revokeTokenAdditionalContentTypes;\n\n        this.fetchRequestCredentials = fetchRequestCredentials ? fetchRequestCredentials : \"same-origin\";\n        this.requestTimeoutInSeconds = requestTimeoutInSeconds;\n\n        if (stateStore) {\n            this.stateStore = stateStore;\n        }\n        else {\n            const store = typeof window !== \"undefined\" ? window.localStorage : new InMemoryWebStorage();\n            this.stateStore = new WebStorageStateStore({ store });\n        }\n\n        this.refreshTokenAllowedScope = refreshTokenAllowedScope;\n\n        this.extraQueryParams = extraQueryParams;\n        this.extraTokenParams = extraTokenParams;\n        this.extraHeaders = extraHeaders;\n\n        this.dpop = dpop;\n        if (this.dpop && !this.dpop?.store) {\n            throw new Error(\"A DPoPStore is required when dpop is enabled\");\n        }\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, JwtUtils } from \"./utils\";\nimport { JsonService } from \"./JsonService\";\nimport type { MetadataService } from \"./MetadataService\";\nimport type { JwtClaims } from \"./Claims\";\nimport type { OidcClientSettingsStore } from \"./OidcClientSettings\";\n\n/**\n * @internal\n */\nexport class UserInfoService {\n    protected readonly _logger = new Logger(\"UserInfoService\");\n    private readonly _jsonService: JsonService;\n\n    public constructor(private readonly _settings: OidcClientSettingsStore,\n        private readonly _metadataService: MetadataService,\n    ) {\n        this._jsonService = new JsonService(\n            undefined,\n            this._getClaimsFromJwt,\n            this._settings.extraHeaders,\n        );\n    }\n\n    public async getClaims(token: string): Promise<JwtClaims> {\n        const logger = this._logger.create(\"getClaims\");\n        if (!token) {\n            this._logger.throw(new Error(\"No token passed\"));\n        }\n\n        const url = await this._metadataService.getUserInfoEndpoint();\n        logger.debug(\"got userinfo url\", url);\n\n        const claims = await this._jsonService.getJson(url, {\n            token,\n            credentials: this._settings.fetchRequestCredentials,\n            timeoutInSeconds: this._settings.requestTimeoutInSeconds,\n        });\n        logger.debug(\"got claims\", claims);\n\n        return claims;\n    }\n\n    protected _getClaimsFromJwt = async (responseText: string): Promise<JwtClaims> => {\n        const logger = this._logger.create(\"_getClaimsFromJwt\");\n        try {\n            const payload = JwtUtils.decode(responseText);\n            logger.debug(\"JWT decoding successful\");\n\n            return payload;\n        } catch (err) {\n            logger.error(\"Error parsing JWT response\");\n            throw err;\n        }\n    };\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { CryptoUtils, Logger } from \"./utils\";\nimport { JsonService } from \"./JsonService\";\nimport type { MetadataService } from \"./MetadataService\";\nimport type { ExtraHeader, OidcClientSettingsStore } from \"./OidcClientSettings\";\n\n/**\n * @internal\n */\nexport interface ExchangeCodeArgs {\n    client_id?: string;\n    client_secret?: string;\n    redirect_uri?: string;\n\n    grant_type?: string;\n    code: string;\n    code_verifier?: string;\n\n    extraHeaders?: Record<string, ExtraHeader>;\n}\n\n/**\n * @internal\n */\nexport interface ExchangeCredentialsArgs {\n    client_id?: string;\n    client_secret?: string;\n\n    grant_type?: string;\n    scope?: string;\n\n    username: string;\n    password: string;\n}\n\n/**\n * @internal\n */\nexport interface ExchangeRefreshTokenArgs {\n    client_id?: string;\n    client_secret?: string;\n    redirect_uri?: string;\n\n    grant_type?: string;\n    refresh_token: string;\n    scope?: string;\n    resource?: string | string[];\n\n    timeoutInSeconds?: number;\n\n    extraHeaders?: Record<string, ExtraHeader>;\n}\n\n/**\n * @internal\n */\nexport interface RevokeArgs {\n    token: string;\n    token_type_hint?: \"access_token\" | \"refresh_token\";\n}\n\n/**\n * @internal\n */\nexport class TokenClient {\n    private readonly _logger = new Logger(\"TokenClient\");\n    private readonly _jsonService;\n\n    public constructor(\n        private readonly _settings: OidcClientSettingsStore,\n        private readonly _metadataService: MetadataService,\n    ) {\n        this._jsonService = new JsonService(\n            this._settings.revokeTokenAdditionalContentTypes,\n            null,\n            this._settings.extraHeaders,\n        );\n    }\n\n    /**\n     * Exchange code.\n     *\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.3\n     */\n    public async exchangeCode({\n        grant_type = \"authorization_code\",\n        redirect_uri = this._settings.redirect_uri,\n        client_id = this._settings.client_id,\n        client_secret = this._settings.client_secret,\n        extraHeaders,\n        ...args\n    }: ExchangeCodeArgs): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"exchangeCode\");\n        if (!client_id) {\n            logger.throw(new Error(\"A client_id is required\"));\n        }\n        if (!redirect_uri) {\n            logger.throw(new Error(\"A redirect_uri is required\"));\n        }\n        if (!args.code) {\n            logger.throw(new Error(\"A code is required\"));\n        }\n\n        const params = new URLSearchParams({ grant_type, redirect_uri });\n        for (const [key, value] of Object.entries(args)) {\n            if (value != null) {\n                params.set(key, value);\n            }\n        }\n        let basicAuth: string | undefined;\n        switch (this._settings.client_authentication) {\n            case \"client_secret_basic\":\n                if (!client_secret) {\n                    logger.throw(new Error(\"A client_secret is required\"));\n                    throw null; // https://github.com/microsoft/TypeScript/issues/46972\n                }\n                basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n                break;\n            case \"client_secret_post\":\n                params.append(\"client_id\", client_id);\n                if (client_secret) {\n                    params.append(\"client_secret\", client_secret);\n                }\n                break;\n        }\n\n        const url = await this._metadataService.getTokenEndpoint(false);\n        logger.debug(\"got token endpoint\");\n\n        const response = await this._jsonService.postForm(url, {\n            body: params,\n            basicAuth,\n            timeoutInSeconds: this._settings.requestTimeoutInSeconds,\n            initCredentials: this._settings.fetchRequestCredentials,\n            extraHeaders,\n        });\n\n        logger.debug(\"got response\");\n\n        return response;\n    }\n\n    /**\n     * Exchange credentials.\n     *\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.3.2\n     */\n    public async exchangeCredentials({\n        grant_type = \"password\",\n        client_id = this._settings.client_id,\n        client_secret = this._settings.client_secret,\n        scope = this._settings.scope,\n        ...args\n    }: ExchangeCredentialsArgs): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"exchangeCredentials\");\n\n        if (!client_id) {\n            logger.throw(new Error(\"A client_id is required\"));\n        }\n\n        const params = new URLSearchParams({ grant_type });\n        if (!this._settings.omitScopeWhenRequesting) {\n            params.set(\"scope\", scope);\n        }\n        for (const [key, value] of Object.entries(args)) {\n            if (value != null) {\n                params.set(key, value);\n            }\n        }\n\n        let basicAuth: string | undefined;\n        switch (this._settings.client_authentication) {\n            case \"client_secret_basic\":\n                if (!client_secret) {\n                    logger.throw(new Error(\"A client_secret is required\"));\n                    throw null; // https://github.com/microsoft/TypeScript/issues/46972\n                }\n                basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n                break;\n            case \"client_secret_post\":\n                params.append(\"client_id\", client_id);\n                if (client_secret) {\n                    params.append(\"client_secret\", client_secret);\n                }\n                break;\n        }\n\n        const url = await this._metadataService.getTokenEndpoint(false);\n        logger.debug(\"got token endpoint\");\n\n        const response = await this._jsonService.postForm(url, { body: params, basicAuth, timeoutInSeconds: this._settings.requestTimeoutInSeconds, initCredentials: this._settings.fetchRequestCredentials });\n        logger.debug(\"got response\");\n\n        return response;\n    }\n\n    /**\n     * Exchange a refresh token.\n     *\n     * @see https://www.rfc-editor.org/rfc/rfc6749#section-6\n     */\n    public async exchangeRefreshToken({\n        grant_type = \"refresh_token\",\n        client_id = this._settings.client_id,\n        client_secret = this._settings.client_secret,\n        timeoutInSeconds,\n        extraHeaders,\n        ...args\n    }: ExchangeRefreshTokenArgs): Promise<Record<string, unknown>> {\n        const logger = this._logger.create(\"exchangeRefreshToken\");\n        if (!client_id) {\n            logger.throw(new Error(\"A client_id is required\"));\n        }\n        if (!args.refresh_token) {\n            logger.throw(new Error(\"A refresh_token is required\"));\n        }\n\n        const params = new URLSearchParams({ grant_type });\n        for (const [key, value] of Object.entries(args)) {\n            if (Array.isArray(value)) {\n                value.forEach(param => params.append(key, param));\n            }\n            else if (value != null) {\n                params.set(key, value);\n            }\n        }\n        let basicAuth: string | undefined;\n        switch (this._settings.client_authentication) {\n            case \"client_secret_basic\":\n                if (!client_secret) {\n                    logger.throw(new Error(\"A client_secret is required\"));\n                    throw null; // https://github.com/microsoft/TypeScript/issues/46972\n                }\n                basicAuth = CryptoUtils.generateBasicAuth(client_id, client_secret);\n                break;\n            case \"client_secret_post\":\n                params.append(\"client_id\", client_id);\n                if (client_secret) {\n                    params.append(\"client_secret\", client_secret);\n                }\n                break;\n        }\n\n        const url = await this._metadataService.getTokenEndpoint(false);\n        logger.debug(\"got token endpoint\");\n\n        const response = await this._jsonService.postForm(url, { body: params, basicAuth, timeoutInSeconds, initCredentials: this._settings.fetchRequestCredentials, extraHeaders });\n        logger.debug(\"got response\");\n\n        return response;\n    }\n\n    /**\n     * Revoke an access or refresh token.\n     *\n     * @see https://datatracker.ietf.org/doc/html/rfc7009#section-2.1\n     */\n    public async revoke(args: RevokeArgs): Promise<void> {\n        const logger = this._logger.create(\"revoke\");\n        if (!args.token) {\n            logger.throw(new Error(\"A token is required\"));\n        }\n\n        const url = await this._metadataService.getRevocationEndpoint(false);\n\n        logger.debug(`got revocation endpoint, revoking ${args.token_type_hint ?? \"default token type\"}`);\n\n        const params = new URLSearchParams();\n        for (const [key, value] of Object.entries(args)) {\n            if (value != null) {\n                params.set(key, value);\n            }\n        }\n        params.set(\"client_id\", this._settings.client_id);\n        if (this._settings.client_secret) {\n            params.set(\"client_secret\", this._settings.client_secret);\n        }\n\n        await this._jsonService.postForm(url, { body: params, timeoutInSeconds: this._settings.requestTimeoutInSeconds });\n        logger.debug(\"got response\");\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, JwtUtils } from \"./utils\";\nimport { ErrorResponse } from \"./errors\";\nimport type { MetadataService } from \"./MetadataService\";\nimport { UserInfoService } from \"./UserInfoService\";\nimport { TokenClient } from \"./TokenClient\";\nimport type { ExtraHeader, OidcClientSettingsStore } from \"./OidcClientSettings\";\nimport type { SigninState } from \"./SigninState\";\nimport type { SigninResponse } from \"./SigninResponse\";\nimport type { State } from \"./State\";\nimport type { SignoutResponse } from \"./SignoutResponse\";\nimport type { UserProfile } from \"./User\";\nimport type { RefreshState } from \"./RefreshState\";\nimport type { IdTokenClaims } from \"./Claims\";\nimport type { ClaimsService } from \"./ClaimsService\";\n\n/**\n * @internal\n */\nexport class ResponseValidator {\n    protected readonly _logger = new Logger(\"ResponseValidator\");\n    protected readonly _userInfoService: UserInfoService;\n    protected readonly _tokenClient: TokenClient;\n\n    public constructor(\n        protected readonly _settings: OidcClientSettingsStore,\n        protected readonly _metadataService: MetadataService,\n        protected readonly _claimsService: ClaimsService,\n    ) {\n        this._userInfoService = new UserInfoService(this._settings, this._metadataService);\n        this._tokenClient = new TokenClient(this._settings, this._metadataService);\n    }\n\n    public async validateSigninResponse(response: SigninResponse, state: SigninState, extraHeaders?: Record<string, ExtraHeader>): Promise<void> {\n        const logger = this._logger.create(\"validateSigninResponse\");\n\n        this._processSigninState(response, state);\n        logger.debug(\"state processed\");\n\n        await this._processCode(response, state, extraHeaders);\n        logger.debug(\"code processed\");\n\n        if (response.isOpenId) {\n            this._validateIdTokenAttributes(response);\n        }\n        logger.debug(\"tokens validated\");\n\n        await this._processClaims(response, state?.skipUserInfo, response.isOpenId);\n        logger.debug(\"claims processed\");\n    }\n\n    public async validateCredentialsResponse(response: SigninResponse, skipUserInfo: boolean): Promise<void> {\n        const logger = this._logger.create(\"validateCredentialsResponse\");\n\n        if (response.isOpenId && !!response.id_token) {\n            this._validateIdTokenAttributes(response);\n        }\n        logger.debug(\"tokens validated\");\n\n        await this._processClaims(response, skipUserInfo, response.isOpenId);\n        logger.debug(\"claims processed\");\n    }\n\n    public async validateRefreshResponse(response: SigninResponse, state: RefreshState): Promise<void> {\n        const logger = this._logger.create(\"validateRefreshResponse\");\n\n        response.userState = state.data;\n        // if there's no session_state on the response, copy over session_state from original request\n        response.session_state ??= state.session_state;\n        // if there's no scope on the response, then assume all scopes granted (per-spec) and copy over scopes from original request\n        response.scope ??= state.scope;\n\n        // OpenID Connect Core 1.0 says that id_token is optional in refresh response:\n        // https://openid.net/specs/openid-connect-core-1_0.html#RefreshTokenResponse\n        if (response.isOpenId && !!response.id_token) {\n            this._validateIdTokenAttributes(response, state.id_token);\n            logger.debug(\"ID Token validated\");\n        }\n\n        if (!response.id_token) {\n            // if there's no id_token on the response, copy over id_token from original request\n            response.id_token = state.id_token;\n            // and decoded part too\n            response.profile = state.profile;\n        }\n\n        const hasIdToken = response.isOpenId && !!response.id_token;\n        await this._processClaims(response, false, hasIdToken);\n        logger.debug(\"claims processed\");\n    }\n\n    public validateSignoutResponse(response: SignoutResponse, state: State): void {\n        const logger = this._logger.create(\"validateSignoutResponse\");\n        if (state.id !== response.state) {\n            logger.throw(new Error(\"State does not match\"));\n        }\n\n        // now that we know the state matches, take the stored data\n        // and set it into the response so callers can get their state\n        // this is important for both success & error outcomes\n        logger.debug(\"state validated\");\n        response.userState = state.data;\n\n        if (response.error) {\n            logger.warn(\"Response was error\", response.error);\n            throw new ErrorResponse(response);\n        }\n    }\n\n    protected _processSigninState(response: SigninResponse, state: SigninState): void {\n        const logger = this._logger.create(\"_processSigninState\");\n        if (state.id !== response.state) {\n            logger.throw(new Error(\"State does not match\"));\n        }\n\n        if (!state.client_id) {\n            logger.throw(new Error(\"No client_id on state\"));\n        }\n\n        if (!state.authority) {\n            logger.throw(new Error(\"No authority on state\"));\n        }\n\n        // ensure we're using the correct authority\n        if (this._settings.authority !== state.authority) {\n            logger.throw(new Error(\"authority mismatch on settings vs. signin state\"));\n        }\n        if (this._settings.client_id && this._settings.client_id !== state.client_id) {\n            logger.throw(new Error(\"client_id mismatch on settings vs. signin state\"));\n        }\n\n        // now that we know the state matches, take the stored data\n        // and set it into the response so callers can get their state\n        // this is important for both success & error outcomes\n        logger.debug(\"state validated\");\n        response.userState = state.data;\n        response.url_state = state.url_state;\n        // if there's no scope on the response, then assume all scopes granted (per-spec) and copy over scopes from original request\n        response.scope ??= state.scope;\n\n        if (response.error) {\n            logger.warn(\"Response was error\", response.error);\n            throw new ErrorResponse(response);\n        }\n\n        if (state.code_verifier && !response.code) {\n            logger.throw(new Error(\"Expected code in response\"));\n        }\n\n    }\n\n    protected async _processClaims(response: SigninResponse, skipUserInfo = false, validateSub = true): Promise<void> {\n        const logger = this._logger.create(\"_processClaims\");\n        response.profile = this._claimsService.filterProtocolClaims(response.profile);\n\n        if (skipUserInfo || !this._settings.loadUserInfo || !response.access_token) {\n            logger.debug(\"not loading user info\");\n            return;\n        }\n\n        logger.debug(\"loading user info\");\n        const claims = await this._userInfoService.getClaims(response.access_token);\n        logger.debug(\"user info claims received from user info endpoint\");\n\n        if (validateSub && claims.sub !== response.profile.sub) {\n            logger.throw(new Error(\"subject from UserInfo response does not match subject in ID Token\"));\n        }\n\n        response.profile = this._claimsService.mergeClaims(response.profile, this._claimsService.filterProtocolClaims(claims as IdTokenClaims));\n        logger.debug(\"user info claims received, updated profile:\", response.profile);\n    }\n\n    protected async _processCode(response: SigninResponse, state: SigninState, extraHeaders?: Record<string, ExtraHeader>): Promise<void> {\n        const logger = this._logger.create(\"_processCode\");\n        if (response.code) {\n            logger.debug(\"Validating code\");\n            const tokenResponse = await this._tokenClient.exchangeCode({\n                client_id: state.client_id,\n                client_secret: state.client_secret,\n                code: response.code,\n                redirect_uri: state.redirect_uri,\n                code_verifier: state.code_verifier,\n                extraHeaders: extraHeaders,\n                ...state.extraTokenParams,\n            });\n            Object.assign(response, tokenResponse);\n        } else {\n            logger.debug(\"No code to process\");\n        }\n    }\n\n    protected _validateIdTokenAttributes(response: SigninResponse, existingToken?: string): void {\n        const logger = this._logger.create(\"_validateIdTokenAttributes\");\n\n        logger.debug(\"decoding ID Token JWT\");\n        const incoming = JwtUtils.decode(response.id_token ?? \"\");\n\n        if (!incoming.sub) {\n            logger.throw(new Error(\"ID Token is missing a subject claim\"));\n        }\n\n        if (existingToken) {\n            const existing = JwtUtils.decode(existingToken);\n            if (incoming.sub !== existing.sub) {\n                logger.throw(new Error(\"sub in id_token does not match current sub\"));\n            }\n            if (incoming.auth_time && incoming.auth_time !== existing.auth_time) {\n                logger.throw(new Error(\"auth_time in id_token does not match original auth_time\"));\n            }\n            if (incoming.azp && incoming.azp !== existing.azp) {\n                logger.throw(new Error(\"azp in id_token does not match original azp\"));\n            }\n            if (!incoming.azp && existing.azp) {\n                logger.throw(new Error(\"azp not in id_token, but present in original id_token\"));\n            }\n        }\n\n        response.profile = incoming as UserProfile;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, CryptoUtils, Timer } from \"./utils\";\nimport type { StateStore } from \"./StateStore\";\n\n/**\n * @public\n */\nexport class State {\n    public readonly id: string;\n    public readonly created: number;\n    public readonly request_type: string | undefined;\n    public readonly url_state: string | undefined;\n\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    public readonly data?: unknown;\n\n    public constructor(args: {\n        id?: string;\n        data?: unknown;\n        created?: number;\n        request_type?: string;\n        url_state?: string;\n    }) {\n        this.id = args.id || CryptoUtils.generateUUIDv4();\n        this.data = args.data;\n\n        if (args.created && args.created > 0) {\n            this.created = args.created;\n        }\n        else {\n            this.created = Timer.getEpochTime();\n        }\n        this.request_type = args.request_type;\n        this.url_state = args.url_state;\n    }\n\n    public toStorageString(): string {\n        new Logger(\"State\").create(\"toStorageString\");\n        return JSON.stringify({\n            id: this.id,\n            data: this.data,\n            created: this.created,\n            request_type: this.request_type,\n            url_state: this.url_state,\n        });\n    }\n\n    public static fromStorageString(storageString: string): Promise<State> {\n        Logger.createStatic(\"State\", \"fromStorageString\");\n        return Promise.resolve(new State(JSON.parse(storageString)));\n    }\n\n    public static async clearStaleState(storage: StateStore, age: number): Promise<void> {\n        const logger = Logger.createStatic(\"State\", \"clearStaleState\");\n        const cutoff = Timer.getEpochTime() - age;\n\n        const keys = await storage.getAllKeys();\n        logger.debug(\"got keys\", keys);\n\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            const item = await storage.get(key);\n            let remove = false;\n\n            if (item) {\n                try {\n                    const state = await State.fromStorageString(item);\n\n                    logger.debug(\"got item from key:\", key, state.created);\n                    if (state.created <= cutoff) {\n                        remove = true;\n                    }\n                }\n                catch (err) {\n                    logger.error(\"Error parsing state for key:\", key, err);\n                    remove = true;\n                }\n            }\n            else {\n                logger.debug(\"no item in storage for key:\", key);\n                remove = true;\n            }\n\n            if (remove) {\n                logger.debug(\"removed item for key:\", key);\n                void storage.remove(key);\n            }\n        }\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, CryptoUtils } from \"./utils\";\nimport { State } from \"./State\";\n\n/** @public */\nexport interface SigninStateArgs {\n    id?: string;\n    data?: unknown;\n    created?: number;\n    request_type?: string;\n\n    code_verifier?: string;\n    code_challenge?: string;\n    authority: string;\n    client_id: string;\n    redirect_uri: string;\n    scope: string;\n    client_secret?: string;\n    extraTokenParams?: Record<string, unknown>;\n    response_mode?: \"query\" | \"fragment\";\n    skipUserInfo?: boolean;\n    url_state?: string;\n}\n\n/** @public */\nexport type SigninStateCreateArgs = Omit<SigninStateArgs, \"code_verifier\"> & {\n    code_verifier?: string | boolean;\n};\n\n/**\n * @public\n */\nexport class SigninState extends State {\n    // isCode\n    /** The same code_verifier that was used to obtain the authorization_code via PKCE. */\n    public readonly code_verifier: string | undefined;\n    /** Used to secure authorization code grants via Proof Key for Code Exchange (PKCE). */\n    public readonly code_challenge: string | undefined;\n\n    // to ensure state still matches settings\n    /** @see {@link OidcClientSettings.authority} */\n    public readonly authority: string;\n    /** @see {@link OidcClientSettings.client_id} */\n    public readonly client_id: string;\n    /** @see {@link OidcClientSettings.redirect_uri} */\n    public readonly redirect_uri: string;\n    /** @see {@link OidcClientSettings.scope} */\n    public readonly scope: string;\n    /** @see {@link OidcClientSettings.client_secret} */\n    public readonly client_secret: string | undefined;\n    /** @see {@link OidcClientSettings.extraTokenParams} */\n    public readonly extraTokenParams: Record<string, unknown> | undefined;\n    /** @see {@link OidcClientSettings.response_mode} */\n    public readonly response_mode: \"query\" | \"fragment\" | undefined;\n\n    public readonly skipUserInfo: boolean | undefined;\n\n    private constructor(args: SigninStateArgs) {\n        super(args);\n\n        this.code_verifier = args.code_verifier;\n        this.code_challenge = args.code_challenge;\n        this.authority = args.authority;\n        this.client_id = args.client_id;\n        this.redirect_uri = args.redirect_uri;\n        this.scope = args.scope;\n        this.client_secret = args.client_secret;\n        this.extraTokenParams = args.extraTokenParams;\n\n        this.response_mode = args.response_mode;\n        this.skipUserInfo = args.skipUserInfo;\n    }\n\n    public static async create(args: SigninStateCreateArgs): Promise<SigninState> {\n        const code_verifier = args.code_verifier === true ? CryptoUtils.generateCodeVerifier() : (args.code_verifier || undefined);\n        const code_challenge = code_verifier ? (await CryptoUtils.generateCodeChallenge(code_verifier)) : undefined;\n\n        return new SigninState({\n            ...args,\n            code_verifier,\n            code_challenge,\n        });\n    }\n\n    public toStorageString(): string {\n        new Logger(\"SigninState\").create(\"toStorageString\");\n        return JSON.stringify({\n            id: this.id,\n            data: this.data,\n            created: this.created,\n            request_type: this.request_type,\n            url_state: this.url_state,\n\n            code_verifier: this.code_verifier,\n            authority: this.authority,\n            client_id: this.client_id,\n            redirect_uri: this.redirect_uri,\n            scope: this.scope,\n            client_secret: this.client_secret,\n            extraTokenParams : this.extraTokenParams,\n            response_mode: this.response_mode,\n            skipUserInfo: this.skipUserInfo,\n        });\n    }\n\n    public static fromStorageString(storageString: string): Promise<SigninState> {\n        Logger.createStatic(\"SigninState\", \"fromStorageString\");\n        const data = JSON.parse(storageString);\n        return SigninState.create(data);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, URL_STATE_DELIMITER } from \"./utils\";\nimport { SigninState } from \"./SigninState\";\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\n */\nexport interface SigninRequestCreateArgs {\n    // mandatory\n    url: string;\n    authority: string;\n    client_id: string;\n    redirect_uri: string;\n    response_type: string;\n    scope: string;\n\n    // optional\n    response_mode?: \"query\" | \"fragment\";\n    nonce?: string;\n    display?: string;\n    dpopJkt?: string;\n    prompt?: string;\n    max_age?: number;\n    ui_locales?: string;\n    id_token_hint?: string;\n    login_hint?: string;\n    acr_values?: string;\n\n    // other\n    resource?: string | string[];\n    request?: string;\n    request_uri?: string;\n    request_type?: string;\n    extraQueryParams?: Record<string, string | number | boolean>;\n\n    // special\n    extraTokenParams?: Record<string, unknown>;\n    client_secret?: string;\n    skipUserInfo?: boolean;\n    disablePKCE?: boolean;\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    state_data?: unknown;\n    url_state?: string;\n    omitScopeWhenRequesting?: boolean;\n}\n\n/**\n * @public\n */\nexport class SigninRequest {\n    private static readonly _logger = new Logger(\"SigninRequest\");\n\n    public readonly url: string;\n    public readonly state: SigninState;\n\n    private constructor(args: {\n        url: string;\n        state: SigninState;\n    }) {\n        this.url = args.url;\n        this.state = args.state;\n    }\n\n    public static async create({\n        // mandatory\n        url, authority, client_id, redirect_uri, response_type, scope,\n        // optional\n        state_data, response_mode, request_type, client_secret, nonce, url_state,\n        resource,\n        skipUserInfo,\n        extraQueryParams,\n        extraTokenParams,\n        disablePKCE,\n        dpopJkt,\n        omitScopeWhenRequesting,\n        ...optionalParams\n    }: SigninRequestCreateArgs): Promise<SigninRequest> {\n        if (!url) {\n            this._logger.error(\"create: No url passed\");\n            throw new Error(\"url\");\n        }\n        if (!client_id) {\n            this._logger.error(\"create: No client_id passed\");\n            throw new Error(\"client_id\");\n        }\n        if (!redirect_uri) {\n            this._logger.error(\"create: No redirect_uri passed\");\n            throw new Error(\"redirect_uri\");\n        }\n        if (!response_type) {\n            this._logger.error(\"create: No response_type passed\");\n            throw new Error(\"response_type\");\n        }\n        if (!scope) {\n            this._logger.error(\"create: No scope passed\");\n            throw new Error(\"scope\");\n        }\n        if (!authority) {\n            this._logger.error(\"create: No authority passed\");\n            throw new Error(\"authority\");\n        }\n\n        const state = await SigninState.create({\n            data: state_data,\n            request_type,\n            url_state,\n            code_verifier: !disablePKCE,\n            client_id, authority, redirect_uri,\n            response_mode,\n            client_secret, scope, extraTokenParams,\n            skipUserInfo,\n        });\n\n        const parsedUrl = new URL(url);\n        parsedUrl.searchParams.append(\"client_id\", client_id);\n        parsedUrl.searchParams.append(\"redirect_uri\", redirect_uri);\n        parsedUrl.searchParams.append(\"response_type\", response_type);\n        if (!omitScopeWhenRequesting) {\n            parsedUrl.searchParams.append(\"scope\", scope);\n        }\n        if (nonce) {\n            parsedUrl.searchParams.append(\"nonce\", nonce);\n        }\n\n        if (dpopJkt) {\n            parsedUrl.searchParams.append(\"dpop_jkt\", dpopJkt);\n        }\n\n        let stateParam = state.id;\n        if (url_state) {\n            stateParam = `${stateParam}${URL_STATE_DELIMITER}${url_state}`;\n        }\n        parsedUrl.searchParams.append(\"state\", stateParam);\n        if (state.code_challenge) {\n            parsedUrl.searchParams.append(\"code_challenge\", state.code_challenge);\n            parsedUrl.searchParams.append(\"code_challenge_method\", \"S256\");\n        }\n\n        if (resource) {\n            // https://datatracker.ietf.org/doc/html/rfc8707\n            const resources = Array.isArray(resource) ? resource : [resource];\n            resources\n                .forEach(r => parsedUrl.searchParams.append(\"resource\", r));\n        }\n\n        for (const [key, value] of Object.entries({ response_mode, ...optionalParams, ...extraQueryParams })) {\n            if (value != null) {\n                parsedUrl.searchParams.append(key, value.toString());\n            }\n        }\n\n        return new SigninRequest({\n            url: parsedUrl.href,\n            state,\n        });\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Timer, URL_STATE_DELIMITER } from \"./utils\";\nimport type { UserProfile } from \"./User\";\n\nconst OidcScope = \"openid\";\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-core-1_0.html#AuthResponse\n * @see https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n */\nexport class SigninResponse {\n    // props present in the initial callback response regardless of success\n    public readonly state: string | null;\n    /** @see {@link User.session_state} */\n    public session_state: string | null;\n\n    // error props\n    /** @see {@link ErrorResponse.error} */\n    public readonly error: string | null;\n    /** @see {@link ErrorResponse.error_description} */\n    public readonly error_description: string | null;\n    /** @see {@link ErrorResponse.error_uri} */\n    public readonly error_uri: string | null;\n\n    // success props\n    public readonly code: string | null;\n\n    // props set after validation\n    /** @see {@link User.id_token} */\n    public id_token?: string;\n    /** @see {@link User.access_token} */\n    public access_token = \"\";\n    /** @see {@link User.token_type} */\n    public token_type = \"\";\n    /** @see {@link User.refresh_token} */\n    public refresh_token?: string;\n    /** @see {@link User.scope} */\n    public scope?: string;\n    /** @see {@link User.expires_at} */\n    public expires_at?: number;\n\n    /** custom state data set during the initial signin request */\n    public userState: unknown;\n    public url_state?: string;\n\n    /** @see {@link User.profile} */\n    public profile: UserProfile = {} as UserProfile;\n\n    public constructor(params: URLSearchParams) {\n        this.state = params.get(\"state\");\n        this.session_state = params.get(\"session_state\");\n        if (this.state) {\n            const splitState = decodeURIComponent(this.state).split(URL_STATE_DELIMITER);\n            this.state = splitState[0];\n            if (splitState.length > 1) {\n                this.url_state = splitState.slice(1).join(URL_STATE_DELIMITER);\n            }\n        }\n\n        this.error = params.get(\"error\");\n        this.error_description = params.get(\"error_description\");\n        this.error_uri = params.get(\"error_uri\");\n\n        this.code = params.get(\"code\");\n    }\n\n    public get expires_in(): number | undefined {\n        if (this.expires_at === undefined) {\n            return undefined;\n        }\n        return this.expires_at - Timer.getEpochTime();\n    }\n    public set expires_in(value: number | undefined) {\n        // spec expects a number, but normalize here just in case\n        if (typeof value === \"string\") value = Number(value);\n        if (value !== undefined && value >= 0) {\n            this.expires_at = Math.floor(value) + Timer.getEpochTime();\n        }\n    }\n\n    public get isOpenId(): boolean {\n        return this.scope?.split(\" \").includes(OidcScope) || !!this.id_token;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport { State } from \"./State\";\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-rpinitiated-1_0.html#RPLogout\n */\nexport interface SignoutRequestArgs {\n    // mandatory\n    url: string;\n\n    // optional\n    id_token_hint?: string;\n    client_id?: string;\n    post_logout_redirect_uri?: string;\n    extraQueryParams?: Record<string, string | number | boolean>;\n\n    // special\n    request_type?: string;\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    state_data?: unknown;\n}\n\n/**\n * @public\n */\nexport class SignoutRequest {\n    private readonly _logger = new Logger(\"SignoutRequest\");\n\n    public readonly url: string;\n    public readonly state?: State;\n\n    public constructor({\n        url,\n        state_data, id_token_hint, post_logout_redirect_uri, extraQueryParams, request_type, client_id,\n    }: SignoutRequestArgs) {\n        if (!url) {\n            this._logger.error(\"ctor: No url passed\");\n            throw new Error(\"url\");\n        }\n\n        const parsedUrl = new URL(url);\n        if (id_token_hint) {\n            parsedUrl.searchParams.append(\"id_token_hint\", id_token_hint);\n        }\n        if (client_id) {\n            parsedUrl.searchParams.append(\"client_id\", client_id);\n        }\n\n        if (post_logout_redirect_uri) {\n            parsedUrl.searchParams.append(\"post_logout_redirect_uri\", post_logout_redirect_uri);\n\n            if (state_data) {\n                this.state = new State({ data: state_data, request_type });\n\n                parsedUrl.searchParams.append(\"state\", this.state.id);\n            }\n        }\n\n        for (const [key, value] of Object.entries({ ...extraQueryParams })) {\n            if (value != null) {\n                parsedUrl.searchParams.append(key, value.toString());\n            }\n        }\n\n        this.url = parsedUrl.href;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\n/**\n * @public\n * @see https://openid.net/specs/openid-connect-core-1_0.html#AuthError\n */\nexport class SignoutResponse {\n    public readonly state: string | null;\n\n    // error props\n    /** @see {@link ErrorResponse.error} */\n    public error: string | null;\n    /** @see {@link ErrorResponse.error_description} */\n    public error_description: string | null;\n    /** @see {@link ErrorResponse.error_uri} */\n    public error_uri: string | null;\n\n    /** custom state data set during the initial signin request */\n    public userState: unknown;\n\n    public constructor(params: URLSearchParams) {\n        this.state = params.get(\"state\");\n\n        this.error = params.get(\"error\");\n        this.error_description = params.get(\"error_description\");\n        this.error_uri = params.get(\"error_uri\");\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport type { JwtClaims } from \"./Claims\";\nimport type { OidcClientSettingsStore } from \"./OidcClientSettings\";\nimport type { UserProfile } from \"./User\";\nimport { Logger } from \"./utils\";\n\n/**\n * Protocol claims that could be removed by default from profile.\n * Derived from the following sets of claims:\n * - {@link https://datatracker.ietf.org/doc/html/rfc7519.html#section-4.1}\n * - {@link https://openid.net/specs/openid-connect-core-1_0.html#IDToken}\n * - {@link https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken}\n *\n * @internal\n */\nconst DefaultProtocolClaims = [\n    \"nbf\",\n    \"jti\",\n    \"auth_time\",\n    \"nonce\",\n    \"acr\",\n    \"amr\",\n    \"azp\",\n    \"at_hash\", // https://openid.net/specs/openid-connect-core-1_0.html#CodeIDToken\n] as const;\n\n/**\n * Protocol claims that should never be removed from profile.\n * \"sub\" is needed internally and others should remain required as per the OIDC specs.\n *\n * @internal\n */\nconst InternalRequiredProtocolClaims = [\"sub\", \"iss\", \"aud\", \"exp\", \"iat\"];\n\n/**\n * @internal\n */\nexport class ClaimsService {\n    protected readonly _logger = new Logger(\"ClaimsService\");\n    public constructor(\n        protected readonly _settings: OidcClientSettingsStore,\n    ) {}\n\n    public filterProtocolClaims(claims: UserProfile): UserProfile {\n        const result = { ...claims };\n\n        if (this._settings.filterProtocolClaims) {\n            let protocolClaims;\n            if (Array.isArray(this._settings.filterProtocolClaims)) {\n                protocolClaims = this._settings.filterProtocolClaims;\n            } else {\n                protocolClaims = DefaultProtocolClaims;\n            }\n\n            for (const claim of protocolClaims) {\n                if (!InternalRequiredProtocolClaims.includes(claim)) {\n                    delete result[claim];\n                }\n            }\n        }\n\n        return result;\n    }\n\n    public mergeClaims(claims1: JwtClaims, claims2: JwtClaims): UserProfile;\n    public mergeClaims(claims1: UserProfile, claims2: JwtClaims): UserProfile {\n        const result = { ...claims1 };\n        for (const [claim, values] of Object.entries(claims2)) {\n            if (result[claim] !== values) {\n                if (Array.isArray(result[claim]) || Array.isArray(values)) {\n                    if (this._settings.mergeClaimsStrategy.array == \"replace\") {\n                        result[claim] = values;\n                    } else {\n                        const mergedValues = Array.isArray(result[claim]) ? result[claim] as unknown[] : [result[claim]];\n                        for (const value of Array.isArray(values) ? values : [values]) {\n                            if (!mergedValues.includes(value)) {\n                                mergedValues.push(value);\n                            }\n                        }\n                        result[claim] = mergedValues;\n                    }\n                } else if (typeof result[claim] === \"object\" && typeof values === \"object\") {\n                    result[claim] = this.mergeClaims(result[claim] as JwtClaims, values as JwtClaims);\n                } else {\n                    result[claim] = values;\n                }\n            }\n        }\n\n        return result;\n    }\n}\n","/**\n * @public\n */\nexport interface DPoPStore {\n    set(key: string, value: DPoPState): Promise<void>;\n    get(key: string): Promise<DPoPState>;\n    remove(key: string): Promise<DPoPState>;\n    getAllKeys(): Promise<string[]>;\n}\n\n/**\n * @public\n */\nexport class DPoPState {\n    public constructor(\n        public readonly keys: CryptoKeyPair,\n        public nonce?: string,\n    ) { }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { CryptoUtils, Logger, UrlUtils } from \"./utils\";\nimport { ErrorResponse } from \"./errors\";\nimport { type ExtraHeader, type OidcClientSettings, OidcClientSettingsStore } from \"./OidcClientSettings\";\nimport { ResponseValidator } from \"./ResponseValidator\";\nimport { MetadataService } from \"./MetadataService\";\nimport type { RefreshState } from \"./RefreshState\";\nimport { SigninRequest, type SigninRequestCreateArgs } from \"./SigninRequest\";\nimport { SigninResponse } from \"./SigninResponse\";\nimport { SignoutRequest, type SignoutRequestArgs } from \"./SignoutRequest\";\nimport { SignoutResponse } from \"./SignoutResponse\";\nimport { SigninState } from \"./SigninState\";\nimport { State } from \"./State\";\nimport { TokenClient } from \"./TokenClient\";\nimport { ClaimsService } from \"./ClaimsService\";\nimport { DPoPState, type DPoPStore } from \"./DPoPStore\";\nimport { ErrorDPoPNonce } from \"./errors/ErrorDPoPNonce\";\n\n/**\n * @public\n */\nexport interface CreateSigninRequestArgs\n    extends Omit<SigninRequestCreateArgs, \"url\" | \"authority\" | \"client_id\" | \"redirect_uri\" | \"response_type\" | \"scope\" | \"state_data\"> {\n    redirect_uri?: string;\n    response_type?: string;\n    scope?: string;\n    dpopJkt?: string;\n\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    state?: unknown;\n}\n\n/**\n * @public\n */\nexport interface UseRefreshTokenArgs {\n    redirect_uri?: string;\n    resource?: string | string[];\n    extraTokenParams?: Record<string, unknown>;\n    timeoutInSeconds?: number;\n\n    state: RefreshState;\n\n    extraHeaders?: Record<string, ExtraHeader>;\n}\n\n/**\n * @public\n */\nexport type CreateSignoutRequestArgs = Omit<SignoutRequestArgs, \"url\" | \"state_data\"> & {\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    state?: unknown;\n};\n\n/**\n * @public\n */\nexport type ProcessResourceOwnerPasswordCredentialsArgs = {\n    username: string;\n    password: string;\n    skipUserInfo?: boolean;\n    extraTokenParams?: Record<string, unknown>;\n};\n\n/**\n * Provides the raw OIDC/OAuth2 protocol support for the authorization endpoint and the end session endpoint in the\n * authorization server. It provides a bare-bones protocol implementation and is used by the UserManager class.\n * Only use this class if you simply want protocol support without the additional management features of the\n * UserManager class.\n *\n * @public\n */\nexport class OidcClient {\n    public readonly settings: OidcClientSettingsStore;\n    protected readonly _logger = new Logger(\"OidcClient\");\n\n    public readonly metadataService: MetadataService;\n    protected readonly _claimsService: ClaimsService;\n    protected readonly _validator: ResponseValidator;\n    protected readonly _tokenClient: TokenClient;\n\n    public constructor(settings: OidcClientSettings);\n    public constructor(settings: OidcClientSettingsStore, metadataService: MetadataService);\n    public constructor(settings: OidcClientSettings | OidcClientSettingsStore, metadataService?: MetadataService) {\n        this.settings = settings instanceof OidcClientSettingsStore ? settings : new OidcClientSettingsStore(settings);\n\n        this.metadataService = metadataService ?? new MetadataService(this.settings);\n        this._claimsService = new ClaimsService(this.settings);\n        this._validator = new ResponseValidator(this.settings, this.metadataService, this._claimsService);\n        this._tokenClient = new TokenClient(this.settings, this.metadataService);\n    }\n\n    public async createSigninRequest({\n        state,\n        request,\n        request_uri,\n        request_type,\n        id_token_hint,\n        login_hint,\n        skipUserInfo,\n        nonce,\n        url_state,\n        response_type = this.settings.response_type,\n        scope = this.settings.scope,\n        redirect_uri = this.settings.redirect_uri,\n        prompt = this.settings.prompt,\n        display = this.settings.display,\n        max_age = this.settings.max_age,\n        ui_locales = this.settings.ui_locales,\n        acr_values = this.settings.acr_values,\n        resource = this.settings.resource,\n        response_mode = this.settings.response_mode,\n        extraQueryParams = this.settings.extraQueryParams,\n        extraTokenParams = this.settings.extraTokenParams,\n        dpopJkt,\n        omitScopeWhenRequesting = this.settings.omitScopeWhenRequesting,\n    }: CreateSigninRequestArgs): Promise<SigninRequest> {\n        const logger = this._logger.create(\"createSigninRequest\");\n\n        if (response_type !== \"code\") {\n            throw new Error(\"Only the Authorization Code flow (with PKCE) is supported\");\n        }\n\n        const url = await this.metadataService.getAuthorizationEndpoint();\n        logger.debug(\"Received authorization endpoint\", url);\n\n        const signinRequest = await SigninRequest.create({\n            url,\n            authority: this.settings.authority,\n            client_id: this.settings.client_id,\n            redirect_uri,\n            response_type,\n            scope,\n            state_data: state,\n            url_state,\n            prompt, display, max_age, ui_locales, id_token_hint, login_hint, acr_values, dpopJkt,\n            resource, request, request_uri, extraQueryParams, extraTokenParams, request_type, response_mode,\n            client_secret: this.settings.client_secret,\n            skipUserInfo,\n            nonce,\n            disablePKCE: this.settings.disablePKCE,\n            omitScopeWhenRequesting,\n        });\n\n        // house cleaning\n        await this.clearStaleState();\n\n        const signinState = signinRequest.state;\n        await this.settings.stateStore.set(signinState.id, signinState.toStorageString());\n        return signinRequest;\n    }\n\n    public async readSigninResponseState(url: string, removeState = false): Promise<{ state: SigninState; response: SigninResponse }> {\n        const logger = this._logger.create(\"readSigninResponseState\");\n\n        const response = new SigninResponse(UrlUtils.readParams(url, this.settings.response_mode));\n        if (!response.state) {\n            logger.throw(new Error(\"No state in response\"));\n            // need to throw within this function's body for type narrowing to work\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n        if (!storedStateString) {\n            logger.throw(new Error(\"No matching state found in storage\"));\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        const state = await SigninState.fromStorageString(storedStateString);\n        return { state, response };\n    }\n\n    public async processSigninResponse(url: string, extraHeaders?: Record<string, ExtraHeader>): Promise<SigninResponse> {\n        const logger = this._logger.create(\"processSigninResponse\");\n\n        const { state, response } = await this.readSigninResponseState(url, true);\n        logger.debug(\"received state from storage; validating response\");\n\n        if (this.settings.dpop && this.settings.dpop.store) {\n            const dpopProof = await this.getDpopProof(this.settings.dpop.store);\n            extraHeaders = { ...extraHeaders, \"DPoP\": dpopProof };\n        }\n\n        /**\n         * The DPoP spec describes a method for Authorization Servers to supply a nonce value\n         * in order to limit the lifetime of a given DPoP proof.\n         * See https://datatracker.ietf.org/doc/html/rfc9449#name-authorization-server-provid\n         * This involves the AS returning a 400 bad request with a DPoP-Nonce header containing\n         * the nonce value. The client must then retry the request with a recomputed DPoP proof\n         * containing the supplied nonce value.\n         */\n        try {\n            await this._validator.validateSigninResponse(response, state, extraHeaders);\n        }\n        catch (err) {\n            if (err instanceof ErrorDPoPNonce && this.settings.dpop) {\n                const dpopProof = await this.getDpopProof(this.settings.dpop.store, err.nonce);\n                extraHeaders![\"DPoP\"] = dpopProof;\n                await this._validator.validateSigninResponse(response, state, extraHeaders);\n            } else {\n                throw err;\n            }\n        }\n\n        return response;\n    }\n\n    async getDpopProof(dpopStore: DPoPStore, nonce?: string): Promise<string> {\n        let keyPair: CryptoKeyPair;\n        let dpopState: DPoPState;\n\n        if (!(await dpopStore.getAllKeys()).includes(this.settings.client_id)) {\n            keyPair = await CryptoUtils.generateDPoPKeys();\n            dpopState = new DPoPState(keyPair, nonce);\n            await dpopStore.set(this.settings.client_id, dpopState);\n        } else {\n            dpopState = await dpopStore.get(this.settings.client_id);\n\n            // if the server supplied nonce has changed since the last request, update the nonce\n            if (dpopState.nonce !== nonce && nonce) {\n                dpopState.nonce = nonce;\n                await dpopStore.set(this.settings.client_id, dpopState);\n            }\n        }\n\n        return await CryptoUtils.generateDPoPProof({\n            url: await this.metadataService.getTokenEndpoint(false),\n            httpMethod: \"POST\",\n            keyPair: dpopState.keys,\n            nonce: dpopState.nonce,\n        });\n    }\n\n    public async processResourceOwnerPasswordCredentials({\n        username,\n        password,\n        skipUserInfo = false,\n        extraTokenParams = {},\n    }: ProcessResourceOwnerPasswordCredentialsArgs): Promise<SigninResponse> {\n        const tokenResponse: Record<string, unknown> = await this._tokenClient.exchangeCredentials({ username, password, ...extraTokenParams });\n        const signinResponse: SigninResponse = new SigninResponse(new URLSearchParams());\n        Object.assign(signinResponse, tokenResponse);\n        await this._validator.validateCredentialsResponse(signinResponse, skipUserInfo);\n        return signinResponse;\n    }\n\n    public async useRefreshToken({\n        state,\n        redirect_uri,\n        resource,\n        timeoutInSeconds,\n        extraHeaders,\n        extraTokenParams,\n    }: UseRefreshTokenArgs): Promise<SigninResponse> {\n        const logger = this._logger.create(\"useRefreshToken\");\n\n        // https://github.com/authts/oidc-client-ts/issues/695\n        // In some cases (e.g. AzureAD), not all granted scopes are allowed on token refresh requests.\n        // Therefore, we filter all granted scopes by a list of allowable scopes.\n        let scope;\n        if (this.settings.refreshTokenAllowedScope === undefined) {\n            scope = state.scope;\n        } else {\n            const allowableScopes = this.settings.refreshTokenAllowedScope.split(\" \");\n            const providedScopes = state.scope?.split(\" \") || [];\n\n            scope = providedScopes.filter(s => allowableScopes.includes(s)).join(\" \");\n        }\n\n        if (this.settings.dpop && this.settings.dpop.store) {\n            const dpopProof = await this.getDpopProof(this.settings.dpop.store);\n            extraHeaders = { ...extraHeaders, \"DPoP\": dpopProof };\n        }\n\n        /**\n         * The DPoP spec describes a method for Authorization Servers to supply a nonce value\n         * in order to limit the lifetime of a given DPoP proof.\n         * See https://datatracker.ietf.org/doc/html/rfc9449#name-authorization-server-provid\n         * This involves the AS returning a 400 bad request with a DPoP-Nonce header containing\n         * the nonce value. The client must then retry the request with a recomputed DPoP proof\n         * containing the supplied nonce value.\n         */\n        let result;\n        try {\n            result = await this._tokenClient.exchangeRefreshToken({\n                refresh_token: state.refresh_token,\n                // provide the (possible filtered) scope list\n                scope,\n                redirect_uri,\n                resource,\n                timeoutInSeconds,\n                extraHeaders,\n                ...extraTokenParams,\n            });\n        } catch (err) {\n            if (err instanceof ErrorDPoPNonce && this.settings.dpop) {\n                extraHeaders![\"DPoP\"] = await this.getDpopProof(this.settings.dpop.store, err.nonce);\n                result = await this._tokenClient.exchangeRefreshToken({\n                    refresh_token: state.refresh_token,\n                    // provide the (possible filtered) scope list\n                    scope,\n                    redirect_uri,\n                    resource,\n                    timeoutInSeconds,\n                    extraHeaders,\n                    ...extraTokenParams,\n                });\n            } else {\n                throw err;\n            }\n        }\n\n        const response = new SigninResponse(new URLSearchParams());\n        Object.assign(response, result);\n        logger.debug(\"validating response\", response);\n        await this._validator.validateRefreshResponse(response, {\n            ...state,\n            // override the scope in the state handed over to the validator\n            // so it can set the granted scope to the requested scope in case none is included in the response\n            scope,\n        });\n        return response;\n    }\n\n    public async createSignoutRequest({\n        state,\n        id_token_hint,\n        client_id,\n        request_type,\n        post_logout_redirect_uri = this.settings.post_logout_redirect_uri,\n        extraQueryParams = this.settings.extraQueryParams,\n    }: CreateSignoutRequestArgs = {}): Promise<SignoutRequest> {\n        const logger = this._logger.create(\"createSignoutRequest\");\n\n        const url = await this.metadataService.getEndSessionEndpoint();\n        if (!url) {\n            logger.throw(new Error(\"No end session endpoint\"));\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        logger.debug(\"Received end session endpoint\", url);\n\n        // specify the client identifier when post_logout_redirect_uri is used but id_token_hint is not\n        if (!client_id && post_logout_redirect_uri && !id_token_hint) {\n            client_id = this.settings.client_id;\n        }\n\n        const request = new SignoutRequest({\n            url,\n            id_token_hint,\n            client_id,\n            post_logout_redirect_uri,\n            state_data: state,\n            extraQueryParams,\n            request_type,\n        });\n\n        // house cleaning\n        await this.clearStaleState();\n\n        const signoutState = request.state;\n        if (signoutState) {\n            logger.debug(\"Signout request has state to persist\");\n            await this.settings.stateStore.set(signoutState.id, signoutState.toStorageString());\n        }\n\n        return request;\n    }\n\n    public async readSignoutResponseState(url: string, removeState = false): Promise<{ state: State | undefined; response: SignoutResponse }> {\n        const logger = this._logger.create(\"readSignoutResponseState\");\n\n        const response = new SignoutResponse(UrlUtils.readParams(url, this.settings.response_mode));\n        if (!response.state) {\n            logger.debug(\"No state in response\");\n\n            if (response.error) {\n                logger.warn(\"Response was error:\", response.error);\n                throw new ErrorResponse(response);\n            }\n\n            return { state: undefined, response };\n        }\n\n        const storedStateString = await this.settings.stateStore[removeState ? \"remove\" : \"get\"](response.state);\n        if (!storedStateString) {\n            logger.throw(new Error(\"No matching state found in storage\"));\n            throw null; // https://github.com/microsoft/TypeScript/issues/46972\n        }\n\n        const state = await State.fromStorageString(storedStateString);\n        return { state, response };\n    }\n\n    public async processSignoutResponse(url: string): Promise<SignoutResponse> {\n        const logger = this._logger.create(\"processSignoutResponse\");\n\n        const { state, response } = await this.readSignoutResponseState(url, true);\n        if (state) {\n            logger.debug(\"Received state from storage; validating response\");\n            this._validator.validateSignoutResponse(response, state);\n        } else {\n            logger.debug(\"No state from storage; skipping response validation\");\n        }\n\n        return response;\n    }\n\n    public clearStaleState(): Promise<void> {\n        this._logger.create(\"clearStaleState\");\n        return State.clearStaleState(this.settings.stateStore, this.settings.staleStateAgeInSeconds);\n    }\n\n    public async revokeToken(token: string, type?: \"access_token\" | \"refresh_token\"): Promise<void> {\n        this._logger.create(\"revokeToken\");\n        return await this._tokenClient.revoke({\n            token,\n            token_type_hint: type,\n        });\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"./utils\";\nimport { CheckSessionIFrame } from \"./CheckSessionIFrame\";\nimport type { UserManager } from \"./UserManager\";\nimport type { User } from \"./User\";\n\n/**\n * @public\n */\nexport class SessionMonitor {\n    private readonly _logger = new Logger(\"SessionMonitor\");\n\n    private _sub: string | undefined;\n    private _checkSessionIFrame?: CheckSessionIFrame;\n\n    public constructor(private readonly _userManager: UserManager) {\n        if (!_userManager) {\n            this._logger.throw(new Error(\"No user manager passed\"));\n        }\n\n        this._userManager.events.addUserLoaded(this._start);\n        this._userManager.events.addUserUnloaded(this._stop);\n\n        this._init().catch((err: unknown) => {\n            // catch to suppress errors since we're in a ctor\n            this._logger.error(err);\n        });\n    }\n\n    protected async _init(): Promise<void> {\n        this._logger.create(\"_init\");\n        const user = await this._userManager.getUser();\n        // doing this manually here since calling getUser\n        // doesn't trigger load event.\n        if (user) {\n            void this._start(user);\n        }\n        else if (this._userManager.settings.monitorAnonymousSession) {\n            const session = await this._userManager.querySessionStatus();\n            if (session) {\n                const tmpUser = {\n                    session_state: session.session_state,\n                    profile: session.sub ? {\n                        sub: session.sub,\n                    } : null,\n                };\n                void this._start(tmpUser);\n            }\n        }\n    }\n\n    protected _start = async (\n        user: User | {\n            session_state: string;\n            profile: { sub: string } | null;\n        },\n    ): Promise<void> => {\n        const session_state = user.session_state;\n        if (!session_state) {\n            return;\n        }\n        const logger = this._logger.create(\"_start\");\n\n        if (user.profile) {\n            this._sub = user.profile.sub;\n            logger.debug(\"session_state\", session_state, \", sub\", this._sub);\n        }\n        else {\n            this._sub = undefined;\n            logger.debug(\"session_state\", session_state, \", anonymous user\");\n        }\n\n        if (this._checkSessionIFrame) {\n            this._checkSessionIFrame.start(session_state);\n            return;\n        }\n\n        try {\n            const url = await this._userManager.metadataService.getCheckSessionIframe();\n            if (url) {\n                logger.debug(\"initializing check session iframe\");\n\n                const client_id = this._userManager.settings.client_id;\n                const intervalInSeconds = this._userManager.settings.checkSessionIntervalInSeconds;\n                const stopOnError = this._userManager.settings.stopCheckSessionOnError;\n\n                const checkSessionIFrame = new CheckSessionIFrame(this._callback, client_id, url, intervalInSeconds, stopOnError);\n                await checkSessionIFrame.load();\n                this._checkSessionIFrame = checkSessionIFrame;\n                checkSessionIFrame.start(session_state);\n            }\n            else {\n                logger.warn(\"no check session iframe found in the metadata\");\n            }\n        }\n        catch (err) {\n            // catch to suppress errors since we're in non-promise callback\n            logger.error(\"Error from getCheckSessionIframe:\", err instanceof Error ? err.message : err);\n        }\n    };\n\n    protected _stop = (): void => {\n        const logger = this._logger.create(\"_stop\");\n        this._sub = undefined;\n\n        if (this._checkSessionIFrame) {\n            this._checkSessionIFrame.stop();\n        }\n\n        if (this._userManager.settings.monitorAnonymousSession) {\n            // using a timer to delay re-initialization to avoid race conditions during signout\n            // TODO rewrite to use promise correctly\n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            const timerHandle = setInterval(async () => {\n                clearInterval(timerHandle);\n\n                try {\n                    const session = await this._userManager.querySessionStatus();\n                    if (session) {\n                        const tmpUser = {\n                            session_state: session.session_state,\n                            profile: session.sub ? {\n                                sub: session.sub,\n                            } : null,\n                        };\n                        void this._start(tmpUser);\n                    }\n                }\n                catch (err) {\n                    // catch to suppress errors since we're in a callback\n                    logger.error(\"error from querySessionStatus\", err instanceof Error ? err.message : err);\n                }\n            }, 1000);\n        }\n    };\n\n    protected _callback = async (): Promise<void> => {\n        const logger = this._logger.create(\"_callback\");\n        try {\n            const session = await this._userManager.querySessionStatus();\n            let raiseEvent = true;\n\n            if (session && this._checkSessionIFrame) {\n                if (session.sub === this._sub) {\n                    raiseEvent = false;\n                    this._checkSessionIFrame.start(session.session_state);\n\n                    logger.debug(\"same sub still logged in at OP, session state has changed, restarting check session iframe; session_state\", session.session_state);\n                    await this._userManager.events._raiseUserSessionChanged();\n                }\n                else {\n                    logger.debug(\"different subject signed into OP\", session.sub);\n                }\n            }\n            else {\n                logger.debug(\"subject no longer signed into OP\");\n            }\n\n            if (raiseEvent) {\n                if (this._sub) {\n                    await this._userManager.events._raiseUserSignedOut();\n                }\n                else {\n                    await this._userManager.events._raiseUserSignedIn();\n                }\n            } else {\n                logger.debug(\"no change in session detected, no event to raise\");\n            }\n        }\n        catch (err) {\n            if (this._sub) {\n                logger.debug(\"Error calling queryCurrentSigninSession; raising signed out event\", err);\n                await this._userManager.events._raiseUserSignedOut();\n            }\n        }\n    };\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, Timer } from \"./utils\";\nimport type { IdTokenClaims } from \"./Claims\";\n\n/**\n * Holds claims represented by a combination of the `id_token` and the user info endpoint.\n *\n * @public\n */\nexport type UserProfile = IdTokenClaims;\n\n/**\n * @public\n */\nexport class User {\n    /**\n     * A JSON Web Token (JWT). Only provided if `openid` scope was requested.\n     * The application can access the data decoded by using the `profile` property.\n     */\n    public id_token?: string;\n\n    /** The session state value returned from the OIDC provider. */\n    public session_state: string | null;\n\n    /**\n     * The requested access token returned from the OIDC provider. The application can use this token to\n     * authenticate itself to the secured resource.\n     */\n    public access_token: string;\n\n    /**\n     * An OAuth 2.0 refresh token. The app can use this token to acquire additional access tokens after the\n     * current access token expires. Refresh tokens are long-lived and can be used to maintain access to resources\n     * for extended periods of time.\n     */\n    public refresh_token?: string;\n\n    /** Typically \"Bearer\" */\n    public token_type: string;\n\n    /** The scopes that the requested access token is valid for. */\n    public scope?: string;\n\n    /** The claims represented by a combination of the `id_token` and the user info endpoint. */\n    public profile: UserProfile;\n\n    /** The expires at returned from the OIDC provider. */\n    public expires_at?: number;\n\n    /** custom state data set during the initial signin request */\n    public readonly state: unknown;\n    public readonly url_state?: string;\n\n    public constructor(args: {\n        id_token?: string;\n        session_state?: string | null;\n        access_token: string;\n        refresh_token?: string;\n        token_type: string;\n        scope?: string;\n        profile: UserProfile;\n        expires_at?: number;\n        userState?: unknown;\n        url_state?: string;\n    }) {\n        this.id_token = args.id_token;\n        this.session_state = args.session_state ?? null;\n        this.access_token = args.access_token;\n        this.refresh_token = args.refresh_token;\n\n        this.token_type = args.token_type;\n        this.scope = args.scope;\n        this.profile = args.profile;\n        this.expires_at = args.expires_at;\n        this.state = args.userState;\n        this.url_state = args.url_state;\n    }\n\n    /** Computed number of seconds the access token has remaining. */\n    public get expires_in(): number | undefined {\n        if (this.expires_at === undefined) {\n            return undefined;\n        }\n        return this.expires_at - Timer.getEpochTime();\n    }\n\n    public set expires_in(value: number | undefined) {\n        if (value !== undefined) {\n            this.expires_at = Math.floor(value) + Timer.getEpochTime();\n        }\n    }\n\n    /** Computed value indicating if the access token is expired. */\n    public get expired(): boolean | undefined {\n        const expires_in = this.expires_in;\n        if (expires_in === undefined) {\n            return undefined;\n        }\n        return expires_in <= 0;\n    }\n\n    /** Array representing the parsed values from the `scope`. */\n    public get scopes(): string[] {\n        return this.scope?.split(\" \") ?? [];\n    }\n\n    public toStorageString(): string {\n        new Logger(\"User\").create(\"toStorageString\");\n        return JSON.stringify({\n            id_token: this.id_token,\n            session_state: this.session_state,\n            access_token: this.access_token,\n            refresh_token: this.refresh_token,\n            token_type: this.token_type,\n            scope: this.scope,\n            profile: this.profile,\n            expires_at: this.expires_at,\n        });\n    }\n\n    public static fromStorageString(storageString: string): User {\n        Logger.createStatic(\"User\", \"fromStorageString\");\n        return new User(JSON.parse(storageString));\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Event, Logger, UrlUtils } from \"../utils\";\nimport type { IWindow, NavigateParams, NavigateResponse } from \"./IWindow\";\n\nconst messageSource = \"oidc-client\";\n\ninterface MessageData {\n    source: string;\n    url: string;\n    keepOpen: boolean;\n}\n\n/**\n * Window implementation which resolves via communication from a child window\n * via the `Window.postMessage()` interface.\n *\n * @internal\n */\nexport abstract class AbstractChildWindow implements IWindow {\n    protected abstract readonly _logger: Logger;\n    protected readonly _abort = new Event<[reason: Error]>(\"Window navigation aborted\");\n    protected readonly _disposeHandlers = new Set<() => void>();\n\n    protected _window: WindowProxy | null = null;\n\n    public async navigate(params: NavigateParams): Promise<NavigateResponse> {\n        const logger = this._logger.create(\"navigate\");\n        if (!this._window) {\n            throw new Error(\"Attempted to navigate on a disposed window\");\n        }\n\n        logger.debug(\"setting URL in window\");\n        this._window.location.replace(params.url);\n\n        const { url, keepOpen } = await new Promise<MessageData>((resolve, reject) => {\n            const listener = (e: MessageEvent) => {\n                const data: MessageData | undefined = e.data;\n                const origin = params.scriptOrigin ?? window.location.origin;\n                if (e.origin !== origin || data?.source !== messageSource) {\n                    // silently discard events not intended for us\n                    return;\n                }\n                try {\n                    const state = UrlUtils.readParams(data.url, params.response_mode).get(\"state\");\n                    if (!state) {\n                        logger.warn(\"no state found in response url\");\n                    }\n                    if (e.source !== this._window && state !== params.state) {\n                        // MessageEvent source is a relatively modern feature, we can't rely on it\n                        // so we also inspect the payload for a matching state key as an alternative\n                        return;\n                    }\n                }\n                catch (err) {\n                    this._dispose();\n                    reject(new Error(\"Invalid response from window\"));\n                }\n                resolve(data);\n            };\n            window.addEventListener(\"message\", listener, false);\n            this._disposeHandlers.add(() => window.removeEventListener(\"message\", listener, false));\n            this._disposeHandlers.add(this._abort.addHandler((reason) => {\n                this._dispose();\n                reject(reason);\n            }));\n        });\n        logger.debug(\"got response from window\");\n        this._dispose();\n\n        if (!keepOpen) {\n            this.close();\n        }\n\n        return { url };\n    }\n\n    public abstract close(): void;\n\n    private _dispose(): void {\n        this._logger.create(\"_dispose\");\n\n        for (const dispose of this._disposeHandlers) {\n            dispose();\n        }\n        this._disposeHandlers.clear();\n    }\n\n    protected static _notifyParent(parent: Window, url: string, keepOpen = false, targetOrigin = window.location.origin): void {\n        parent.postMessage({\n            source: messageSource,\n            url,\n            keepOpen,\n        } as MessageData, targetOrigin);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { type OidcClientSettings, OidcClientSettingsStore } from \"./OidcClientSettings\";\nimport type { PopupWindowFeatures } from \"./utils/PopupUtils\";\nimport { WebStorageStateStore } from \"./WebStorageStateStore\";\nimport { InMemoryWebStorage } from \"./InMemoryWebStorage\";\n\nexport const DefaultPopupWindowFeatures: PopupWindowFeatures = {\n    location: false,\n    toolbar: false,\n    height: 640,\n    closePopupWindowAfterInSeconds: -1,\n};\nexport const DefaultPopupTarget = \"_blank\";\nconst DefaultAccessTokenExpiringNotificationTimeInSeconds = 60;\nconst DefaultCheckSessionIntervalInSeconds = 2;\nexport const DefaultSilentRequestTimeoutInSeconds = 10;\n\n/**\n * The settings used to configure the {@link UserManager}.\n *\n * @public\n */\nexport interface UserManagerSettings extends OidcClientSettings {\n    /** The URL for the page containing the call to signinPopupCallback to handle the callback from the OIDC/OAuth2 */\n    popup_redirect_uri?: string;\n    popup_post_logout_redirect_uri?: string;\n    /**\n     * The features parameter to window.open for the popup signin window. By default, the popup is\n     * placed centered in front of the window opener.\n     * (default: \\{ location: false, menubar: false, height: 640, closePopupWindowAfterInSeconds: -1 \\})\n     */\n    popupWindowFeatures?: PopupWindowFeatures;\n    /** The target parameter to window.open for the popup signin window (default: \"_blank\") */\n    popupWindowTarget?: string;\n    /** The methods window.location method used to redirect (default: \"assign\") */\n    redirectMethod?: \"replace\" | \"assign\";\n    /** The methods target window being redirected (default: \"self\") */\n    redirectTarget?: \"top\" | \"self\";\n\n    /** The target to pass while calling postMessage inside iframe for callback (default: window.location.origin) */\n    iframeNotifyParentOrigin?: string;\n\n    /** The script origin to check during 'message' callback execution while performing silent auth via iframe (default: window.location.origin) */\n    iframeScriptOrigin?: string;\n\n    /** The URL for the page containing the code handling the silent renew */\n    silent_redirect_uri?: string;\n    /** Number of seconds to wait for the silent renew to return before assuming it has failed or timed out (default: 10) */\n    silentRequestTimeoutInSeconds?: number;\n    /** Flag to indicate if there should be an automatic attempt to renew the access token prior to its expiration. The automatic renew attempt starts 1 minute before the access token expires (default: true) */\n    automaticSilentRenew?: boolean;\n    /** Flag to validate user.profile.sub in silent renew calls (default: true) */\n    validateSubOnSilentRenew?: boolean;\n    /** Flag to control if id_token is included as id_token_hint in silent renew calls (default: false) */\n    includeIdTokenInSilentRenew?: boolean;\n\n    /** Will raise events for when user has performed a signout at the OP (default: false) */\n    monitorSession?: boolean;\n    monitorAnonymousSession?: boolean;\n    /** Interval in seconds to check the user's session (default: 2) */\n    checkSessionIntervalInSeconds?: number;\n    query_status_response_type?: string;\n    stopCheckSessionOnError?: boolean;\n\n    /**\n     * The `token_type_hint`s to pass to the authority server by default (default: [\"access_token\", \"refresh_token\"])\n     *\n     * Token types will be revoked in the same order as they are given here.\n     */\n    revokeTokenTypes?: (\"access_token\" | \"refresh_token\")[];\n    /** Will invoke the revocation endpoint on signout if there is an access token for the user (default: false) */\n    revokeTokensOnSignout?: boolean;\n    /** Flag to control if id_token is included as id_token_hint in silent signout calls (default: false) */\n    includeIdTokenInSilentSignout?: boolean;\n\n    /** The number of seconds before an access token is to expire to raise the accessTokenExpiring event (default: 60) */\n    accessTokenExpiringNotificationTimeInSeconds?: number;\n\n    /**\n     * Storage object used to persist User for currently authenticated user (default: window.sessionStorage, InMemoryWebStorage iff no window).\n     *  E.g. `userStore: new WebStorageStateStore({ store: window.localStorage })`\n     */\n    userStore?: WebStorageStateStore;\n}\n\n/**\n * The settings with defaults applied of the {@link UserManager}.\n * @see {@link UserManagerSettings}\n *\n * @public\n */\nexport class UserManagerSettingsStore extends OidcClientSettingsStore {\n    public readonly popup_redirect_uri: string;\n    public readonly popup_post_logout_redirect_uri: string | undefined;\n    public readonly popupWindowFeatures: PopupWindowFeatures;\n    public readonly popupWindowTarget: string;\n    public readonly redirectMethod: \"replace\" | \"assign\";\n    public readonly redirectTarget: \"top\" | \"self\";\n\n    public readonly iframeNotifyParentOrigin: string | undefined;\n    public readonly iframeScriptOrigin: string | undefined;\n\n    public readonly silent_redirect_uri: string;\n    public readonly silentRequestTimeoutInSeconds: number;\n    public readonly automaticSilentRenew: boolean;\n    public readonly validateSubOnSilentRenew: boolean;\n    public readonly includeIdTokenInSilentRenew: boolean;\n\n    public readonly monitorSession: boolean;\n    public readonly monitorAnonymousSession: boolean;\n    public readonly checkSessionIntervalInSeconds: number;\n    public readonly query_status_response_type: string;\n    public readonly stopCheckSessionOnError: boolean;\n\n    public readonly revokeTokenTypes: (\"access_token\" | \"refresh_token\")[];\n    public readonly revokeTokensOnSignout: boolean;\n    public readonly includeIdTokenInSilentSignout: boolean;\n\n    public readonly accessTokenExpiringNotificationTimeInSeconds: number;\n\n    public readonly userStore: WebStorageStateStore;\n\n    public constructor(args: UserManagerSettings) {\n        const {\n            popup_redirect_uri = args.redirect_uri,\n            popup_post_logout_redirect_uri = args.post_logout_redirect_uri,\n            popupWindowFeatures = DefaultPopupWindowFeatures,\n            popupWindowTarget = DefaultPopupTarget,\n            redirectMethod = \"assign\",\n            redirectTarget = \"self\",\n\n            iframeNotifyParentOrigin = args.iframeNotifyParentOrigin,\n            iframeScriptOrigin = args.iframeScriptOrigin,\n\n            requestTimeoutInSeconds,\n            silent_redirect_uri = args.redirect_uri,\n            silentRequestTimeoutInSeconds,\n            automaticSilentRenew = true,\n            validateSubOnSilentRenew = true,\n            includeIdTokenInSilentRenew = false,\n\n            monitorSession = false,\n            monitorAnonymousSession = false,\n            checkSessionIntervalInSeconds = DefaultCheckSessionIntervalInSeconds,\n            query_status_response_type = \"code\",\n            stopCheckSessionOnError = true,\n\n            revokeTokenTypes = [\"access_token\", \"refresh_token\"],\n            revokeTokensOnSignout = false,\n            includeIdTokenInSilentSignout = false,\n\n            accessTokenExpiringNotificationTimeInSeconds = DefaultAccessTokenExpiringNotificationTimeInSeconds,\n\n            userStore,\n        } = args;\n\n        super(args);\n\n        this.popup_redirect_uri = popup_redirect_uri;\n        this.popup_post_logout_redirect_uri = popup_post_logout_redirect_uri;\n        this.popupWindowFeatures = popupWindowFeatures;\n        this.popupWindowTarget = popupWindowTarget;\n        this.redirectMethod = redirectMethod;\n        this.redirectTarget = redirectTarget;\n\n        this.iframeNotifyParentOrigin = iframeNotifyParentOrigin;\n        this.iframeScriptOrigin = iframeScriptOrigin;\n\n        this.silent_redirect_uri = silent_redirect_uri;\n        this.silentRequestTimeoutInSeconds = silentRequestTimeoutInSeconds || requestTimeoutInSeconds || DefaultSilentRequestTimeoutInSeconds;\n        this.automaticSilentRenew = automaticSilentRenew;\n        this.validateSubOnSilentRenew = validateSubOnSilentRenew;\n        this.includeIdTokenInSilentRenew = includeIdTokenInSilentRenew;\n\n        this.monitorSession = monitorSession;\n        this.monitorAnonymousSession = monitorAnonymousSession;\n        this.checkSessionIntervalInSeconds = checkSessionIntervalInSeconds;\n        this.stopCheckSessionOnError = stopCheckSessionOnError;\n        this.query_status_response_type = query_status_response_type;\n\n        this.revokeTokenTypes = revokeTokenTypes;\n        this.revokeTokensOnSignout = revokeTokensOnSignout;\n        this.includeIdTokenInSilentSignout = includeIdTokenInSilentSignout;\n\n        this.accessTokenExpiringNotificationTimeInSeconds = accessTokenExpiringNotificationTimeInSeconds;\n\n        if (userStore) {\n            this.userStore = userStore;\n        }\n        else {\n            const store = typeof window !== \"undefined\" ? window.sessionStorage : new InMemoryWebStorage();\n            this.userStore = new WebStorageStateStore({ store });\n        }\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\nimport { ErrorTimeout } from \"../errors\";\nimport type { NavigateParams, NavigateResponse } from \"./IWindow\";\nimport { AbstractChildWindow } from \"./AbstractChildWindow\";\nimport { DefaultSilentRequestTimeoutInSeconds } from \"../UserManagerSettings\";\n\n/**\n * @public\n */\nexport interface IFrameWindowParams {\n    silentRequestTimeoutInSeconds?: number;\n}\n\n/**\n * @internal\n */\nexport class IFrameWindow extends AbstractChildWindow {\n    protected readonly _logger = new Logger(\"IFrameWindow\");\n    private _frame: HTMLIFrameElement | null;\n    private _timeoutInSeconds: number;\n\n    public constructor({\n        silentRequestTimeoutInSeconds = DefaultSilentRequestTimeoutInSeconds,\n    }: IFrameWindowParams) {\n        super();\n        this._timeoutInSeconds = silentRequestTimeoutInSeconds;\n\n        this._frame = IFrameWindow.createHiddenIframe();\n        this._window = this._frame.contentWindow;\n    }\n\n    private static createHiddenIframe(): HTMLIFrameElement {\n        const iframe = window.document.createElement(\"iframe\");\n\n        // shotgun approach\n        iframe.style.visibility = \"hidden\";\n        iframe.style.position = \"fixed\";\n        iframe.style.left = \"-1000px\";\n        iframe.style.top = \"0\";\n        iframe.width = \"0\";\n        iframe.height = \"0\";\n\n        window.document.body.appendChild(iframe);\n        return iframe;\n    }\n\n    public async navigate(params: NavigateParams): Promise<NavigateResponse> {\n        this._logger.debug(\"navigate: Using timeout of:\", this._timeoutInSeconds);\n        const timer = setTimeout(() => void this._abort.raise(new ErrorTimeout(\"IFrame timed out without a response\")), this._timeoutInSeconds * 1000);\n        this._disposeHandlers.add(() => clearTimeout(timer));\n\n        return await super.navigate(params);\n    }\n\n    public close(): void {\n        if (this._frame) {\n            if (this._frame.parentNode) {\n                this._frame.addEventListener(\"load\", (ev) => {\n                    const frame = ev.target as HTMLIFrameElement;\n                    frame.parentNode?.removeChild(frame);\n                    void this._abort.raise(new Error(\"IFrame removed from DOM\"));\n                }, true);\n                this._frame.contentWindow?.location.replace(\"about:blank\");\n            }\n            this._frame = null;\n        }\n        this._window = null;\n    }\n\n    public static notifyParent(url: string, targetOrigin?: string): void {\n        return super._notifyParent(window.parent, url, false, targetOrigin);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\nimport type { UserManagerSettingsStore } from \"../UserManagerSettings\";\nimport { IFrameWindow, type IFrameWindowParams } from \"./IFrameWindow\";\nimport type { INavigator } from \"./INavigator\";\n\n/**\n * @internal\n */\nexport class IFrameNavigator implements INavigator {\n    private readonly _logger = new Logger(\"IFrameNavigator\");\n\n    constructor(private _settings: UserManagerSettingsStore) {}\n\n    public async prepare({\n        silentRequestTimeoutInSeconds = this._settings.silentRequestTimeoutInSeconds,\n    }: IFrameWindowParams): Promise<IFrameWindow> {\n        return new IFrameWindow({ silentRequestTimeoutInSeconds });\n    }\n\n    public async callback(url: string): Promise<void> {\n        this._logger.create(\"callback\");\n        IFrameWindow.notifyParent(url, this._settings.iframeNotifyParentOrigin);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, PopupUtils, type PopupWindowFeatures } from \"../utils\";\nimport { DefaultPopupWindowFeatures, DefaultPopupTarget } from \"../UserManagerSettings\";\nimport { AbstractChildWindow } from \"./AbstractChildWindow\";\nimport type { NavigateParams, NavigateResponse } from \"./IWindow\";\n\nconst checkForPopupClosedInterval = 500;\nconst second = 1000;\n\n/**\n * @public\n */\nexport interface PopupWindowParams {\n    popupWindowFeatures?: PopupWindowFeatures;\n    popupWindowTarget?: string;\n    /** An AbortSignal to set request's signal. */\n    popupSignal?: AbortSignal | null;\n}\n\n/**\n * @internal\n */\nexport class PopupWindow extends AbstractChildWindow {\n    protected readonly _logger = new Logger(\"PopupWindow\");\n\n    protected _window: WindowProxy | null;\n\n    public constructor({\n        popupWindowTarget = DefaultPopupTarget,\n        popupWindowFeatures = {},\n        popupSignal,\n    }: PopupWindowParams) {\n        super();\n        const centeredPopup = PopupUtils.center({ ...DefaultPopupWindowFeatures, ...popupWindowFeatures });\n        this._window = window.open(undefined, popupWindowTarget, PopupUtils.serialize(centeredPopup));\n\n        if (popupSignal) {\n            popupSignal.addEventListener(\"abort\", () => {\n                void this._abort.raise(new Error(popupSignal.reason ?? \"Popup aborted\"));\n            });\n        }\n\n        if (popupWindowFeatures.closePopupWindowAfterInSeconds && popupWindowFeatures.closePopupWindowAfterInSeconds > 0) {\n            setTimeout(() => {\n                if (!this._window || typeof this._window.closed !== \"boolean\" || this._window.closed) {\n                    void this._abort.raise(new Error(\"Popup blocked by user\"));\n                    return;\n                }\n\n                this.close();\n            }, popupWindowFeatures.closePopupWindowAfterInSeconds * second);\n        }\n    }\n\n    public async navigate(params: NavigateParams): Promise<NavigateResponse> {\n        this._window?.focus();\n\n        const popupClosedInterval = setInterval(() => {\n            if (!this._window || this._window.closed) {\n                void this._abort.raise(new Error(\"Popup closed by user\"));\n            }\n        }, checkForPopupClosedInterval);\n        this._disposeHandlers.add(() => clearInterval(popupClosedInterval));\n\n        return await super.navigate(params);\n    }\n\n    public close(): void {\n        if (this._window) {\n            if (!this._window.closed) {\n                this._window.close();\n                void this._abort.raise(new Error(\"Popup closed\"));\n            }\n        }\n        this._window = null;\n    }\n\n    public static notifyOpener(url: string, keepOpen: boolean): void {\n        if (!window.opener) {\n            throw new Error(\"No window.opener. Can't complete notification.\");\n        }\n        return super._notifyParent(window.opener, url, keepOpen);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\nimport { PopupWindow, type PopupWindowParams } from \"./PopupWindow\";\nimport type { INavigator } from \"./INavigator\";\nimport type { UserManagerSettingsStore } from \"../UserManagerSettings\";\n\n/**\n * @internal\n */\nexport class PopupNavigator implements INavigator {\n    private readonly _logger = new Logger(\"PopupNavigator\");\n\n    constructor(private _settings: UserManagerSettingsStore) { }\n\n    public async prepare({\n        popupWindowFeatures = this._settings.popupWindowFeatures,\n        popupWindowTarget = this._settings.popupWindowTarget,\n        popupSignal,\n    }: PopupWindowParams): Promise<PopupWindow> {\n        return new PopupWindow({ popupWindowFeatures, popupWindowTarget, popupSignal });\n    }\n\n    public async callback(url: string, { keepOpen = false }): Promise<void> {\n        this._logger.create(\"callback\");\n\n        PopupWindow.notifyOpener(url, keepOpen);\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger } from \"../utils\";\nimport type { UserManagerSettingsStore } from \"../UserManagerSettings\";\nimport type { INavigator } from \"./INavigator\";\nimport type { IWindow } from \"./IWindow\";\n\n/**\n * @public\n */\nexport interface RedirectParams {\n    redirectMethod?: \"replace\" | \"assign\";\n    redirectTarget?: \"top\" | \"self\";\n}\n\n/**\n * @internal\n */\nexport class RedirectNavigator implements INavigator {\n    private readonly _logger = new Logger(\"RedirectNavigator\");\n\n    constructor(private _settings: UserManagerSettingsStore) {}\n\n    public async prepare({\n        redirectMethod = this._settings.redirectMethod,\n        redirectTarget = this._settings.redirectTarget,\n    }: RedirectParams): Promise<IWindow> {\n        this._logger.create(\"prepare\");\n        let targetWindow = window.self as Window;\n\n        if (redirectTarget === \"top\") {\n            targetWindow = window.top ?? window.self;\n        }\n    \n        const redirect = targetWindow.location[redirectMethod].bind(targetWindow.location) as (url: string) => never;\n        let abort: (reason: Error) => void;\n        return {\n            navigate: async (params): Promise<never> => {\n                this._logger.create(\"navigate\");\n                // We use a promise that never resolves to block the caller\n                const promise = new Promise((resolve, reject) => {\n                    abort = reject;\n                });\n                redirect(params.url);\n                return await (promise as Promise<never>);\n            },\n            close: () => {\n                this._logger.create(\"close\");\n                abort?.(new Error(\"Redirect aborted\"));\n                targetWindow.stop();\n            },\n        };\n    }\n\n    public async callback(): Promise<void> {\n        return;\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, Event } from \"./utils\";\nimport { AccessTokenEvents } from \"./AccessTokenEvents\";\nimport type { UserManagerSettingsStore } from \"./UserManagerSettings\";\nimport type { User } from \"./User\";\n\n/**\n * @public\n */\nexport type UserLoadedCallback = (user: User) => Promise<void> | void;\n/**\n * @public\n */\nexport type UserUnloadedCallback = () => Promise<void> | void;\n/**\n * @public\n */\nexport type SilentRenewErrorCallback = (error: Error) => Promise<void> | void;\n/**\n * @public\n */\nexport type UserSignedInCallback = () => Promise<void> | void;\n/**\n * @public\n */\nexport type UserSignedOutCallback = () => Promise<void> | void;\n/**\n * @public\n */\nexport type UserSessionChangedCallback = () => Promise<void> | void;\n\n/**\n * @public\n */\nexport class UserManagerEvents extends AccessTokenEvents {\n    protected readonly _logger = new Logger(\"UserManagerEvents\");\n\n    private readonly _userLoaded = new Event<[User]>(\"User loaded\");\n    private readonly _userUnloaded = new Event<[]>(\"User unloaded\");\n    private readonly _silentRenewError = new Event<[Error]>(\"Silent renew error\");\n    private readonly _userSignedIn = new Event<[]>(\"User signed in\");\n    private readonly _userSignedOut = new Event<[]>(\"User signed out\");\n    private readonly _userSessionChanged = new Event<[]>(\"User session changed\");\n\n    public constructor(settings: UserManagerSettingsStore) {\n        super({ expiringNotificationTimeInSeconds: settings.accessTokenExpiringNotificationTimeInSeconds });\n    }\n\n    public async load(user: User, raiseEvent=true): Promise<void> {\n        super.load(user);\n        if (raiseEvent) {\n            await this._userLoaded.raise(user);\n        }\n    }\n    public async unload(): Promise<void> {\n        super.unload();\n        await this._userUnloaded.raise();\n    }\n\n    /**\n     * Add callback: Raised when a user session has been established (or re-established).\n     */\n    public addUserLoaded(cb: UserLoadedCallback): () => void {\n        return this._userLoaded.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when a user session has been established (or re-established).\n     */\n    public removeUserLoaded(cb: UserLoadedCallback): void {\n        return this._userLoaded.removeHandler(cb);\n    }\n\n    /**\n     * Add callback: Raised when a user session has been terminated.\n     */\n    public addUserUnloaded(cb: UserUnloadedCallback): () => void {\n        return this._userUnloaded.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when a user session has been terminated.\n     */\n    public removeUserUnloaded(cb: UserUnloadedCallback): void {\n        return this._userUnloaded.removeHandler(cb);\n    }\n\n    /**\n     * Add callback: Raised when the automatic silent renew has failed.\n     */\n    public addSilentRenewError(cb: SilentRenewErrorCallback): () => void {\n        return this._silentRenewError.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when the automatic silent renew has failed.\n     */\n    public removeSilentRenewError(cb: SilentRenewErrorCallback): void {\n        return this._silentRenewError.removeHandler(cb);\n    }\n    /**\n     * @internal\n     */\n    public async _raiseSilentRenewError(e: Error): Promise<void> {\n        await this._silentRenewError.raise(e);\n    }\n\n    /**\n     * Add callback: Raised when the user is signed in (when `monitorSession` is set).\n     * @see {@link UserManagerSettings.monitorSession}\n     */\n    public addUserSignedIn(cb: UserSignedInCallback): () => void {\n        return this._userSignedIn.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when the user is signed in (when `monitorSession` is set).\n     */\n    public removeUserSignedIn(cb: UserSignedInCallback): void {\n        this._userSignedIn.removeHandler(cb);\n    }\n    /**\n     * @internal\n     */\n    public async _raiseUserSignedIn(): Promise<void> {\n        await this._userSignedIn.raise();\n    }\n\n    /**\n     * Add callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n     * @see {@link UserManagerSettings.monitorSession}\n     */\n    public addUserSignedOut(cb: UserSignedOutCallback): () => void {\n        return this._userSignedOut.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when the user's sign-in status at the OP has changed (when `monitorSession` is set).\n     */\n    public removeUserSignedOut(cb: UserSignedOutCallback): void {\n        this._userSignedOut.removeHandler(cb);\n    }\n    /**\n     * @internal\n     */\n    public async _raiseUserSignedOut(): Promise<void> {\n        await this._userSignedOut.raise();\n    }\n\n    /**\n     * Add callback: Raised when the user session changed (when `monitorSession` is set).\n     * @see {@link UserManagerSettings.monitorSession}\n     */\n    public addUserSessionChanged(cb: UserSessionChangedCallback): () => void {\n        return this._userSessionChanged.addHandler(cb);\n    }\n    /**\n     * Remove callback: Raised when the user session changed (when `monitorSession` is set).\n     */\n    public removeUserSessionChanged(cb: UserSessionChangedCallback): void {\n        this._userSessionChanged.removeHandler(cb);\n    }\n    /**\n     * @internal\n     */\n    public async _raiseUserSessionChanged(): Promise<void> {\n        await this._userSessionChanged.raise();\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { Logger, Timer } from \"./utils\";\nimport { ErrorTimeout } from \"./errors\";\nimport type { UserManager } from \"./UserManager\";\nimport type { AccessTokenCallback } from \"./AccessTokenEvents\";\n\n/**\n * @internal\n */\nexport class SilentRenewService {\n    protected _logger = new Logger(\"SilentRenewService\");\n    private _isStarted = false;\n    private readonly _retryTimer = new Timer(\"Retry Silent Renew\");\n\n    public constructor(private _userManager: UserManager) {}\n\n    public async start(): Promise<void> {\n        const logger = this._logger.create(\"start\");\n        if (!this._isStarted) {\n            this._isStarted = true;\n            this._userManager.events.addAccessTokenExpiring(this._tokenExpiring);\n            this._retryTimer.addHandler(this._tokenExpiring);\n\n            // this will trigger loading of the user so the expiring events can be initialized\n            try {\n                await this._userManager.getUser();\n                // deliberate nop\n            }\n            catch (err) {\n                // catch to suppress errors since we're in a ctor\n                logger.error(\"getUser error\", err);\n            }\n        }\n    }\n\n    public stop(): void {\n        if (this._isStarted) {\n            this._retryTimer.cancel();\n            this._retryTimer.removeHandler(this._tokenExpiring);\n            this._userManager.events.removeAccessTokenExpiring(this._tokenExpiring);\n            this._isStarted = false;\n        }\n    }\n\n    protected _tokenExpiring: AccessTokenCallback = async () => {\n        const logger = this._logger.create(\"_tokenExpiring\");\n        try {\n            await this._userManager.signinSilent();\n            logger.debug(\"silent token renewal successful\");\n        }\n        catch (err) {\n            if (err instanceof ErrorTimeout) {\n                // no response from authority server, e.g. IFrame timeout, ...\n                logger.warn(\"ErrorTimeout from signinSilent:\", err, \"retry in 5s\");\n                this._retryTimer.init(5);\n                return;\n            }\n\n            logger.error(\"Error from signinSilent:\", err);\n            await this._userManager.events._raiseSilentRenewError(err as Error);\n        }\n    };\n}\n","// Copyright (C) AuthTS Contributors\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport type { UserProfile } from \"./User\";\n\n/**\n * Fake state store implementation necessary for validating refresh token requests.\n *\n * @public\n */\nexport class RefreshState {\n    /** custom \"state\", which can be used by a caller to have \"data\" round tripped */\n    public readonly data?: unknown;\n\n    public readonly refresh_token: string;\n    public readonly id_token?: string;\n    public readonly session_state: string | null;\n    public readonly scope?: string;\n    public readonly profile: UserProfile;\n\n    constructor(args: {\n        refresh_token: string;\n        id_token?: string;\n        session_state: string | null;\n        scope?: string;\n        profile: UserProfile;\n\n        state?: unknown;\n    }) {\n        this.refresh_token = args.refresh_token;\n        this.id_token = args.id_token;\n        this.session_state = args.session_state;\n        this.scope = args.scope;\n        this.profile = args.profile;\n\n        this.data = args.state;\n\n    }\n}\n","// Copyright (c) Brock Allen & Dominick Baier. All rights reserved.\n// Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.\n\nimport { CryptoUtils, Logger } from \"./utils\";\nimport { ErrorResponse } from \"./errors\";\nimport { type NavigateResponse, type PopupWindowParams, type IWindow, type IFrameWindowParams, type RedirectParams, RedirectNavigator, PopupNavigator, IFrameNavigator, type INavigator } from \"./navigators\";\nimport { OidcClient, type CreateSigninRequestArgs, type CreateSignoutRequestArgs, type ProcessResourceOwnerPasswordCredentialsArgs, type UseRefreshTokenArgs } from \"./OidcClient\";\nimport { type UserManagerSettings, UserManagerSettingsStore } from \"./UserManagerSettings\";\nimport { User } from \"./User\";\nimport { UserManagerEvents } from \"./UserManagerEvents\";\nimport { SilentRenewService } from \"./SilentRenewService\";\nimport { SessionMonitor } from \"./SessionMonitor\";\nimport type { SessionStatus } from \"./SessionStatus\";\nimport type { SignoutResponse } from \"./SignoutResponse\";\nimport type { MetadataService } from \"./MetadataService\";\nimport { RefreshState } from \"./RefreshState\";\nimport type { SigninResponse } from \"./SigninResponse\";\nimport type { ExtraHeader, DPoPSettings } from \"./OidcClientSettings\";\nimport { DPoPState } from \"./DPoPStore\";\n\n/**\n * @public\n */\nexport type ExtraSigninRequestArgs = Pick<CreateSigninRequestArgs, \"nonce\" | \"extraQueryParams\" | \"extraTokenParams\" | \"state\" | \"redirect_uri\" | \"prompt\" | \"acr_values\" | \"login_hint\" | \"scope\" | \"max_age\" | \"ui_locales\" | \"resource\" | \"url_state\">;\n/**\n * @public\n */\nexport type ExtraSignoutRequestArgs = Pick<CreateSignoutRequestArgs, \"extraQueryParams\" | \"state\" | \"id_token_hint\" | \"post_logout_redirect_uri\">;\n\n/**\n * @public\n */\nexport type RevokeTokensTypes = UserManagerSettings[\"revokeTokenTypes\"];\n\n/**\n * @public\n */\nexport type SigninRedirectArgs = RedirectParams & ExtraSigninRequestArgs;\n\n/**\n * @public\n */\nexport type SigninPopupArgs = PopupWindowParams & ExtraSigninRequestArgs;\n\n/**\n * @public\n */\nexport type SigninSilentArgs = IFrameWindowParams & ExtraSigninRequestArgs;\n\n/**\n * @public\n */\nexport type SigninResourceOwnerCredentialsArgs = ProcessResourceOwnerPasswordCredentialsArgs;\n\n/**\n * @public\n */\nexport type QuerySessionStatusArgs = IFrameWindowParams & ExtraSigninRequestArgs;\n\n/**\n * @public\n */\nexport type SignoutRedirectArgs = RedirectParams & ExtraSignoutRequestArgs;\n\n/**\n * @public\n */\nexport type SignoutPopupArgs = PopupWindowParams & ExtraSignoutRequestArgs;\n\n/**\n * @public\n */\nexport type SignoutSilentArgs = IFrameWindowParams & ExtraSignoutRequestArgs;\n\n/**\n * Provides a higher level API for signing a user in, signing out, managing the user's claims returned from the identity provider,\n * and managing an access token returned from the identity provider (OAuth2/OIDC).\n *\n * @public\n */\nexport class UserManager {\n    /** Get the settings used to configure the `UserManager`. */\n    public readonly settings: UserManagerSettingsStore;\n    protected readonly _logger = new Logger(\"UserManager\");\n\n    protected readonly _client: OidcClient;\n    protected readonly _redirectNavigator: INavigator;\n    protected readonly _popupNavigator: INavigator;\n    protected readonly _iframeNavigator: INavigator;\n    protected readonly _events: UserManagerEvents;\n    protected readonly _silentRenewService: SilentRenewService;\n    protected readonly _sessionMonitor: SessionMonitor | null;\n\n    public constructor(settings: UserManagerSettings, redirectNavigator?: INavigator, popupNavigator?: INavigator, iframeNavigator?: INavigator) {\n        this.settings = new UserManagerSettingsStore(settings);\n\n        this._client = new OidcClient(settings);\n\n        this._redirectNavigator = redirectNavigator ?? new RedirectNavigator(this.settings);\n        this._popupNavigator = popupNavigator ?? new PopupNavigator(this.settings);\n        this._iframeNavigator = iframeNavigator ?? new IFrameNavigator(this.settings);\n\n        this._events = new UserManagerEvents(this.settings);\n        this._silentRenewService = new SilentRenewService(this);\n\n        // order is important for the following properties; these services depend upon the events.\n        if (this.settings.automaticSilentRenew) {\n            this.startSilentRenew();\n        }\n\n        this._sessionMonitor = null;\n        if (this.settings.monitorSession) {\n            this._sessionMonitor = new SessionMonitor(this);\n        }\n    }\n\n    /**\n     * Get object used to register for events raised by the `UserManager`.\n     */\n    public get events(): UserManagerEvents {\n        return this._events;\n    }\n\n    /**\n     * Get object used to access the metadata configuration of the identity provider.\n     */\n    public get metadataService(): MetadataService {\n        return this._client.metadataService;\n    }\n\n    /**\n     * Load the `User` object for the currently authenticated user.\n     *\n     * @returns A promise\n     */\n    public async getUser(): Promise<User | null> {\n        const logger = this._logger.create(\"getUser\");\n        const user = await this._loadUser();\n        if (user) {\n            logger.info(\"user loaded\");\n            await this._events.load(user, false);\n            return user;\n        }\n\n        logger.info(\"user not found in storage\");\n        return null;\n    }\n\n    /**\n     * Remove from any storage the currently authenticated user.\n     *\n     * @returns A promise\n     */\n    public async removeUser(): Promise<void> {\n        const logger = this._logger.create(\"removeUser\");\n        await this.storeUser(null);\n        logger.info(\"user removed from storage\");\n        await this._events.unload();\n    }\n\n    /**\n     * Trigger a redirect of the current window to the authorization endpoint.\n     *\n     * @returns A promise\n     *\n     * @throws `Error` In cases of wrong authentication.\n     */\n    public async signinRedirect(args: SigninRedirectArgs = {}): Promise<void> {\n        this._logger.create(\"signinRedirect\");\n        const {\n            redirectMethod,\n            ...requestArgs\n        } = args;\n\n        let dpopJkt: string | undefined;\n        if (this.settings.dpop?.bind_authorization_code) {\n            dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n        }\n\n        const handle = await this._redirectNavigator.prepare({ redirectMethod });\n        await this._signinStart({\n            request_type: \"si:r\",\n            dpopJkt,\n            ...requestArgs,\n        }, handle);\n    }\n\n    /**\n     * Process the response (callback) from the authorization endpoint.\n     * It is recommended to use {@link UserManager.signinCallback} instead.\n     *\n     * @returns A promise containing the authenticated `User`.\n     *\n     * @see {@link UserManager.signinCallback}\n     */\n    public async signinRedirectCallback(url = window.location.href): Promise<User> {\n        const logger = this._logger.create(\"signinRedirectCallback\");\n        const user = await this._signinEnd(url);\n        if (user.profile && user.profile.sub) {\n            logger.info(\"success, signed in subject\", user.profile.sub);\n        }\n        else {\n            logger.info(\"no subject\");\n        }\n\n        return user;\n    }\n\n    /**\n     * Trigger the signin with user/password.\n     *\n     * @returns A promise containing the authenticated `User`.\n     * @throws {@link ErrorResponse} In cases of wrong authentication.\n     */\n    public async signinResourceOwnerCredentials({\n        username,\n        password,\n        skipUserInfo = false,\n    }: SigninResourceOwnerCredentialsArgs): Promise<User> {\n        const logger = this._logger.create(\"signinResourceOwnerCredential\");\n\n        const signinResponse = await this._client.processResourceOwnerPasswordCredentials({\n            username,\n            password,\n            skipUserInfo,\n            extraTokenParams: this.settings.extraTokenParams,\n        });\n        logger.debug(\"got signin response\");\n\n        const user = await this._buildUser(signinResponse);\n        if (user.profile && user.profile.sub) {\n            logger.info(\"success, signed in subject\", user.profile.sub);\n        } else {\n            logger.info(\"no subject\");\n        }\n        return user;\n    }\n\n    /**\n     * Trigger a request (via a popup window) to the authorization endpoint.\n     *\n     * @returns A promise containing the authenticated `User`.\n     * @throws `Error` In cases of wrong authentication.\n     */\n    public async signinPopup(args: SigninPopupArgs = {}): Promise<User> {\n        const logger = this._logger.create(\"signinPopup\");\n\n        let dpopJkt: string | undefined;\n        if (this.settings.dpop?.bind_authorization_code) {\n            dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n        }\n\n        const {\n            popupWindowFeatures,\n            popupWindowTarget,\n            popupSignal,\n            ...requestArgs\n        } = args;\n        const url = this.settings.popup_redirect_uri;\n        if (!url) {\n            logger.throw(new Error(\"No popup_redirect_uri configured\"));\n        }\n\n        const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget, popupSignal });\n        const user = await this._signin({\n            request_type: \"si:p\",\n            redirect_uri: url,\n            display: \"popup\",\n            dpopJkt,\n            ...requestArgs,\n        }, handle);\n        if (user) {\n            if (user.profile && user.profile.sub) {\n                logger.info(\"success, signed in subject\", user.profile.sub);\n            } else {\n                logger.info(\"no subject\");\n            }\n        }\n\n        return user;\n    }\n\n    /**\n     * Notify the opening window of response (callback) from the authorization endpoint.\n     * It is recommended to use {@link UserManager.signinCallback} instead.\n     *\n     * @returns A promise\n     *\n     * @see {@link UserManager.signinCallback}\n     */\n    public async signinPopupCallback(url = window.location.href, keepOpen = false): Promise<void> {\n        const logger = this._logger.create(\"signinPopupCallback\");\n        await this._popupNavigator.callback(url, { keepOpen });\n        logger.info(\"success\");\n    }\n\n    /**\n     * Trigger a silent request (via refresh token or an iframe) to the authorization endpoint.\n     *\n     * @returns A promise that contains the authenticated `User`.\n     */\n    public async signinSilent(args: SigninSilentArgs = {}): Promise<User | null> {\n        const logger = this._logger.create(\"signinSilent\");\n        const {\n            silentRequestTimeoutInSeconds,\n            ...requestArgs\n        } = args;\n        // first determine if we have a refresh token, or need to use iframe\n        let user = await this._loadUser();\n        if (user?.refresh_token) {\n            logger.debug(\"using refresh token\");\n            const state = new RefreshState(user as Required<User>);\n            return await this._useRefreshToken({\n                state,\n                redirect_uri: requestArgs.redirect_uri,\n                resource: requestArgs.resource,\n                extraTokenParams: requestArgs.extraTokenParams,\n                timeoutInSeconds: silentRequestTimeoutInSeconds,\n            });\n        }\n\n        let dpopJkt: string | undefined;\n        if (this.settings.dpop?.bind_authorization_code) {\n            dpopJkt = await this.generateDPoPJkt(this.settings.dpop);\n        }\n\n        const url = this.settings.silent_redirect_uri;\n        if (!url) {\n            logger.throw(new Error(\"No silent_redirect_uri configured\"));\n        }\n\n        let verifySub: string | undefined;\n        if (user && this.settings.validateSubOnSilentRenew) {\n            logger.debug(\"subject prior to silent renew:\", user.profile.sub);\n            verifySub = user.profile.sub;\n        }\n\n        const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n        user = await this._signin({\n            request_type: \"si:s\",\n            redirect_uri: url,\n            prompt: \"none\",\n            id_token_hint: this.settings.includeIdTokenInSilentRenew ? user?.id_token : undefined,\n            dpopJkt,\n            ...requestArgs,\n        }, handle, verifySub);\n        if (user) {\n            if (user.profile?.sub) {\n                logger.info(\"success, signed in subject\", user.profile.sub);\n            }\n            else {\n                logger.info(\"no subject\");\n            }\n        }\n\n        return user;\n    }\n\n    protected async _useRefreshToken(args: UseRefreshTokenArgs): Promise<User> {\n        const response = await this._client.useRefreshToken({\n            timeoutInSeconds: this.settings.silentRequestTimeoutInSeconds,\n            ...args,\n        });\n        const user = new User({ ...args.state, ...response });\n\n        await this.storeUser(user);\n        await this._events.load(user);\n        return user;\n    }\n\n    /**\n     *\n     * Notify the parent window of response (callback) from the authorization endpoint.\n     * It is recommended to use {@link UserManager.signinCallback} instead.\n     *\n     * @returns A promise\n     *\n     * @see {@link UserManager.signinCallback}\n     */\n    public async signinSilentCallback(url = window.location.href): Promise<void> {\n        const logger = this._logger.create(\"signinSilentCallback\");\n        await this._iframeNavigator.callback(url);\n        logger.info(\"success\");\n    }\n\n    /**\n     * Process any response (callback) from the authorization endpoint, by dispatching the request_type\n     * and executing one of the following functions:\n     * - {@link UserManager.signinRedirectCallback}\n     * - {@link UserManager.signinPopupCallback}\n     * - {@link UserManager.signinSilentCallback}\n     *\n     * @throws `Error` If request_type is unknown or signin cannot be processed.\n     */\n    public async signinCallback(url = window.location.href): Promise<User | undefined> {\n        const { state } = await this._client.readSigninResponseState(url);\n        switch (state.request_type) {\n            case \"si:r\":\n                return await this.signinRedirectCallback(url);\n            case \"si:p\":\n                await this.signinPopupCallback(url);\n                break;\n            case \"si:s\":\n                await this.signinSilentCallback(url);\n                break;\n            default:\n                throw new Error(\"invalid response_type in state\");\n        }\n        return undefined;\n    }\n\n    /**\n     * Process any response (callback) from the end session endpoint, by dispatching the request_type\n     * and executing one of the following functions:\n     * - {@link UserManager.signoutRedirectCallback}\n     * - {@link UserManager.signoutPopupCallback}\n     * - {@link UserManager.signoutSilentCallback}\n     *\n     * @throws `Error` If request_type is unknown or signout cannot be processed.\n     */\n    public async signoutCallback(url = window.location.href, keepOpen = false): Promise<SignoutResponse | undefined> {\n        const { state } = await this._client.readSignoutResponseState(url);\n        if (!state) {\n            return undefined;\n        }\n\n        switch (state.request_type) {\n            case \"so:r\":\n                return await this.signoutRedirectCallback(url);\n            case \"so:p\":\n                await this.signoutPopupCallback(url, keepOpen);\n                break;\n            case \"so:s\":\n                await this.signoutSilentCallback(url);\n                break;\n            default:\n                throw new Error(\"invalid response_type in state\");\n        }\n        return undefined;\n    }\n\n    /**\n     * Query OP for user's current signin status.\n     *\n     * @returns A promise object with session_state and subject identifier.\n     */\n    public async querySessionStatus(args: QuerySessionStatusArgs = {}): Promise<SessionStatus | null> {\n        const logger = this._logger.create(\"querySessionStatus\");\n        const {\n            silentRequestTimeoutInSeconds,\n            ...requestArgs\n        } = args;\n        const url = this.settings.silent_redirect_uri;\n        if (!url) {\n            logger.throw(new Error(\"No silent_redirect_uri configured\"));\n        }\n\n        const user = await this._loadUser();\n        const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n        const navResponse = await this._signinStart({\n            request_type: \"si:s\", // this acts like a signin silent\n            redirect_uri: url,\n            prompt: \"none\",\n            id_token_hint: this.settings.includeIdTokenInSilentRenew ? user?.id_token : undefined,\n            response_type: this.settings.query_status_response_type,\n            scope: \"openid\",\n            skipUserInfo: true,\n            ...requestArgs,\n        }, handle);\n        try {\n            const extraHeaders: Record<string, ExtraHeader> = {};\n            const signinResponse = await this._client.processSigninResponse(navResponse.url, extraHeaders);\n            logger.debug(\"got signin response\");\n\n            if (signinResponse.session_state && signinResponse.profile.sub) {\n                logger.info(\"success for subject\", signinResponse.profile.sub);\n                return {\n                    session_state: signinResponse.session_state,\n                    sub: signinResponse.profile.sub,\n                };\n            }\n\n            logger.info(\"success, user not authenticated\");\n            return null;\n        } catch (err) {\n            if (this.settings.monitorAnonymousSession && err instanceof ErrorResponse) {\n                switch (err.error) {\n                    case \"login_required\":\n                    case \"consent_required\":\n                    case \"interaction_required\":\n                    case \"account_selection_required\":\n                        logger.info(\"success for anonymous user\");\n                        return {\n                            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                            session_state: err.session_state!,\n                        };\n                }\n            }\n            throw err;\n        }\n    }\n\n    protected async _signin(args: CreateSigninRequestArgs, handle: IWindow, verifySub?: string): Promise<User> {\n        const navResponse = await this._signinStart(args, handle);\n        return await this._signinEnd(navResponse.url, verifySub);\n    }\n\n    protected async _signinStart(args: CreateSigninRequestArgs, handle: IWindow): Promise<NavigateResponse> {\n        const logger = this._logger.create(\"_signinStart\");\n\n        try {\n            const signinRequest = await this._client.createSigninRequest(args);\n            logger.debug(\"got signin request\");\n\n            return await handle.navigate({\n                url: signinRequest.url,\n                state: signinRequest.state.id,\n                response_mode: signinRequest.state.response_mode,\n                scriptOrigin: this.settings.iframeScriptOrigin,\n            });\n        } catch (err) {\n            logger.debug(\"error after preparing navigator, closing navigator window\");\n            handle.close();\n            throw err;\n        }\n    }\n\n    protected async _signinEnd(url: string, verifySub?: string): Promise<User> {\n        const logger = this._logger.create(\"_signinEnd\");\n        const extraHeaders: Record<string, ExtraHeader> = {};\n        const signinResponse = await this._client.processSigninResponse(url, extraHeaders);\n        logger.debug(\"got signin response\");\n\n        const user = await this._buildUser(signinResponse, verifySub);\n        return user;\n    }\n\n    protected async _buildUser(signinResponse: SigninResponse, verifySub?: string) {\n        const logger = this._logger.create(\"_buildUser\");\n        const user = new User(signinResponse);\n        if (verifySub) {\n            if (verifySub !== user.profile.sub) {\n                logger.debug(\"current user does not match user returned from signin. sub from signin:\", user.profile.sub);\n                throw new ErrorResponse({ ...signinResponse, error: \"login_required\" });\n            }\n            logger.debug(\"current user matches user returned from signin\");\n        }\n\n        await this.storeUser(user);\n        logger.debug(\"user stored\");\n        await this._events.load(user);\n\n        return user;\n    }\n\n    /**\n     * Trigger a redirect of the current window to the end session endpoint.\n     *\n     * @returns A promise\n     */\n    public async signoutRedirect(args: SignoutRedirectArgs = {}): Promise<void> {\n        const logger = this._logger.create(\"signoutRedirect\");\n        const {\n            redirectMethod,\n            ...requestArgs\n        } = args;\n        const handle = await this._redirectNavigator.prepare({ redirectMethod });\n        await this._signoutStart({\n            request_type: \"so:r\",\n            post_logout_redirect_uri: this.settings.post_logout_redirect_uri,\n            ...requestArgs,\n        }, handle);\n        logger.info(\"success\");\n    }\n\n    /**\n     * Process response (callback) from the end session endpoint.\n     * It is recommended to use {@link UserManager.signoutCallback} instead.\n     *\n     * @returns A promise containing signout response\n     *\n     * @see {@link UserManager.signoutCallback}\n     */\n    public async signoutRedirectCallback(url = window.location.href): Promise<SignoutResponse> {\n        const logger = this._logger.create(\"signoutRedirectCallback\");\n        const response = await this._signoutEnd(url);\n        logger.info(\"success\");\n        return response;\n    }\n\n    /**\n     * Trigger a redirect of a popup window to the end session endpoint.\n     *\n     * @returns A promise\n     */\n    public async signoutPopup(args: SignoutPopupArgs = {}): Promise<void> {\n        const logger = this._logger.create(\"signoutPopup\");\n        const {\n            popupWindowFeatures,\n            popupWindowTarget,\n            popupSignal,\n            ...requestArgs\n        } = args;\n        const url = this.settings.popup_post_logout_redirect_uri;\n\n        const handle = await this._popupNavigator.prepare({ popupWindowFeatures, popupWindowTarget, popupSignal });\n        await this._signout({\n            request_type: \"so:p\",\n            post_logout_redirect_uri: url,\n            // we're putting a dummy entry in here because we\n            // need a unique id from the state for notification\n            // to the parent window, which is necessary if we\n            // plan to return back to the client after signout\n            // and so we can close the popup after signout\n            state: url == null ? undefined : {},\n            ...requestArgs,\n        }, handle);\n        logger.info(\"success\");\n    }\n\n    /**\n     * Process response (callback) from the end session endpoint from a popup window.\n     * It is recommended to use {@link UserManager.signoutCallback} instead.\n     *\n     * @returns A promise\n     *\n     * @see {@link UserManager.signoutCallback}\n     */\n    public async signoutPopupCallback(url = window.location.href, keepOpen = false): Promise<void> {\n        const logger = this._logger.create(\"signoutPopupCallback\");\n        await this._popupNavigator.callback(url, { keepOpen });\n        logger.info(\"success\");\n    }\n\n    protected async _signout(args: CreateSignoutRequestArgs, handle: IWindow): Promise<SignoutResponse> {\n        const navResponse = await this._signoutStart(args, handle);\n        return await this._signoutEnd(navResponse.url);\n    }\n\n    protected async _signoutStart(args: CreateSignoutRequestArgs = {}, handle: IWindow): Promise<NavigateResponse> {\n        const logger = this._logger.create(\"_signoutStart\");\n\n        try {\n            const user = await this._loadUser();\n            logger.debug(\"loaded current user from storage\");\n\n            if (this.settings.revokeTokensOnSignout) {\n                await this._revokeInternal(user);\n            }\n\n            const id_token = args.id_token_hint || user && user.id_token;\n            if (id_token) {\n                logger.debug(\"setting id_token_hint in signout request\");\n                args.id_token_hint = id_token;\n            }\n\n            await this.removeUser();\n            logger.debug(\"user removed, creating signout request\");\n\n            const signoutRequest = await this._client.createSignoutRequest(args);\n            logger.debug(\"got signout request\");\n\n            return await handle.navigate({\n                url: signoutRequest.url,\n                state: signoutRequest.state?.id,\n                scriptOrigin: this.settings.iframeScriptOrigin,\n            });\n        } catch (err) {\n            logger.debug(\"error after preparing navigator, closing navigator window\");\n            handle.close();\n            throw err;\n        }\n    }\n\n    protected async _signoutEnd(url: string): Promise<SignoutResponse> {\n        const logger = this._logger.create(\"_signoutEnd\");\n        const signoutResponse = await this._client.processSignoutResponse(url);\n        logger.debug(\"got signout response\");\n\n        return signoutResponse;\n    }\n\n    /**\n     * Trigger a silent request (via an iframe) to the end session endpoint.\n     *\n     * @returns A promise\n     */\n    public async signoutSilent(args: SignoutSilentArgs = {}): Promise<void> {\n        const logger = this._logger.create(\"signoutSilent\");\n        const {\n            silentRequestTimeoutInSeconds,\n            ...requestArgs\n        } = args;\n\n        const id_token_hint = this.settings.includeIdTokenInSilentSignout\n            ? (await this._loadUser())?.id_token\n            : undefined;\n\n        const url = this.settings.popup_post_logout_redirect_uri;\n        const handle = await this._iframeNavigator.prepare({ silentRequestTimeoutInSeconds });\n        await this._signout({\n            request_type: \"so:s\",\n            post_logout_redirect_uri: url,\n            id_token_hint: id_token_hint,\n            ...requestArgs,\n        }, handle);\n\n        logger.info(\"success\");\n    }\n\n    /**\n     * Notify the parent window of response (callback) from the end session endpoint.\n     * It is recommended to use {@link UserManager.signoutCallback} instead.\n     *\n     * @returns A promise\n     *\n     * @see {@link UserManager.signoutCallback}\n     */\n    public async signoutSilentCallback(url = window.location.href): Promise<void> {\n        const logger = this._logger.create(\"signoutSilentCallback\");\n        await this._iframeNavigator.callback(url);\n        logger.info(\"success\");\n    }\n\n    public async revokeTokens(types?: RevokeTokensTypes): Promise<void> {\n        const user = await this._loadUser();\n        await this._revokeInternal(user, types);\n    }\n\n    protected async _revokeInternal(user: User | null, types = this.settings.revokeTokenTypes): Promise<void> {\n        const logger = this._logger.create(\"_revokeInternal\");\n        if (!user) return;\n\n        const typesPresent = types.filter(type => typeof user[type] === \"string\");\n\n        if (!typesPresent.length) {\n            logger.debug(\"no need to revoke due to no token(s)\");\n            return;\n        }\n\n        // don't Promise.all, order matters\n        for (const type of typesPresent) {\n            await this._client.revokeToken(\n                user[type]!, // eslint-disable-line @typescript-eslint/no-non-null-assertion\n                type,\n            );\n            logger.info(`${type} revoked successfully`);\n            if (type !== \"access_token\") {\n                user[type] = null as never;\n            }\n        }\n\n        await this.storeUser(user);\n        logger.debug(\"user stored\");\n        await this._events.load(user);\n    }\n\n    /**\n     * Enables silent renew for the `UserManager`.\n     */\n    public startSilentRenew(): void {\n        this._logger.create(\"startSilentRenew\");\n        void this._silentRenewService.start();\n    }\n\n    /**\n     * Disables silent renew for the `UserManager`.\n     */\n    public stopSilentRenew(): void {\n        this._silentRenewService.stop();\n    }\n\n    protected get _userStoreKey(): string {\n        return `user:${this.settings.authority}:${this.settings.client_id}`;\n    }\n\n    protected async _loadUser(): Promise<User | null> {\n        const logger = this._logger.create(\"_loadUser\");\n        const storageString = await this.settings.userStore.get(this._userStoreKey);\n        if (storageString) {\n            logger.debug(\"user storageString loaded\");\n            return User.fromStorageString(storageString);\n        }\n\n        logger.debug(\"no user storageString\");\n        return null;\n    }\n\n    public async storeUser(user: User | null): Promise<void> {\n        const logger = this._logger.create(\"storeUser\");\n        if (user) {\n            logger.debug(\"storing user\");\n            const storageString = user.toStorageString();\n            await this.settings.userStore.set(this._userStoreKey, storageString);\n        } else {\n            this._logger.debug(\"removing user\");\n            await this.settings.userStore.remove(this._userStoreKey);\n            if (this.settings.dpop) {\n                await this.settings.dpop.store.remove(this.settings.client_id);\n            }\n        }\n    }\n\n    /**\n     * Removes stale state entries in storage for incomplete authorize requests.\n     */\n    public async clearStaleState(): Promise<void> {\n        await this._client.clearStaleState();\n    }\n\n    /**\n     * Dynamically generates a DPoP proof for a given user, URL and optional Http method.\n     * This method is useful when you need to make a request to a resource server\n     * with fetch or similar, and you need to include a DPoP proof in a DPoP header.\n     * @param url - The URL to generate the DPoP proof for\n     * @param user - The user to generate the DPoP proof for\n     * @param httpMethod - Optional, defaults to \"GET\"\n     * @param nonce - Optional nonce provided by the resource server\n     *\n     * @returns A promise containing the DPoP proof or undefined if DPoP is not enabled/no user is found.\n     */\n    public async dpopProof(url: string, user: User, httpMethod?: string, nonce?: string): Promise<string | undefined> {\n        const dpopState = await this.settings.dpop?.store?.get(this.settings.client_id);\n        if (dpopState) {\n            return await CryptoUtils.generateDPoPProof({\n                url,\n                accessToken: user?.access_token,\n                httpMethod: httpMethod,\n                keyPair: dpopState.keys,\n                nonce,\n            });\n        }\n        return undefined;\n    }\n\n    async generateDPoPJkt(dpopSettings: DPoPSettings): Promise<string | undefined> {\n        let dpopState = await dpopSettings.store.get(this.settings.client_id);\n        if (!dpopState) {\n            const dpopKeys = await CryptoUtils.generateDPoPKeys();\n            dpopState = new DPoPState(dpopKeys);\n            await dpopSettings.store.set(this.settings.client_id, dpopState);\n        }\n        return await CryptoUtils.generateDPoPJkt(dpopState.keys);\n    }\n}\n","{\n  \"name\": \"oidc-client-ts\",\n  \"version\": \"3.1.0\",\n  \"description\": \"OpenID Connect (OIDC) & OAuth2 client library\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/authts/oidc-client-ts.git\"\n  },\n  \"homepage\": \"https://github.com/authts/oidc-client-ts#readme\",\n  \"license\": \"Apache-2.0\",\n  \"main\": \"dist/umd/oidc-client-ts.js\",\n  \"types\": \"dist/types/oidc-client-ts.d.ts\",\n  \"exports\": {\n    \".\": {\n      \"types\": \"./dist/types/oidc-client-ts.d.ts\",\n      \"import\": \"./dist/esm/oidc-client-ts.js\",\n      \"require\": \"./dist/umd/oidc-client-ts.js\"\n    },\n    \"./package.json\": \"./package.json\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"keywords\": [\n    \"authentication\",\n    \"oauth2\",\n    \"oidc\",\n    \"openid\",\n    \"OpenID Connect\"\n  ],\n  \"scripts\": {\n    \"build\": \"node scripts/build.js && npm run build-types\",\n    \"build-types\": \"tsc -p tsconfig.build.json && api-extractor run\",\n    \"clean\": \"git clean -fdX dist lib *.tsbuildinfo\",\n    \"prepack\": \"npm run build\",\n    \"test\": \"tsc && jest\",\n    \"typedoc\": \"typedoc\",\n    \"lint\": \"eslint --max-warnings=0 --cache .\",\n    \"prepare\": \"husky\"\n  },\n  \"dependencies\": {\n    \"jwt-decode\": \"^4.0.0\"\n  },\n  \"devDependencies\": {\n    \"@microsoft/api-extractor\": \"^7.47.2\",\n    \"@testing-library/jest-dom\": \"^6.4.6\",\n    \"@types/jest\": \"^29.5.12\",\n    \"@types/node\": \"^22.4.1\",\n    \"@typescript-eslint/eslint-plugin\": \"^7.16.1\",\n    \"@typescript-eslint/parser\": \"^7.16.1\",\n    \"esbuild\": \"^0.24.0\",\n    \"eslint\": \"^8.57.0\",\n    \"eslint-plugin-testing-library\": \"^6.2.2\",\n    \"http-proxy-middleware\": \"^3.0.0\",\n    \"fake-indexeddb\": \"^6.0.0\",\n    \"husky\": \"^9.0.11\",\n    \"jest\": \"^29.7.0\",\n    \"jest-environment-jsdom\": \"^29.7.0\",\n    \"jest-mock\": \"^29.7.0\",\n    \"jose\": \"^5.6.3\",\n    \"lint-staged\": \"^15.2.7\",\n    \"ts-jest\": \"^29.2.2\",\n    \"typedoc\": \"^0.26.4\",\n    \"typescript\": \"~5.4.2\",\n    \"yn\": \"^5.0.0\"\n  },\n  \"engines\": {\n    \"node\": \">=18\"\n  },\n  \"lint-staged\": {\n    \"*.{js,jsx,ts,tsx}\": \"eslint --cache --fix\"\n  }\n}\n","// @ts-expect-error avoid enabling resolveJsonModule to keep build process simple\nimport { version } from \"../package.json\";\n\n/**\n * @public\n */\nexport const Version: string = version;\n","import { DPoPState, type DPoPStore } from \"./DPoPStore\";\n\n/**\n * Provides a default implementation of the DPoP store using IndexedDB.\n *\n * @public\n */\nexport class IndexedDbDPoPStore implements DPoPStore {\n    readonly _dbName: string = \"oidc\";\n    readonly _storeName: string = \"dpop\";\n\n    public async set(key: string, value: DPoPState): Promise<void> {\n        const store = await this.createStore(this._dbName, this._storeName);\n        await store(\"readwrite\", (str: IDBObjectStore) => {\n            str.put(value, key);\n            return this.promisifyRequest(str.transaction);\n        });\n    }\n\n    public async get(key: string): Promise<DPoPState> {\n        const store = await this.createStore(this._dbName, this._storeName);\n        return await store(\"readonly\", (str) => {\n            return this.promisifyRequest(str.get(key));\n        }) as DPoPState;\n    }\n\n    public async remove(key: string): Promise<DPoPState> {\n        const item = await this.get(key);\n        const store = await this.createStore(this._dbName, this._storeName);\n        await store(\"readwrite\", (str) => {\n            return this.promisifyRequest(str.delete(key));\n        });\n        return item;\n    }\n\n    public async getAllKeys(): Promise<string[]> {\n        const store = await this.createStore(this._dbName, this._storeName);\n        return await store(\"readonly\", (str) => {\n            return this.promisifyRequest(str.getAllKeys());\n        }) as string[];\n    }\n\n    promisifyRequest<T = undefined>(\n        request: IDBRequest<T> | IDBTransaction): Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            (request as IDBTransaction).oncomplete = (request as IDBRequest<T>).onsuccess = () => resolve((request as IDBRequest<T>).result);\n            (request as IDBTransaction).onabort = (request as IDBRequest<T>).onerror = () => reject((request as IDBRequest<T>).error);\n        });\n    }\n\n    async createStore<T>(\n        dbName: string,\n        storeName: string,\n    ): Promise<(txMode: IDBTransactionMode, callback: (store: IDBObjectStore) => T | PromiseLike<T>) => Promise<T>> {\n        const request = indexedDB.open(dbName);\n        request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n        const db = await this.promisifyRequest<IDBDatabase>(request);\n\n        return async (\n            txMode: IDBTransactionMode,\n            callback: (store: IDBObjectStore) => T | PromiseLike<T>,\n        ) => {\n            const tx = db.transaction(storeName, txMode);\n            const store = tx.objectStore(storeName);\n            return await callback(store);\n        };\n    }\n}\n","export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["Log","logger","_a"],"version":3,"file":"index.975ef6c8.js.map","sourceRoot":"/__parcel_source_root/"}